

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Aug 19 17:56:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	text37,local,class=CODE,merge=1,delta=2
    53                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text44,local,class=CODE,merge=1,delta=2
    60                           	psect	text45,local,class=CODE,merge=1,delta=2
    61                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text47,local,class=CODE,merge=1,delta=2
    63                           	psect	text48,local,class=CODE,merge=1,delta=2
    64                           	psect	text49,local,class=CODE,merge=1,delta=2
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    66                           	dabs	1,0x7E,2
    67     0000                     
    68                           ; Generated 07/09/2023 GMT
    69                           ; 
    70                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F1827 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102     0000                     	;# 
   103     0001                     	;# 
   104     0002                     	;# 
   105     0003                     	;# 
   106     0004                     	;# 
   107     0005                     	;# 
   108     0006                     	;# 
   109     0007                     	;# 
   110     0008                     	;# 
   111     0009                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000D                     	;# 
   116     0011                     	;# 
   117     0012                     	;# 
   118     0013                     	;# 
   119     0014                     	;# 
   120     0015                     	;# 
   121     0016                     	;# 
   122     0016                     	;# 
   123     0017                     	;# 
   124     0018                     	;# 
   125     0019                     	;# 
   126     001A                     	;# 
   127     001B                     	;# 
   128     001C                     	;# 
   129     001E                     	;# 
   130     001F                     	;# 
   131     008C                     	;# 
   132     008D                     	;# 
   133     0091                     	;# 
   134     0092                     	;# 
   135     0093                     	;# 
   136     0094                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0097                     	;# 
   140     0098                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009B                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     0111                     	;# 
   151     0112                     	;# 
   152     0113                     	;# 
   153     0114                     	;# 
   154     0115                     	;# 
   155     0116                     	;# 
   156     0117                     	;# 
   157     0118                     	;# 
   158     0119                     	;# 
   159     011A                     	;# 
   160     011B                     	;# 
   161     011D                     	;# 
   162     011E                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0191                     	;# 
   166     0191                     	;# 
   167     0192                     	;# 
   168     0193                     	;# 
   169     0193                     	;# 
   170     0193                     	;# 
   171     0194                     	;# 
   172     0195                     	;# 
   173     0196                     	;# 
   174     0199                     	;# 
   175     019A                     	;# 
   176     019B                     	;# 
   177     019B                     	;# 
   178     019B                     	;# 
   179     019B                     	;# 
   180     019C                     	;# 
   181     019C                     	;# 
   182     019D                     	;# 
   183     019E                     	;# 
   184     019F                     	;# 
   185     020C                     	;# 
   186     020D                     	;# 
   187     0211                     	;# 
   188     0211                     	;# 
   189     0212                     	;# 
   190     0212                     	;# 
   191     0213                     	;# 
   192     0213                     	;# 
   193     0214                     	;# 
   194     0214                     	;# 
   195     0215                     	;# 
   196     0215                     	;# 
   197     0215                     	;# 
   198     0216                     	;# 
   199     0216                     	;# 
   200     0217                     	;# 
   201     0217                     	;# 
   202     0219                     	;# 
   203     021A                     	;# 
   204     021B                     	;# 
   205     021C                     	;# 
   206     021D                     	;# 
   207     021E                     	;# 
   208     021F                     	;# 
   209     0291                     	;# 
   210     0291                     	;# 
   211     0292                     	;# 
   212     0293                     	;# 
   213     0294                     	;# 
   214     0295                     	;# 
   215     0295                     	;# 
   216     0296                     	;# 
   217     0298                     	;# 
   218     0298                     	;# 
   219     0299                     	;# 
   220     029A                     	;# 
   221     029B                     	;# 
   222     029C                     	;# 
   223     029C                     	;# 
   224     029D                     	;# 
   225     029E                     	;# 
   226     029E                     	;# 
   227     0311                     	;# 
   228     0311                     	;# 
   229     0312                     	;# 
   230     0313                     	;# 
   231     0318                     	;# 
   232     0318                     	;# 
   233     0319                     	;# 
   234     031A                     	;# 
   235     0394                     	;# 
   236     0395                     	;# 
   237     0396                     	;# 
   238     039A                     	;# 
   239     039C                     	;# 
   240     039D                     	;# 
   241     039E                     	;# 
   242     039F                     	;# 
   243     0415                     	;# 
   244     0416                     	;# 
   245     0417                     	;# 
   246     041C                     	;# 
   247     041D                     	;# 
   248     041E                     	;# 
   249     0FE4                     	;# 
   250     0FE5                     	;# 
   251     0FE6                     	;# 
   252     0FE7                     	;# 
   253     0FE8                     	;# 
   254     0FE9                     	;# 
   255     0FEA                     	;# 
   256     0FEB                     	;# 
   257     0FED                     	;# 
   258     0FEE                     	;# 
   259     0FEF                     	;# 
   260     0000                     	;# 
   261     0001                     	;# 
   262     0002                     	;# 
   263     0003                     	;# 
   264     0004                     	;# 
   265     0005                     	;# 
   266     0006                     	;# 
   267     0007                     	;# 
   268     0008                     	;# 
   269     0009                     	;# 
   270     000A                     	;# 
   271     000B                     	;# 
   272     000C                     	;# 
   273     000D                     	;# 
   274     0011                     	;# 
   275     0012                     	;# 
   276     0013                     	;# 
   277     0014                     	;# 
   278     0015                     	;# 
   279     0016                     	;# 
   280     0016                     	;# 
   281     0017                     	;# 
   282     0018                     	;# 
   283     0019                     	;# 
   284     001A                     	;# 
   285     001B                     	;# 
   286     001C                     	;# 
   287     001E                     	;# 
   288     001F                     	;# 
   289     008C                     	;# 
   290     008D                     	;# 
   291     0091                     	;# 
   292     0092                     	;# 
   293     0093                     	;# 
   294     0094                     	;# 
   295     0095                     	;# 
   296     0096                     	;# 
   297     0097                     	;# 
   298     0098                     	;# 
   299     0099                     	;# 
   300     009A                     	;# 
   301     009B                     	;# 
   302     009B                     	;# 
   303     009C                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     010C                     	;# 
   307     010D                     	;# 
   308     0111                     	;# 
   309     0112                     	;# 
   310     0113                     	;# 
   311     0114                     	;# 
   312     0115                     	;# 
   313     0116                     	;# 
   314     0117                     	;# 
   315     0118                     	;# 
   316     0119                     	;# 
   317     011A                     	;# 
   318     011B                     	;# 
   319     011D                     	;# 
   320     011E                     	;# 
   321     018C                     	;# 
   322     018D                     	;# 
   323     0191                     	;# 
   324     0191                     	;# 
   325     0192                     	;# 
   326     0193                     	;# 
   327     0193                     	;# 
   328     0193                     	;# 
   329     0194                     	;# 
   330     0195                     	;# 
   331     0196                     	;# 
   332     0199                     	;# 
   333     019A                     	;# 
   334     019B                     	;# 
   335     019B                     	;# 
   336     019B                     	;# 
   337     019B                     	;# 
   338     019C                     	;# 
   339     019C                     	;# 
   340     019D                     	;# 
   341     019E                     	;# 
   342     019F                     	;# 
   343     020C                     	;# 
   344     020D                     	;# 
   345     0211                     	;# 
   346     0211                     	;# 
   347     0212                     	;# 
   348     0212                     	;# 
   349     0213                     	;# 
   350     0213                     	;# 
   351     0214                     	;# 
   352     0214                     	;# 
   353     0215                     	;# 
   354     0215                     	;# 
   355     0215                     	;# 
   356     0216                     	;# 
   357     0216                     	;# 
   358     0217                     	;# 
   359     0217                     	;# 
   360     0219                     	;# 
   361     021A                     	;# 
   362     021B                     	;# 
   363     021C                     	;# 
   364     021D                     	;# 
   365     021E                     	;# 
   366     021F                     	;# 
   367     0291                     	;# 
   368     0291                     	;# 
   369     0292                     	;# 
   370     0293                     	;# 
   371     0294                     	;# 
   372     0295                     	;# 
   373     0295                     	;# 
   374     0296                     	;# 
   375     0298                     	;# 
   376     0298                     	;# 
   377     0299                     	;# 
   378     029A                     	;# 
   379     029B                     	;# 
   380     029C                     	;# 
   381     029C                     	;# 
   382     029D                     	;# 
   383     029E                     	;# 
   384     029E                     	;# 
   385     0311                     	;# 
   386     0311                     	;# 
   387     0312                     	;# 
   388     0313                     	;# 
   389     0318                     	;# 
   390     0318                     	;# 
   391     0319                     	;# 
   392     031A                     	;# 
   393     0394                     	;# 
   394     0395                     	;# 
   395     0396                     	;# 
   396     039A                     	;# 
   397     039C                     	;# 
   398     039D                     	;# 
   399     039E                     	;# 
   400     039F                     	;# 
   401     0415                     	;# 
   402     0416                     	;# 
   403     0417                     	;# 
   404     041C                     	;# 
   405     041D                     	;# 
   406     041E                     	;# 
   407     0FE4                     	;# 
   408     0FE5                     	;# 
   409     0FE6                     	;# 
   410     0FE7                     	;# 
   411     0FE8                     	;# 
   412     0FE9                     	;# 
   413     0FEA                     	;# 
   414     0FEB                     	;# 
   415     0FED                     	;# 
   416     0FEE                     	;# 
   417     0FEF                     	;# 
   418     0000                     	;# 
   419     0001                     	;# 
   420     0002                     	;# 
   421     0003                     	;# 
   422     0004                     	;# 
   423     0005                     	;# 
   424     0006                     	;# 
   425     0007                     	;# 
   426     0008                     	;# 
   427     0009                     	;# 
   428     000A                     	;# 
   429     000B                     	;# 
   430     000C                     	;# 
   431     000D                     	;# 
   432     0011                     	;# 
   433     0012                     	;# 
   434     0013                     	;# 
   435     0014                     	;# 
   436     0015                     	;# 
   437     0016                     	;# 
   438     0016                     	;# 
   439     0017                     	;# 
   440     0018                     	;# 
   441     0019                     	;# 
   442     001A                     	;# 
   443     001B                     	;# 
   444     001C                     	;# 
   445     001E                     	;# 
   446     001F                     	;# 
   447     008C                     	;# 
   448     008D                     	;# 
   449     0091                     	;# 
   450     0092                     	;# 
   451     0093                     	;# 
   452     0094                     	;# 
   453     0095                     	;# 
   454     0096                     	;# 
   455     0097                     	;# 
   456     0098                     	;# 
   457     0099                     	;# 
   458     009A                     	;# 
   459     009B                     	;# 
   460     009B                     	;# 
   461     009C                     	;# 
   462     009D                     	;# 
   463     009E                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     0111                     	;# 
   467     0112                     	;# 
   468     0113                     	;# 
   469     0114                     	;# 
   470     0115                     	;# 
   471     0116                     	;# 
   472     0117                     	;# 
   473     0118                     	;# 
   474     0119                     	;# 
   475     011A                     	;# 
   476     011B                     	;# 
   477     011D                     	;# 
   478     011E                     	;# 
   479     018C                     	;# 
   480     018D                     	;# 
   481     0191                     	;# 
   482     0191                     	;# 
   483     0192                     	;# 
   484     0193                     	;# 
   485     0193                     	;# 
   486     0193                     	;# 
   487     0194                     	;# 
   488     0195                     	;# 
   489     0196                     	;# 
   490     0199                     	;# 
   491     019A                     	;# 
   492     019B                     	;# 
   493     019B                     	;# 
   494     019B                     	;# 
   495     019B                     	;# 
   496     019C                     	;# 
   497     019C                     	;# 
   498     019D                     	;# 
   499     019E                     	;# 
   500     019F                     	;# 
   501     020C                     	;# 
   502     020D                     	;# 
   503     0211                     	;# 
   504     0211                     	;# 
   505     0212                     	;# 
   506     0212                     	;# 
   507     0213                     	;# 
   508     0213                     	;# 
   509     0214                     	;# 
   510     0214                     	;# 
   511     0215                     	;# 
   512     0215                     	;# 
   513     0215                     	;# 
   514     0216                     	;# 
   515     0216                     	;# 
   516     0217                     	;# 
   517     0217                     	;# 
   518     0219                     	;# 
   519     021A                     	;# 
   520     021B                     	;# 
   521     021C                     	;# 
   522     021D                     	;# 
   523     021E                     	;# 
   524     021F                     	;# 
   525     0291                     	;# 
   526     0291                     	;# 
   527     0292                     	;# 
   528     0293                     	;# 
   529     0294                     	;# 
   530     0295                     	;# 
   531     0295                     	;# 
   532     0296                     	;# 
   533     0298                     	;# 
   534     0298                     	;# 
   535     0299                     	;# 
   536     029A                     	;# 
   537     029B                     	;# 
   538     029C                     	;# 
   539     029C                     	;# 
   540     029D                     	;# 
   541     029E                     	;# 
   542     029E                     	;# 
   543     0311                     	;# 
   544     0311                     	;# 
   545     0312                     	;# 
   546     0313                     	;# 
   547     0318                     	;# 
   548     0318                     	;# 
   549     0319                     	;# 
   550     031A                     	;# 
   551     0394                     	;# 
   552     0395                     	;# 
   553     0396                     	;# 
   554     039A                     	;# 
   555     039C                     	;# 
   556     039D                     	;# 
   557     039E                     	;# 
   558     039F                     	;# 
   559     0415                     	;# 
   560     0416                     	;# 
   561     0417                     	;# 
   562     041C                     	;# 
   563     041D                     	;# 
   564     041E                     	;# 
   565     0FE4                     	;# 
   566     0FE5                     	;# 
   567     0FE6                     	;# 
   568     0FE7                     	;# 
   569     0FE8                     	;# 
   570     0FE9                     	;# 
   571     0FEA                     	;# 
   572     0FEB                     	;# 
   573     0FED                     	;# 
   574     0FEE                     	;# 
   575     0FEF                     	;# 
   576     0000                     	;# 
   577     0001                     	;# 
   578     0002                     	;# 
   579     0003                     	;# 
   580     0004                     	;# 
   581     0005                     	;# 
   582     0006                     	;# 
   583     0007                     	;# 
   584     0008                     	;# 
   585     0009                     	;# 
   586     000A                     	;# 
   587     000B                     	;# 
   588     000C                     	;# 
   589     000D                     	;# 
   590     0011                     	;# 
   591     0012                     	;# 
   592     0013                     	;# 
   593     0014                     	;# 
   594     0015                     	;# 
   595     0016                     	;# 
   596     0016                     	;# 
   597     0017                     	;# 
   598     0018                     	;# 
   599     0019                     	;# 
   600     001A                     	;# 
   601     001B                     	;# 
   602     001C                     	;# 
   603     001E                     	;# 
   604     001F                     	;# 
   605     008C                     	;# 
   606     008D                     	;# 
   607     0091                     	;# 
   608     0092                     	;# 
   609     0093                     	;# 
   610     0094                     	;# 
   611     0095                     	;# 
   612     0096                     	;# 
   613     0097                     	;# 
   614     0098                     	;# 
   615     0099                     	;# 
   616     009A                     	;# 
   617     009B                     	;# 
   618     009B                     	;# 
   619     009C                     	;# 
   620     009D                     	;# 
   621     009E                     	;# 
   622     010C                     	;# 
   623     010D                     	;# 
   624     0111                     	;# 
   625     0112                     	;# 
   626     0113                     	;# 
   627     0114                     	;# 
   628     0115                     	;# 
   629     0116                     	;# 
   630     0117                     	;# 
   631     0118                     	;# 
   632     0119                     	;# 
   633     011A                     	;# 
   634     011B                     	;# 
   635     011D                     	;# 
   636     011E                     	;# 
   637     018C                     	;# 
   638     018D                     	;# 
   639     0191                     	;# 
   640     0191                     	;# 
   641     0192                     	;# 
   642     0193                     	;# 
   643     0193                     	;# 
   644     0193                     	;# 
   645     0194                     	;# 
   646     0195                     	;# 
   647     0196                     	;# 
   648     0199                     	;# 
   649     019A                     	;# 
   650     019B                     	;# 
   651     019B                     	;# 
   652     019B                     	;# 
   653     019B                     	;# 
   654     019C                     	;# 
   655     019C                     	;# 
   656     019D                     	;# 
   657     019E                     	;# 
   658     019F                     	;# 
   659     020C                     	;# 
   660     020D                     	;# 
   661     0211                     	;# 
   662     0211                     	;# 
   663     0212                     	;# 
   664     0212                     	;# 
   665     0213                     	;# 
   666     0213                     	;# 
   667     0214                     	;# 
   668     0214                     	;# 
   669     0215                     	;# 
   670     0215                     	;# 
   671     0215                     	;# 
   672     0216                     	;# 
   673     0216                     	;# 
   674     0217                     	;# 
   675     0217                     	;# 
   676     0219                     	;# 
   677     021A                     	;# 
   678     021B                     	;# 
   679     021C                     	;# 
   680     021D                     	;# 
   681     021E                     	;# 
   682     021F                     	;# 
   683     0291                     	;# 
   684     0291                     	;# 
   685     0292                     	;# 
   686     0293                     	;# 
   687     0294                     	;# 
   688     0295                     	;# 
   689     0295                     	;# 
   690     0296                     	;# 
   691     0298                     	;# 
   692     0298                     	;# 
   693     0299                     	;# 
   694     029A                     	;# 
   695     029B                     	;# 
   696     029C                     	;# 
   697     029C                     	;# 
   698     029D                     	;# 
   699     029E                     	;# 
   700     029E                     	;# 
   701     0311                     	;# 
   702     0311                     	;# 
   703     0312                     	;# 
   704     0313                     	;# 
   705     0318                     	;# 
   706     0318                     	;# 
   707     0319                     	;# 
   708     031A                     	;# 
   709     0394                     	;# 
   710     0395                     	;# 
   711     0396                     	;# 
   712     039A                     	;# 
   713     039C                     	;# 
   714     039D                     	;# 
   715     039E                     	;# 
   716     039F                     	;# 
   717     0415                     	;# 
   718     0416                     	;# 
   719     0417                     	;# 
   720     041C                     	;# 
   721     041D                     	;# 
   722     041E                     	;# 
   723     0FE4                     	;# 
   724     0FE5                     	;# 
   725     0FE6                     	;# 
   726     0FE7                     	;# 
   727     0FE8                     	;# 
   728     0FE9                     	;# 
   729     0FEA                     	;# 
   730     0FEB                     	;# 
   731     0FED                     	;# 
   732     0FEE                     	;# 
   733     0FEF                     	;# 
   734     0000                     	;# 
   735     0001                     	;# 
   736     0002                     	;# 
   737     0003                     	;# 
   738     0004                     	;# 
   739     0005                     	;# 
   740     0006                     	;# 
   741     0007                     	;# 
   742     0008                     	;# 
   743     0009                     	;# 
   744     000A                     	;# 
   745     000B                     	;# 
   746     000C                     	;# 
   747     000D                     	;# 
   748     0011                     	;# 
   749     0012                     	;# 
   750     0013                     	;# 
   751     0014                     	;# 
   752     0015                     	;# 
   753     0016                     	;# 
   754     0016                     	;# 
   755     0017                     	;# 
   756     0018                     	;# 
   757     0019                     	;# 
   758     001A                     	;# 
   759     001B                     	;# 
   760     001C                     	;# 
   761     001E                     	;# 
   762     001F                     	;# 
   763     008C                     	;# 
   764     008D                     	;# 
   765     0091                     	;# 
   766     0092                     	;# 
   767     0093                     	;# 
   768     0094                     	;# 
   769     0095                     	;# 
   770     0096                     	;# 
   771     0097                     	;# 
   772     0098                     	;# 
   773     0099                     	;# 
   774     009A                     	;# 
   775     009B                     	;# 
   776     009B                     	;# 
   777     009C                     	;# 
   778     009D                     	;# 
   779     009E                     	;# 
   780     010C                     	;# 
   781     010D                     	;# 
   782     0111                     	;# 
   783     0112                     	;# 
   784     0113                     	;# 
   785     0114                     	;# 
   786     0115                     	;# 
   787     0116                     	;# 
   788     0117                     	;# 
   789     0118                     	;# 
   790     0119                     	;# 
   791     011A                     	;# 
   792     011B                     	;# 
   793     011D                     	;# 
   794     011E                     	;# 
   795     018C                     	;# 
   796     018D                     	;# 
   797     0191                     	;# 
   798     0191                     	;# 
   799     0192                     	;# 
   800     0193                     	;# 
   801     0193                     	;# 
   802     0193                     	;# 
   803     0194                     	;# 
   804     0195                     	;# 
   805     0196                     	;# 
   806     0199                     	;# 
   807     019A                     	;# 
   808     019B                     	;# 
   809     019B                     	;# 
   810     019B                     	;# 
   811     019B                     	;# 
   812     019C                     	;# 
   813     019C                     	;# 
   814     019D                     	;# 
   815     019E                     	;# 
   816     019F                     	;# 
   817     020C                     	;# 
   818     020D                     	;# 
   819     0211                     	;# 
   820     0211                     	;# 
   821     0212                     	;# 
   822     0212                     	;# 
   823     0213                     	;# 
   824     0213                     	;# 
   825     0214                     	;# 
   826     0214                     	;# 
   827     0215                     	;# 
   828     0215                     	;# 
   829     0215                     	;# 
   830     0216                     	;# 
   831     0216                     	;# 
   832     0217                     	;# 
   833     0217                     	;# 
   834     0219                     	;# 
   835     021A                     	;# 
   836     021B                     	;# 
   837     021C                     	;# 
   838     021D                     	;# 
   839     021E                     	;# 
   840     021F                     	;# 
   841     0291                     	;# 
   842     0291                     	;# 
   843     0292                     	;# 
   844     0293                     	;# 
   845     0294                     	;# 
   846     0295                     	;# 
   847     0295                     	;# 
   848     0296                     	;# 
   849     0298                     	;# 
   850     0298                     	;# 
   851     0299                     	;# 
   852     029A                     	;# 
   853     029B                     	;# 
   854     029C                     	;# 
   855     029C                     	;# 
   856     029D                     	;# 
   857     029E                     	;# 
   858     029E                     	;# 
   859     0311                     	;# 
   860     0311                     	;# 
   861     0312                     	;# 
   862     0313                     	;# 
   863     0318                     	;# 
   864     0318                     	;# 
   865     0319                     	;# 
   866     031A                     	;# 
   867     0394                     	;# 
   868     0395                     	;# 
   869     0396                     	;# 
   870     039A                     	;# 
   871     039C                     	;# 
   872     039D                     	;# 
   873     039E                     	;# 
   874     039F                     	;# 
   875     0415                     	;# 
   876     0416                     	;# 
   877     0417                     	;# 
   878     041C                     	;# 
   879     041D                     	;# 
   880     041E                     	;# 
   881     0FE4                     	;# 
   882     0FE5                     	;# 
   883     0FE6                     	;# 
   884     0FE7                     	;# 
   885     0FE8                     	;# 
   886     0FE9                     	;# 
   887     0FEA                     	;# 
   888     0FEB                     	;# 
   889     0FED                     	;# 
   890     0FEE                     	;# 
   891     0FEF                     	;# 
   892     0000                     	;# 
   893     0001                     	;# 
   894     0002                     	;# 
   895     0003                     	;# 
   896     0004                     	;# 
   897     0005                     	;# 
   898     0006                     	;# 
   899     0007                     	;# 
   900     0008                     	;# 
   901     0009                     	;# 
   902     000A                     	;# 
   903     000B                     	;# 
   904     000C                     	;# 
   905     000D                     	;# 
   906     0011                     	;# 
   907     0012                     	;# 
   908     0013                     	;# 
   909     0014                     	;# 
   910     0015                     	;# 
   911     0016                     	;# 
   912     0016                     	;# 
   913     0017                     	;# 
   914     0018                     	;# 
   915     0019                     	;# 
   916     001A                     	;# 
   917     001B                     	;# 
   918     001C                     	;# 
   919     001E                     	;# 
   920     001F                     	;# 
   921     008C                     	;# 
   922     008D                     	;# 
   923     0091                     	;# 
   924     0092                     	;# 
   925     0093                     	;# 
   926     0094                     	;# 
   927     0095                     	;# 
   928     0096                     	;# 
   929     0097                     	;# 
   930     0098                     	;# 
   931     0099                     	;# 
   932     009A                     	;# 
   933     009B                     	;# 
   934     009B                     	;# 
   935     009C                     	;# 
   936     009D                     	;# 
   937     009E                     	;# 
   938     010C                     	;# 
   939     010D                     	;# 
   940     0111                     	;# 
   941     0112                     	;# 
   942     0113                     	;# 
   943     0114                     	;# 
   944     0115                     	;# 
   945     0116                     	;# 
   946     0117                     	;# 
   947     0118                     	;# 
   948     0119                     	;# 
   949     011A                     	;# 
   950     011B                     	;# 
   951     011D                     	;# 
   952     011E                     	;# 
   953     018C                     	;# 
   954     018D                     	;# 
   955     0191                     	;# 
   956     0191                     	;# 
   957     0192                     	;# 
   958     0193                     	;# 
   959     0193                     	;# 
   960     0193                     	;# 
   961     0194                     	;# 
   962     0195                     	;# 
   963     0196                     	;# 
   964     0199                     	;# 
   965     019A                     	;# 
   966     019B                     	;# 
   967     019B                     	;# 
   968     019B                     	;# 
   969     019B                     	;# 
   970     019C                     	;# 
   971     019C                     	;# 
   972     019D                     	;# 
   973     019E                     	;# 
   974     019F                     	;# 
   975     020C                     	;# 
   976     020D                     	;# 
   977     0211                     	;# 
   978     0211                     	;# 
   979     0212                     	;# 
   980     0212                     	;# 
   981     0213                     	;# 
   982     0213                     	;# 
   983     0214                     	;# 
   984     0214                     	;# 
   985     0215                     	;# 
   986     0215                     	;# 
   987     0215                     	;# 
   988     0216                     	;# 
   989     0216                     	;# 
   990     0217                     	;# 
   991     0217                     	;# 
   992     0219                     	;# 
   993     021A                     	;# 
   994     021B                     	;# 
   995     021C                     	;# 
   996     021D                     	;# 
   997     021E                     	;# 
   998     021F                     	;# 
   999     0291                     	;# 
  1000     0291                     	;# 
  1001     0292                     	;# 
  1002     0293                     	;# 
  1003     0294                     	;# 
  1004     0295                     	;# 
  1005     0295                     	;# 
  1006     0296                     	;# 
  1007     0298                     	;# 
  1008     0298                     	;# 
  1009     0299                     	;# 
  1010     029A                     	;# 
  1011     029B                     	;# 
  1012     029C                     	;# 
  1013     029C                     	;# 
  1014     029D                     	;# 
  1015     029E                     	;# 
  1016     029E                     	;# 
  1017     0311                     	;# 
  1018     0311                     	;# 
  1019     0312                     	;# 
  1020     0313                     	;# 
  1021     0318                     	;# 
  1022     0318                     	;# 
  1023     0319                     	;# 
  1024     031A                     	;# 
  1025     0394                     	;# 
  1026     0395                     	;# 
  1027     0396                     	;# 
  1028     039A                     	;# 
  1029     039C                     	;# 
  1030     039D                     	;# 
  1031     039E                     	;# 
  1032     039F                     	;# 
  1033     0415                     	;# 
  1034     0416                     	;# 
  1035     0417                     	;# 
  1036     041C                     	;# 
  1037     041D                     	;# 
  1038     041E                     	;# 
  1039     0FE4                     	;# 
  1040     0FE5                     	;# 
  1041     0FE6                     	;# 
  1042     0FE7                     	;# 
  1043     0FE8                     	;# 
  1044     0FE9                     	;# 
  1045     0FEA                     	;# 
  1046     0FEB                     	;# 
  1047     0FED                     	;# 
  1048     0FEE                     	;# 
  1049     0FEF                     	;# 
  1050     0000                     	;# 
  1051     0001                     	;# 
  1052     0002                     	;# 
  1053     0003                     	;# 
  1054     0004                     	;# 
  1055     0005                     	;# 
  1056     0006                     	;# 
  1057     0007                     	;# 
  1058     0008                     	;# 
  1059     0009                     	;# 
  1060     000A                     	;# 
  1061     000B                     	;# 
  1062     000C                     	;# 
  1063     000D                     	;# 
  1064     0011                     	;# 
  1065     0012                     	;# 
  1066     0013                     	;# 
  1067     0014                     	;# 
  1068     0015                     	;# 
  1069     0016                     	;# 
  1070     0016                     	;# 
  1071     0017                     	;# 
  1072     0018                     	;# 
  1073     0019                     	;# 
  1074     001A                     	;# 
  1075     001B                     	;# 
  1076     001C                     	;# 
  1077     001E                     	;# 
  1078     001F                     	;# 
  1079     008C                     	;# 
  1080     008D                     	;# 
  1081     0091                     	;# 
  1082     0092                     	;# 
  1083     0093                     	;# 
  1084     0094                     	;# 
  1085     0095                     	;# 
  1086     0096                     	;# 
  1087     0097                     	;# 
  1088     0098                     	;# 
  1089     0099                     	;# 
  1090     009A                     	;# 
  1091     009B                     	;# 
  1092     009B                     	;# 
  1093     009C                     	;# 
  1094     009D                     	;# 
  1095     009E                     	;# 
  1096     010C                     	;# 
  1097     010D                     	;# 
  1098     0111                     	;# 
  1099     0112                     	;# 
  1100     0113                     	;# 
  1101     0114                     	;# 
  1102     0115                     	;# 
  1103     0116                     	;# 
  1104     0117                     	;# 
  1105     0118                     	;# 
  1106     0119                     	;# 
  1107     011A                     	;# 
  1108     011B                     	;# 
  1109     011D                     	;# 
  1110     011E                     	;# 
  1111     018C                     	;# 
  1112     018D                     	;# 
  1113     0191                     	;# 
  1114     0191                     	;# 
  1115     0192                     	;# 
  1116     0193                     	;# 
  1117     0193                     	;# 
  1118     0193                     	;# 
  1119     0194                     	;# 
  1120     0195                     	;# 
  1121     0196                     	;# 
  1122     0199                     	;# 
  1123     019A                     	;# 
  1124     019B                     	;# 
  1125     019B                     	;# 
  1126     019B                     	;# 
  1127     019B                     	;# 
  1128     019C                     	;# 
  1129     019C                     	;# 
  1130     019D                     	;# 
  1131     019E                     	;# 
  1132     019F                     	;# 
  1133     020C                     	;# 
  1134     020D                     	;# 
  1135     0211                     	;# 
  1136     0211                     	;# 
  1137     0212                     	;# 
  1138     0212                     	;# 
  1139     0213                     	;# 
  1140     0213                     	;# 
  1141     0214                     	;# 
  1142     0214                     	;# 
  1143     0215                     	;# 
  1144     0215                     	;# 
  1145     0215                     	;# 
  1146     0216                     	;# 
  1147     0216                     	;# 
  1148     0217                     	;# 
  1149     0217                     	;# 
  1150     0219                     	;# 
  1151     021A                     	;# 
  1152     021B                     	;# 
  1153     021C                     	;# 
  1154     021D                     	;# 
  1155     021E                     	;# 
  1156     021F                     	;# 
  1157     0291                     	;# 
  1158     0291                     	;# 
  1159     0292                     	;# 
  1160     0293                     	;# 
  1161     0294                     	;# 
  1162     0295                     	;# 
  1163     0295                     	;# 
  1164     0296                     	;# 
  1165     0298                     	;# 
  1166     0298                     	;# 
  1167     0299                     	;# 
  1168     029A                     	;# 
  1169     029B                     	;# 
  1170     029C                     	;# 
  1171     029C                     	;# 
  1172     029D                     	;# 
  1173     029E                     	;# 
  1174     029E                     	;# 
  1175     0311                     	;# 
  1176     0311                     	;# 
  1177     0312                     	;# 
  1178     0313                     	;# 
  1179     0318                     	;# 
  1180     0318                     	;# 
  1181     0319                     	;# 
  1182     031A                     	;# 
  1183     0394                     	;# 
  1184     0395                     	;# 
  1185     0396                     	;# 
  1186     039A                     	;# 
  1187     039C                     	;# 
  1188     039D                     	;# 
  1189     039E                     	;# 
  1190     039F                     	;# 
  1191     0415                     	;# 
  1192     0416                     	;# 
  1193     0417                     	;# 
  1194     041C                     	;# 
  1195     041D                     	;# 
  1196     041E                     	;# 
  1197     0FE4                     	;# 
  1198     0FE5                     	;# 
  1199     0FE6                     	;# 
  1200     0FE7                     	;# 
  1201     0FE8                     	;# 
  1202     0FE9                     	;# 
  1203     0FEA                     	;# 
  1204     0FEB                     	;# 
  1205     0FED                     	;# 
  1206     0FEE                     	;# 
  1207     0FEF                     	;# 
  1208     0000                     	;# 
  1209     0001                     	;# 
  1210     0002                     	;# 
  1211     0003                     	;# 
  1212     0004                     	;# 
  1213     0005                     	;# 
  1214     0006                     	;# 
  1215     0007                     	;# 
  1216     0008                     	;# 
  1217     0009                     	;# 
  1218     000A                     	;# 
  1219     000B                     	;# 
  1220     000C                     	;# 
  1221     000D                     	;# 
  1222     0011                     	;# 
  1223     0012                     	;# 
  1224     0013                     	;# 
  1225     0014                     	;# 
  1226     0015                     	;# 
  1227     0016                     	;# 
  1228     0016                     	;# 
  1229     0017                     	;# 
  1230     0018                     	;# 
  1231     0019                     	;# 
  1232     001A                     	;# 
  1233     001B                     	;# 
  1234     001C                     	;# 
  1235     001E                     	;# 
  1236     001F                     	;# 
  1237     008C                     	;# 
  1238     008D                     	;# 
  1239     0091                     	;# 
  1240     0092                     	;# 
  1241     0093                     	;# 
  1242     0094                     	;# 
  1243     0095                     	;# 
  1244     0096                     	;# 
  1245     0097                     	;# 
  1246     0098                     	;# 
  1247     0099                     	;# 
  1248     009A                     	;# 
  1249     009B                     	;# 
  1250     009B                     	;# 
  1251     009C                     	;# 
  1252     009D                     	;# 
  1253     009E                     	;# 
  1254     010C                     	;# 
  1255     010D                     	;# 
  1256     0111                     	;# 
  1257     0112                     	;# 
  1258     0113                     	;# 
  1259     0114                     	;# 
  1260     0115                     	;# 
  1261     0116                     	;# 
  1262     0117                     	;# 
  1263     0118                     	;# 
  1264     0119                     	;# 
  1265     011A                     	;# 
  1266     011B                     	;# 
  1267     011D                     	;# 
  1268     011E                     	;# 
  1269     018C                     	;# 
  1270     018D                     	;# 
  1271     0191                     	;# 
  1272     0191                     	;# 
  1273     0192                     	;# 
  1274     0193                     	;# 
  1275     0193                     	;# 
  1276     0193                     	;# 
  1277     0194                     	;# 
  1278     0195                     	;# 
  1279     0196                     	;# 
  1280     0199                     	;# 
  1281     019A                     	;# 
  1282     019B                     	;# 
  1283     019B                     	;# 
  1284     019B                     	;# 
  1285     019B                     	;# 
  1286     019C                     	;# 
  1287     019C                     	;# 
  1288     019D                     	;# 
  1289     019E                     	;# 
  1290     019F                     	;# 
  1291     020C                     	;# 
  1292     020D                     	;# 
  1293     0211                     	;# 
  1294     0211                     	;# 
  1295     0212                     	;# 
  1296     0212                     	;# 
  1297     0213                     	;# 
  1298     0213                     	;# 
  1299     0214                     	;# 
  1300     0214                     	;# 
  1301     0215                     	;# 
  1302     0215                     	;# 
  1303     0215                     	;# 
  1304     0216                     	;# 
  1305     0216                     	;# 
  1306     0217                     	;# 
  1307     0217                     	;# 
  1308     0219                     	;# 
  1309     021A                     	;# 
  1310     021B                     	;# 
  1311     021C                     	;# 
  1312     021D                     	;# 
  1313     021E                     	;# 
  1314     021F                     	;# 
  1315     0291                     	;# 
  1316     0291                     	;# 
  1317     0292                     	;# 
  1318     0293                     	;# 
  1319     0294                     	;# 
  1320     0295                     	;# 
  1321     0295                     	;# 
  1322     0296                     	;# 
  1323     0298                     	;# 
  1324     0298                     	;# 
  1325     0299                     	;# 
  1326     029A                     	;# 
  1327     029B                     	;# 
  1328     029C                     	;# 
  1329     029C                     	;# 
  1330     029D                     	;# 
  1331     029E                     	;# 
  1332     029E                     	;# 
  1333     0311                     	;# 
  1334     0311                     	;# 
  1335     0312                     	;# 
  1336     0313                     	;# 
  1337     0318                     	;# 
  1338     0318                     	;# 
  1339     0319                     	;# 
  1340     031A                     	;# 
  1341     0394                     	;# 
  1342     0395                     	;# 
  1343     0396                     	;# 
  1344     039A                     	;# 
  1345     039C                     	;# 
  1346     039D                     	;# 
  1347     039E                     	;# 
  1348     039F                     	;# 
  1349     0415                     	;# 
  1350     0416                     	;# 
  1351     0417                     	;# 
  1352     041C                     	;# 
  1353     041D                     	;# 
  1354     041E                     	;# 
  1355     0FE4                     	;# 
  1356     0FE5                     	;# 
  1357     0FE6                     	;# 
  1358     0FE7                     	;# 
  1359     0FE8                     	;# 
  1360     0FE9                     	;# 
  1361     0FEA                     	;# 
  1362     0FEB                     	;# 
  1363     0FED                     	;# 
  1364     0FEE                     	;# 
  1365     0FEF                     	;# 
  1366     0000                     	;# 
  1367     0001                     	;# 
  1368     0002                     	;# 
  1369     0003                     	;# 
  1370     0004                     	;# 
  1371     0005                     	;# 
  1372     0006                     	;# 
  1373     0007                     	;# 
  1374     0008                     	;# 
  1375     0009                     	;# 
  1376     000A                     	;# 
  1377     000B                     	;# 
  1378     000C                     	;# 
  1379     000D                     	;# 
  1380     0011                     	;# 
  1381     0012                     	;# 
  1382     0013                     	;# 
  1383     0014                     	;# 
  1384     0015                     	;# 
  1385     0016                     	;# 
  1386     0016                     	;# 
  1387     0017                     	;# 
  1388     0018                     	;# 
  1389     0019                     	;# 
  1390     001A                     	;# 
  1391     001B                     	;# 
  1392     001C                     	;# 
  1393     001E                     	;# 
  1394     001F                     	;# 
  1395     008C                     	;# 
  1396     008D                     	;# 
  1397     0091                     	;# 
  1398     0092                     	;# 
  1399     0093                     	;# 
  1400     0094                     	;# 
  1401     0095                     	;# 
  1402     0096                     	;# 
  1403     0097                     	;# 
  1404     0098                     	;# 
  1405     0099                     	;# 
  1406     009A                     	;# 
  1407     009B                     	;# 
  1408     009B                     	;# 
  1409     009C                     	;# 
  1410     009D                     	;# 
  1411     009E                     	;# 
  1412     010C                     	;# 
  1413     010D                     	;# 
  1414     0111                     	;# 
  1415     0112                     	;# 
  1416     0113                     	;# 
  1417     0114                     	;# 
  1418     0115                     	;# 
  1419     0116                     	;# 
  1420     0117                     	;# 
  1421     0118                     	;# 
  1422     0119                     	;# 
  1423     011A                     	;# 
  1424     011B                     	;# 
  1425     011D                     	;# 
  1426     011E                     	;# 
  1427     018C                     	;# 
  1428     018D                     	;# 
  1429     0191                     	;# 
  1430     0191                     	;# 
  1431     0192                     	;# 
  1432     0193                     	;# 
  1433     0193                     	;# 
  1434     0193                     	;# 
  1435     0194                     	;# 
  1436     0195                     	;# 
  1437     0196                     	;# 
  1438     0199                     	;# 
  1439     019A                     	;# 
  1440     019B                     	;# 
  1441     019B                     	;# 
  1442     019B                     	;# 
  1443     019B                     	;# 
  1444     019C                     	;# 
  1445     019C                     	;# 
  1446     019D                     	;# 
  1447     019E                     	;# 
  1448     019F                     	;# 
  1449     020C                     	;# 
  1450     020D                     	;# 
  1451     0211                     	;# 
  1452     0211                     	;# 
  1453     0212                     	;# 
  1454     0212                     	;# 
  1455     0213                     	;# 
  1456     0213                     	;# 
  1457     0214                     	;# 
  1458     0214                     	;# 
  1459     0215                     	;# 
  1460     0215                     	;# 
  1461     0215                     	;# 
  1462     0216                     	;# 
  1463     0216                     	;# 
  1464     0217                     	;# 
  1465     0217                     	;# 
  1466     0219                     	;# 
  1467     021A                     	;# 
  1468     021B                     	;# 
  1469     021C                     	;# 
  1470     021D                     	;# 
  1471     021E                     	;# 
  1472     021F                     	;# 
  1473     0291                     	;# 
  1474     0291                     	;# 
  1475     0292                     	;# 
  1476     0293                     	;# 
  1477     0294                     	;# 
  1478     0295                     	;# 
  1479     0295                     	;# 
  1480     0296                     	;# 
  1481     0298                     	;# 
  1482     0298                     	;# 
  1483     0299                     	;# 
  1484     029A                     	;# 
  1485     029B                     	;# 
  1486     029C                     	;# 
  1487     029C                     	;# 
  1488     029D                     	;# 
  1489     029E                     	;# 
  1490     029E                     	;# 
  1491     0311                     	;# 
  1492     0311                     	;# 
  1493     0312                     	;# 
  1494     0313                     	;# 
  1495     0318                     	;# 
  1496     0318                     	;# 
  1497     0319                     	;# 
  1498     031A                     	;# 
  1499     0394                     	;# 
  1500     0395                     	;# 
  1501     0396                     	;# 
  1502     039A                     	;# 
  1503     039C                     	;# 
  1504     039D                     	;# 
  1505     039E                     	;# 
  1506     039F                     	;# 
  1507     0415                     	;# 
  1508     0416                     	;# 
  1509     0417                     	;# 
  1510     041C                     	;# 
  1511     041D                     	;# 
  1512     041E                     	;# 
  1513     0FE4                     	;# 
  1514     0FE5                     	;# 
  1515     0FE6                     	;# 
  1516     0FE7                     	;# 
  1517     0FE8                     	;# 
  1518     0FE9                     	;# 
  1519     0FEA                     	;# 
  1520     0FEB                     	;# 
  1521     0FED                     	;# 
  1522     0FEE                     	;# 
  1523     0FEF                     	;# 
  1524                           
  1525 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1526     0000                     
  1527 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1528     0000                     
  1529 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1530     0000                     
  1531                           	psect	stringtext1
  1532     07FB                     __pstringtext1:
  1533     07FB                     _matrix_conf:
  1534     07FB  3409               	retlw	9
  1535     07FC  3400               	retlw	0
  1536     07FD  340A               	retlw	10
  1537     07FE  3400               	retlw	0
  1538     07FF  340B               	retlw	11
  1539     0800  3407               	retlw	7
  1540     0801  340C               	retlw	12
  1541     0802  3401               	retlw	1
  1542     0803  340F               	retlw	15
  1543     0804  3401               	retlw	1
  1544     0805  340F               	retlw	15
  1545     0806  3400               	retlw	0
  1546     0807                     __end_of_matrix_conf:
  1547                           
  1548                           	psect	stringtext2
  1549     0807                     __pstringtext2:
  1550     0807                     _spi1_configuration:
  1551     0807  3401               	retlw	1
  1552     0808  3440               	retlw	64
  1553     0809  3401               	retlw	1
  1554     080A  3400               	retlw	0
  1555     080B                     __end_of_spi1_configuration:
  1556                           
  1557                           	psect	nvBANK0
  1558     0056                     __pnvBANK0:
  1559     0056                     _a:
  1560     0056                     	ds	3
  1561     0059                     _random:
  1562     0059                     	ds	2
  1563     005B                     _y:
  1564     005B                     	ds	1
  1565     005C                     _x:
  1566     005C                     	ds	1
  1567     005D                     _T:
  1568     005D                     	ds	1
  1569                           
  1570                           	psect	nvBANK1
  1571     00D6                     __pnvBANK1:
  1572     00D6                     _incx:
  1573     00D6                     	ds	1
  1574     0016                     _TMR1	set	22
  1575     001C                     _T2CONbits	set	28
  1576     001C                     _T2CON	set	28
  1577     001A                     _TMR2	set	26
  1578     001B                     _PR2	set	27
  1579     000B                     _INTCONbits	set	11
  1580     0019                     _T1GCONbits	set	25
  1581     0018                     _T1CONbits	set	24
  1582     0018                     _T1CON	set	24
  1583     0016                     _TMR1L	set	22
  1584     0017                     _TMR1H	set	23
  1585     0019                     _T1GCON	set	25
  1586     0011                     _PIR1bits	set	17
  1587     0091                     _PIE1bits	set	145
  1588     0095                     _OPTION_REGbits	set	149
  1589     008D                     _TRISB	set	141
  1590     008C                     _TRISA	set	140
  1591     0097                     _WDTCON	set	151
  1592     0098                     _OSCTUNE	set	152
  1593     0099                     _OSCCON	set	153
  1594     008D                     _TRISBbits	set	141
  1595     010C                     _LATAbits	set	268
  1596     010D                     _LATBbits	set	269
  1597     011E                     _APFCON1	set	286
  1598     011D                     _APFCON0	set	285
  1599     010D                     _LATB	set	269
  1600     010C                     _LATA	set	268
  1601     0116                     _BORCON	set	278
  1602     019A                     _TXREG	set	410
  1603     0199                     _RCREG	set	409
  1604     019D                     _RCSTAbits	set	413
  1605     019E                     _TXSTAbits	set	414
  1606     019C                     _SPBRGH	set	412
  1607     019B                     _SPBRGL	set	411
  1608     019E                     _TXSTA	set	414
  1609     019D                     _RCSTA	set	413
  1610     019F                     _BAUDCON	set	415
  1611     018C                     _ANSELA	set	396
  1612     018D                     _ANSELB	set	397
  1613     020C                     _WPUA	set	524
  1614     020D                     _WPUB	set	525
  1615     0211                     _SSP1BUF	set	529
  1616     0216                     _SSP1CON2	set	534
  1617     0215                     _SSP1CON1bits	set	533
  1618     0212                     _SSP1ADD	set	530
  1619     0215                     _SSP1CON1	set	533
  1620     0214                     _SSP1STAT	set	532
  1621                           
  1622                           	psect	cinit
  1623     001B                     start_initialization:	
  1624                           ; #config settings
  1625                           
  1626     001B                     __initialization:
  1627                           
  1628                           ; Clear objects allocated to BANK0
  1629     001B  303F               	movlw	low __pbssBANK0
  1630     001C  0084               	movwf	4
  1631     001D  3000               	movlw	high __pbssBANK0
  1632     001E  0085               	movwf	5
  1633     001F  3017               	movlw	23
  1634     0020  318D  2539  3180   	fcall	clear_ram0
  1635                           
  1636                           ; Clear objects allocated to BANK1
  1637     0023  30CA               	movlw	low __pbssBANK1
  1638     0024  0084               	movwf	4
  1639     0025  3000               	movlw	high __pbssBANK1
  1640     0026  0085               	movwf	5
  1641     0027  300C               	movlw	12
  1642     0028  318D  2539  3180   	fcall	clear_ram0
  1643     002B                     end_of_initialization:	
  1644                           ;End of C runtime variable initialization code
  1645                           
  1646     002B                     __end_of__initialization:
  1647     002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1648     002C  0020               	movlb	0
  1649     002D  3183  2BA0         	ljmp	_main	;jump to C main() function
  1650                           
  1651                           	psect	bssBANK0
  1652     003F                     __pbssBANK0:
  1653     003F                     positionCalc@yi:
  1654     003F                     	ds	3
  1655     0042                     decrementaT@CountCallBack:
  1656     0042                     	ds	2
  1657     0044                     _address_read:
  1658     0044                     	ds	2
  1659     0046                     _address_write:
  1660     0046                     	ds	2
  1661     0048                     _TMR2_InterruptHandler:
  1662     0048                     	ds	2
  1663     004A                     _timer1ReloadVal:
  1664     004A                     	ds	2
  1665     004C                     _EUSART_ErrorHandler:
  1666     004C                     	ds	2
  1667     004E                     _EUSART_OverrunErrorHandler:
  1668     004E                     	ds	2
  1669     0050                     _EUSART_FramingErrorHandler:
  1670     0050                     	ds	2
  1671     0052                     _show:
  1672     0052                     	ds	1
  1673     0053                     _countRx:
  1674     0053                     	ds	1
  1675     0054                     _bufferRx:
  1676     0054                     	ds	1
  1677     0055                     _eusartRxLastError:
  1678     0055                     	ds	1
  1679                           
  1680                           	psect	bssBANK1
  1681     00CA                     __pbssBANK1:
  1682     00CA                     _eeNumber:
  1683     00CA                     	ds	10
  1684     00D4                     _errno:
  1685     00D4                     	ds	2
  1686                           
  1687                           	psect	clrtext
  1688     0D39                     clear_ram0:	
  1689                           ;	Called with FSR0 containing the base address, and
  1690                           ;	WREG with the size to clear
  1691                           
  1692     0D39  0064               	clrwdt	;clear the watchdog before getting into this loop
  1693     0D3A                     clrloop0:
  1694     0D3A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1695     0D3B  3101               	addfsr 0,1
  1696     0D3C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1697     0D3D  2D3A               	goto	clrloop0	;have we reached the end yet?
  1698     0D3E  3400               	retlw	0	;all done for this memory range, return
  1699                           
  1700                           	psect	cstackBANK1
  1701     00A0                     __pcstackBANK1:
  1702     00A0                     ??_PIN_MANAGER_Initialize:
  1703     00A0                     ??_OSCILLATOR_Initialize:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706     00A0                     ??_WDT_Initialize:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709     00A0                     ??_TMR1_Initialize:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712     00A0                     ?_EUSART_SetFramingErrorHandler:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715     00A0                     ?_EUSART_SetOverrunErrorHandler:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718     00A0                     ?_EUSART_SetErrorHandler:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721     00A0                     ?_TMR2_SetInterruptHandler:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724     00A0                     ??_SPI1_Initialize:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727     00A0                     ??_SPI1_Open:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730     00A0                     ??_SPI1_ExchangeByte:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733     00A0                     ?_SPI1_ExchangeBlock:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736     00A0                     ??_EUSART_is_rx_ready:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739     00A0                     ??_EUSART_Read:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742     00A0                     ??_EUSART_Write:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745     00A0                     ?___ftpack:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748     00A0                     SPI1_ExchangeByte@data:	
  1749                           ; 3 bytes @ 0x0
  1750                           
  1751     00A0                     EUSART_Write@txData:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754     00A0                     SPI1_ExchangeBlock@blockSize:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757     00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1758                           ; 2 bytes @ 0x0
  1759                           
  1760     00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1761                           ; 2 bytes @ 0x0
  1762                           
  1763     00A0                     EUSART_SetErrorHandler@interruptHandler:	
  1764                           ; 2 bytes @ 0x0
  1765                           
  1766     00A0                     TMR2_SetInterruptHandler@InterruptHandler:	
  1767                           ; 2 bytes @ 0x0
  1768                           
  1769     00A0                     ___ftpack@arg:	
  1770                           ; 2 bytes @ 0x0
  1771                           
  1772                           
  1773                           ; 3 bytes @ 0x0
  1774     00A0                     	ds	1
  1775     00A1                     ?_SPI1_ReadBlock:
  1776     00A1                     SPI1_ReadBlock@blockSize:	
  1777                           ; 1 bytes @ 0x1
  1778                           
  1779                           
  1780                           ; 2 bytes @ 0x1
  1781     00A1                     	ds	1
  1782     00A2                     ??_TMR2_Initialize:
  1783     00A2                     ??_EUSART_Initialize:	
  1784                           ; 1 bytes @ 0x2
  1785                           
  1786     00A2                     ??_EUSART_SetFramingErrorHandler:	
  1787                           ; 1 bytes @ 0x2
  1788                           
  1789     00A2                     ??_EUSART_SetOverrunErrorHandler:	
  1790                           ; 1 bytes @ 0x2
  1791                           
  1792     00A2                     ??_EUSART_SetErrorHandler:	
  1793                           ; 1 bytes @ 0x2
  1794                           
  1795     00A2                     ??_TMR2_SetInterruptHandler:	
  1796                           ; 1 bytes @ 0x2
  1797                           
  1798     00A2                     ??_SPI1_ExchangeBlock:	
  1799                           ; 1 bytes @ 0x2
  1800                           
  1801     00A2                     ??_SYSTEM_Initialize:	
  1802                           ; 1 bytes @ 0x2
  1803                           
  1804                           
  1805                           ; 1 bytes @ 0x2
  1806     00A2                     	ds	1
  1807     00A3                     ??_SPI1_ReadBlock:
  1808     00A3                     SPI1_Open@spi1UniqueConfiguration:	
  1809                           ; 1 bytes @ 0x3
  1810                           
  1811     00A3                     SPI1_ExchangeBlock@block:	
  1812                           ; 1 bytes @ 0x3
  1813                           
  1814     00A3                     ___ftpack@exp:	
  1815                           ; 1 bytes @ 0x3
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0x3
  1819     00A3                     	ds	1
  1820     00A4                     SPI1_ExchangeBlock@data:
  1821     00A4                     SPI1_ReadBlock@block:	
  1822                           ; 1 bytes @ 0x4
  1823                           
  1824     00A4                     ___ftpack@sign:	
  1825                           ; 1 bytes @ 0x4
  1826                           
  1827                           
  1828                           ; 1 bytes @ 0x4
  1829     00A4                     	ds	1
  1830     00A5                     ?_txSpi:
  1831     00A5                     ??___ftpack:	
  1832                           ; 1 bytes @ 0x5
  1833                           
  1834     00A5                     SPI1_ReadBlock@data:	
  1835                           ; 1 bytes @ 0x5
  1836                           
  1837     00A5                     txSpi@data:	
  1838                           ; 1 bytes @ 0x5
  1839                           
  1840                           
  1841                           ; 1 bytes @ 0x5
  1842     00A5                     	ds	1
  1843     00A6                     ?_rxSpi:
  1844     00A6                     rxSpi@block:	
  1845                           ; 1 bytes @ 0x6
  1846                           
  1847     00A6                     txSpi@dataSize:	
  1848                           ; 1 bytes @ 0x6
  1849                           
  1850                           
  1851                           ; 2 bytes @ 0x6
  1852     00A6                     	ds	1
  1853     00A7                     rxSpi@blockSize:
  1854                           
  1855                           ; 1 bytes @ 0x7
  1856     00A7                     	ds	1
  1857     00A8                     ??_txSpi:
  1858     00A8                     ??_rxSpi:	
  1859                           ; 1 bytes @ 0x8
  1860                           
  1861     00A8                     ?___lwtoft:	
  1862                           ; 1 bytes @ 0x8
  1863                           
  1864     00A8                     txSpi@cs:	
  1865                           ; 3 bytes @ 0x8
  1866                           
  1867     00A8                     ___lwtoft@c:	
  1868                           ; 1 bytes @ 0x8
  1869                           
  1870                           
  1871                           ; 2 bytes @ 0x8
  1872     00A8                     	ds	1
  1873     00A9                     ??_matrixClear:
  1874     00A9                     matrixClear@data:	
  1875                           ; 1 bytes @ 0x9
  1876                           
  1877                           
  1878                           ; 4 bytes @ 0x9
  1879     00A9                     	ds	1
  1880     00AA                     rxSpi@cs:
  1881                           
  1882                           ; 1 bytes @ 0xA
  1883     00AA                     	ds	1
  1884     00AB                     ?_Ext_Read:
  1885     00AB                     ??___lwtoft:	
  1886                           ; 1 bytes @ 0xB
  1887                           
  1888     00AB                     ?___ftmul:	
  1889                           ; 1 bytes @ 0xB
  1890                           
  1891     00AB                     Ext_Read@addressHigh:	
  1892                           ; 3 bytes @ 0xB
  1893                           
  1894     00AB                     ___ftmul@f1:	
  1895                           ; 1 bytes @ 0xB
  1896                           
  1897                           
  1898                           ; 3 bytes @ 0xB
  1899     00AB                     	ds	1
  1900     00AC                     ??_Ext_Read:
  1901     00AC                     Ext_Read@addressLow:	
  1902                           ; 1 bytes @ 0xC
  1903                           
  1904                           
  1905                           ; 1 bytes @ 0xC
  1906     00AC                     	ds	1
  1907     00AD                     matrixClear@i:
  1908     00AD                     Ext_Read@data:	
  1909                           ; 1 bytes @ 0xD
  1910                           
  1911                           
  1912                           ; 4 bytes @ 0xD
  1913     00AD                     	ds	1
  1914     00AE                     ??_initMatrix:
  1915     00AE                     ___ftmul@f2:	
  1916                           ; 1 bytes @ 0xE
  1917                           
  1918                           
  1919                           ; 3 bytes @ 0xE
  1920     00AE                     	ds	2
  1921     00B0                     initMatrix@data:
  1922                           
  1923                           ; 4 bytes @ 0x10
  1924     00B0                     	ds	1
  1925     00B1                     ??___ftmul:
  1926                           
  1927                           ; 1 bytes @ 0x11
  1928     00B1                     	ds	3
  1929     00B4                     initMatrix@k:
  1930                           
  1931                           ; 1 bytes @ 0x14
  1932     00B4                     	ds	1
  1933     00B5                     initMatrix@i:
  1934     00B5                     ___ftmul@exp:	
  1935                           ; 1 bytes @ 0x15
  1936                           
  1937                           
  1938                           ; 1 bytes @ 0x15
  1939     00B5                     	ds	1
  1940     00B6                     initMatrix@j:
  1941     00B6                     ___ftmul@f3_as_product:	
  1942                           ; 1 bytes @ 0x16
  1943                           
  1944                           
  1945                           ; 3 bytes @ 0x16
  1946     00B6                     	ds	3
  1947     00B9                     ___ftmul@cntr:
  1948                           
  1949                           ; 1 bytes @ 0x19
  1950     00B9                     	ds	1
  1951     00BA                     ___ftmul@sign:
  1952                           
  1953                           ; 1 bytes @ 0x1A
  1954     00BA                     	ds	1
  1955     00BB                     ?___ftadd:
  1956     00BB                     ___ftadd@f1:	
  1957                           ; 3 bytes @ 0x1B
  1958                           
  1959                           
  1960                           ; 3 bytes @ 0x1B
  1961     00BB                     	ds	3
  1962     00BE                     ___ftadd@f2:
  1963                           
  1964                           ; 3 bytes @ 0x1E
  1965     00BE                     	ds	3
  1966     00C1                     ??___ftadd:
  1967                           
  1968                           ; 1 bytes @ 0x21
  1969     00C1                     	ds	3
  1970     00C4                     ___ftadd@sign:
  1971                           
  1972                           ; 1 bytes @ 0x24
  1973     00C4                     	ds	1
  1974     00C5                     ___ftadd@exp2:
  1975                           
  1976                           ; 1 bytes @ 0x25
  1977     00C5                     	ds	1
  1978     00C6                     ___ftadd@exp1:
  1979                           
  1980                           ; 1 bytes @ 0x26
  1981     00C6                     	ds	1
  1982     00C7                     ??_analisaRx:
  1983     00C7                     ??_main:	
  1984                           ; 1 bytes @ 0x27
  1985                           
  1986                           
  1987                           ; 1 bytes @ 0x27
  1988     00C7                     	ds	2
  1989     00C9                     main@rxChar:
  1990                           
  1991                           ; 1 bytes @ 0x29
  1992     00C9                     	ds	1
  1993                           
  1994                           	psect	cstackCOMMON
  1995     0070                     __pcstackCOMMON:
  1996     0070                     ?_PIN_MANAGER_Initialize:
  1997     0070                     ?_OSCILLATOR_Initialize:	
  1998                           ; 1 bytes @ 0x0
  1999                           
  2000     0070                     ?_WDT_Initialize:	
  2001                           ; 1 bytes @ 0x0
  2002                           
  2003     0070                     ?_TMR2_Initialize:	
  2004                           ; 1 bytes @ 0x0
  2005                           
  2006     0070                     ?_TMR1_Initialize:	
  2007                           ; 1 bytes @ 0x0
  2008                           
  2009     0070                     ?_EUSART_Initialize:	
  2010                           ; 1 bytes @ 0x0
  2011                           
  2012     0070                     ?_TMR2_ISR:	
  2013                           ; 1 bytes @ 0x0
  2014                           
  2015     0070                     ?_TMR2_DefaultInterruptHandler:	
  2016                           ; 1 bytes @ 0x0
  2017                           
  2018     0070                     ??_TMR2_DefaultInterruptHandler:	
  2019                           ; 1 bytes @ 0x0
  2020                           
  2021     0070                     ?_SPI1_Initialize:	
  2022                           ; 1 bytes @ 0x0
  2023                           
  2024     0070                     ?_SPI1_Open:	
  2025                           ; 1 bytes @ 0x0
  2026                           
  2027     0070                     ?_SPI1_ExchangeByte:	
  2028                           ; 1 bytes @ 0x0
  2029                           
  2030     0070                     ?_SYSTEM_Initialize:	
  2031                           ; 1 bytes @ 0x0
  2032                           
  2033     0070                     ?_EUSART_is_rx_ready:	
  2034                           ; 1 bytes @ 0x0
  2035                           
  2036     0070                     ?_EUSART_Read:	
  2037                           ; 1 bytes @ 0x0
  2038                           
  2039     0070                     ?_EUSART_Write:	
  2040                           ; 1 bytes @ 0x0
  2041                           
  2042     0070                     ?_INTERRUPT_InterruptManager:	
  2043                           ; 1 bytes @ 0x0
  2044                           
  2045     0070                     ?_matrixClear:	
  2046                           ; 1 bytes @ 0x0
  2047                           
  2048     0070                     ?_initMatrix:	
  2049                           ; 1 bytes @ 0x0
  2050                           
  2051     0070                     ?_positionCalc:	
  2052                           ; 1 bytes @ 0x0
  2053                           
  2054     0070                     ?_analisaRx:	
  2055                           ; 1 bytes @ 0x0
  2056                           
  2057     0070                     ?_executaTudo:	
  2058                           ; 1 bytes @ 0x0
  2059                           
  2060     0070                     ?_decrementaT:	
  2061                           ; 1 bytes @ 0x0
  2062                           
  2063     0070                     ?_main:	
  2064                           ; 1 bytes @ 0x0
  2065                           
  2066     0070                     ?i1_SPI1_ExchangeBlock:	
  2067                           ; 1 bytes @ 0x0
  2068                           
  2069     0070                     ?i1_matrixClear:	
  2070                           ; 1 bytes @ 0x0
  2071                           
  2072     0070                     ?_frexp:	
  2073                           ; 1 bytes @ 0x0
  2074                           
  2075     0070                     ?___ftneg:	
  2076                           ; 3 bytes @ 0x0
  2077                           
  2078     0070                     ?i1___ftpack:	
  2079                           ; 3 bytes @ 0x0
  2080                           
  2081     0070                     ?___fttol:	
  2082                           ; 3 bytes @ 0x0
  2083                           
  2084     0070                     i1SPI1_ExchangeBlock@blockSize:	
  2085                           ; 4 bytes @ 0x0
  2086                           
  2087     0070                     ___ftneg@f1:	
  2088                           ; 2 bytes @ 0x0
  2089                           
  2090     0070                     ___fttol@f1:	
  2091                           ; 3 bytes @ 0x0
  2092                           
  2093     0070                     frexp@value:	
  2094                           ; 3 bytes @ 0x0
  2095                           
  2096     0070                     i1___ftpack@arg:	
  2097                           ; 3 bytes @ 0x0
  2098                           
  2099                           
  2100                           ; 3 bytes @ 0x0
  2101     0070                     	ds	2
  2102     0072                     ??i1_SPI1_ExchangeBlock:
  2103                           
  2104                           ; 1 bytes @ 0x2
  2105     0072                     	ds	1
  2106     0073                     ??___ftneg:
  2107     0073                     frexp@eptr:	
  2108                           ; 1 bytes @ 0x3
  2109                           
  2110     0073                     i1SPI1_ExchangeBlock@block:	
  2111                           ; 1 bytes @ 0x3
  2112                           
  2113     0073                     i1___ftpack@exp:	
  2114                           ; 1 bytes @ 0x3
  2115                           
  2116                           
  2117                           ; 1 bytes @ 0x3
  2118     0073                     	ds	1
  2119     0074                     ??_frexp:
  2120     0074                     ??___fttol:	
  2121                           ; 1 bytes @ 0x4
  2122                           
  2123     0074                     i1SPI1_ExchangeBlock@data:	
  2124                           ; 1 bytes @ 0x4
  2125                           
  2126     0074                     i1___ftpack@sign:	
  2127                           ; 1 bytes @ 0x4
  2128                           
  2129                           
  2130                           ; 1 bytes @ 0x4
  2131     0074                     	ds	1
  2132     0075                     ?i1_txSpi:
  2133     0075                     ??i1___ftpack:	
  2134                           ; 1 bytes @ 0x5
  2135                           
  2136     0075                     i1txSpi@data:	
  2137                           ; 1 bytes @ 0x5
  2138                           
  2139                           
  2140                           ; 1 bytes @ 0x5
  2141     0075                     	ds	1
  2142     0076                     i1txSpi@dataSize:
  2143                           
  2144                           ; 2 bytes @ 0x6
  2145     0076                     	ds	1
  2146     0077                     ___fttol@sign1:
  2147                           
  2148                           ; 1 bytes @ 0x7
  2149     0077                     	ds	1
  2150     0078                     ??i1_txSpi:
  2151     0078                     ?i1___ftadd:	
  2152                           ; 1 bytes @ 0x8
  2153                           
  2154     0078                     i1txSpi@cs:	
  2155                           ; 3 bytes @ 0x8
  2156                           
  2157     0078                     i1___ftadd@f1:	
  2158                           ; 1 bytes @ 0x8
  2159                           
  2160     0078                     ___fttol@lval:	
  2161                           ; 3 bytes @ 0x8
  2162                           
  2163                           
  2164                           ; 4 bytes @ 0x8
  2165     0078                     	ds	1
  2166     0079                     ?_Ext_Write:
  2167     0079                     ?_positionUpdate:	
  2168                           ; 1 bytes @ 0x9
  2169                           
  2170     0079                     ??i1_matrixClear:	
  2171                           ; 1 bytes @ 0x9
  2172                           
  2173     0079                     positionUpdate@cordY:	
  2174                           ; 1 bytes @ 0x9
  2175                           
  2176     0079                     Ext_Write@addressHigh:	
  2177                           ; 1 bytes @ 0x9
  2178                           
  2179     0079                     i1matrixClear@data:	
  2180                           ; 1 bytes @ 0x9
  2181                           
  2182                           
  2183                           ; 4 bytes @ 0x9
  2184     0079                     	ds	1
  2185     007A                     ??_positionUpdate:
  2186     007A                     Ext_Write@x:	
  2187                           ; 1 bytes @ 0xA
  2188                           
  2189                           
  2190                           ; 1 bytes @ 0xA
  2191     007A                     	ds	1
  2192     007B                     Ext_Write@y:
  2193     007B                     i1___ftadd@f2:	
  2194                           ; 1 bytes @ 0xB
  2195                           
  2196                           
  2197                           ; 3 bytes @ 0xB
  2198     007B                     	ds	1
  2199     007C                     ??_Ext_Write:
  2200     007C                     ___fttol@exp1:	
  2201                           ; 1 bytes @ 0xC
  2202                           
  2203                           
  2204                           ; 1 bytes @ 0xC
  2205     007C                     	ds	1
  2206     007D                     ??___altoft:
  2207     007D                     i1matrixClear@i:	
  2208                           ; 1 bytes @ 0xD
  2209                           
  2210                           
  2211                           ; 1 bytes @ 0xD
  2212     007D                     	ds	1
  2213     007E                     ??_TMR2_ISR:
  2214     007E                     ??_round:	
  2215                           ; 1 bytes @ 0xE
  2216                           
  2217     007E                     ??_trunc:	
  2218                           ; 1 bytes @ 0xE
  2219                           
  2220     007E                     ??_INTERRUPT_InterruptManager:	
  2221                           ; 1 bytes @ 0xE
  2222                           
  2223     007E                     ??_positionCalc:	
  2224                           ; 1 bytes @ 0xE
  2225                           
  2226     007E                     ??_executaTudo:	
  2227                           ; 1 bytes @ 0xE
  2228                           
  2229     007E                     ??___ftsub:	
  2230                           ; 1 bytes @ 0xE
  2231                           
  2232                           
  2233                           	psect	cstackBANK0
  2234     0020                     __pcstackBANK0:	
  2235                           ; 1 bytes @ 0xE
  2236                           
  2237     0020                     ??i1___ftadd:
  2238     0020                     ?___altoft:	
  2239                           ; 1 bytes @ 0x0
  2240                           
  2241     0020                     Ext_Write@addressLow:	
  2242                           ; 3 bytes @ 0x0
  2243                           
  2244     0020                     positionUpdate@data:	
  2245                           ; 1 bytes @ 0x0
  2246                           
  2247     0020                     ___altoft@c:	
  2248                           ; 4 bytes @ 0x0
  2249                           
  2250                           
  2251                           ; 4 bytes @ 0x0
  2252     0020                     	ds	1
  2253     0021                     Ext_Write@data:
  2254                           
  2255                           ; 5 bytes @ 0x1
  2256     0021                     	ds	2
  2257     0023                     i1___ftadd@sign:
  2258                           
  2259                           ; 1 bytes @ 0x3
  2260     0023                     	ds	1
  2261     0024                     positionUpdate@cordX:
  2262     0024                     ___altoft@exp:	
  2263                           ; 1 bytes @ 0x4
  2264                           
  2265     0024                     i1___ftadd@exp2:	
  2266                           ; 1 bytes @ 0x4
  2267                           
  2268                           
  2269                           ; 1 bytes @ 0x4
  2270     0024                     	ds	1
  2271     0025                     ___altoft@sign:
  2272     0025                     i1___ftadd@exp1:	
  2273                           ; 1 bytes @ 0x5
  2274                           
  2275                           
  2276                           ; 1 bytes @ 0x5
  2277     0025                     	ds	1
  2278     0026                     ?_trunc:
  2279     0026                     trunc@x:	
  2280                           ; 3 bytes @ 0x6
  2281                           
  2282                           
  2283                           ; 3 bytes @ 0x6
  2284     0026                     	ds	3
  2285     0029                     trunc@i:
  2286                           
  2287                           ; 3 bytes @ 0x9
  2288     0029                     	ds	3
  2289     002C                     trunc@expon:
  2290                           
  2291                           ; 2 bytes @ 0xC
  2292     002C                     	ds	2
  2293     002E                     ?___ftsub:
  2294     002E                     ___ftsub@f2:	
  2295                           ; 3 bytes @ 0xE
  2296                           
  2297                           
  2298                           ; 3 bytes @ 0xE
  2299     002E                     	ds	3
  2300     0031                     ___ftsub@f1:
  2301                           
  2302                           ; 3 bytes @ 0x11
  2303     0031                     	ds	3
  2304     0034                     ?_round:
  2305     0034                     round@x:	
  2306                           ; 3 bytes @ 0x14
  2307                           
  2308                           
  2309                           ; 3 bytes @ 0x14
  2310     0034                     	ds	3
  2311     0037                     round@f:
  2312                           
  2313                           ; 3 bytes @ 0x17
  2314     0037                     	ds	3
  2315     003A                     _positionCalc$1591:
  2316                           
  2317                           ; 3 bytes @ 0x1A
  2318     003A                     	ds	3
  2319     003D                     ??_decrementaT:
  2320                           
  2321                           ; 1 bytes @ 0x1D
  2322     003D                     	ds	2
  2323                           
  2324                           	psect	maintext
  2325     03A0                     __pmaintext:	
  2326 ;;
  2327 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2328 ;;
  2329 ;; *************** function _main *****************
  2330 ;; Defined at:
  2331 ;;		line 245 in file "main.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  rxChar          1   41[BANK1 ] unsigned char 
  2336 ;;  rxByte          1    0        unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : B1F/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2346 ;;      Params:         0       0       0       0       0       0
  2347 ;;      Locals:         0       0       1       0       0       0
  2348 ;;      Temps:          0       0       2       0       0       0
  2349 ;;      Totals:         0       0       3       0       0       0
  2350 ;;Total ram usage:        3 bytes
  2351 ;; Hardware stack levels required when called: 14
  2352 ;; This function calls:
  2353 ;;		_EUSART_Read
  2354 ;;		_EUSART_is_rx_ready
  2355 ;;		_SPI1_Open
  2356 ;;		_SYSTEM_Initialize
  2357 ;;		_TMR2_SetInterruptHandler
  2358 ;;		___ftadd
  2359 ;;		___ftmul
  2360 ;;		___lwtoft
  2361 ;;		_analisaRx
  2362 ;;		_initMatrix
  2363 ;; This function is called by:
  2364 ;;		Startup code after reset
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368     03A0                     _main:	
  2369                           ;psect for function _main
  2370                           
  2371     03A0                     l3359:	
  2372                           ;incstack = 0
  2373                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2374                           
  2375                           
  2376                           ;main.c: 246: random = TMR1;
  2377     03A0  0020               	movlb	0	; select bank0
  2378     03A1  0817               	movf	23,w	;volatile
  2379     03A2  00DA               	movwf	_random+1
  2380     03A3  0816               	movf	22,w	;volatile
  2381     03A4  00D9               	movwf	_random
  2382     03A5                     l3361:
  2383                           
  2384                           ;main.c: 247: x = 1;
  2385     03A5  01DC               	clrf	_x
  2386     03A6  0ADC               	incf	_x,f
  2387     03A7                     l3363:
  2388                           
  2389                           ;main.c: 248: incx = 1;
  2390     03A7  0021               	movlb	1	; select bank1
  2391     03A8  01D6               	clrf	_incx^(0+128)
  2392     03A9  0AD6               	incf	_incx^(0+128),f
  2393     03AA                     l3365:
  2394                           
  2395                           ;main.c: 249: a = -1.5 + 0.1*(random & 31);
  2396     03AA  3000               	movlw	0
  2397     03AB  00BB               	movwf	___ftadd@f1^(0+128)
  2398     03AC  30C0               	movlw	192
  2399     03AD  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  2400     03AE  30BF               	movlw	191
  2401     03AF  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  2402     03B0  30CD               	movlw	205
  2403     03B1  00AB               	movwf	___ftmul@f1^(0+128)
  2404     03B2  30CC               	movlw	204
  2405     03B3  00AC               	movwf	(___ftmul@f1+1)^(0+128)
  2406     03B4  303D               	movlw	61
  2407     03B5  00AD               	movwf	(___ftmul@f1+2)^(0+128)
  2408     03B6  301F               	movlw	31
  2409     03B7  0020               	movlb	0	; select bank0
  2410     03B8  0559               	andwf	_random,w
  2411     03B9  0021               	movlb	1	; select bank1
  2412     03BA  00A8               	movwf	___lwtoft@c^(0+128)
  2413     03BB  3000               	movlw	0
  2414     03BC  0020               	movlb	0	; select bank0
  2415     03BD  055A               	andwf	_random+1,w
  2416     03BE  0021               	movlb	1	; select bank1
  2417     03BF  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  2418     03C0  318D  25D5  3183   	fcall	___lwtoft
  2419     03C3  0021               	movlb	1	; select bank1
  2420     03C4  0828               	movf	?___lwtoft^(0+128),w
  2421     03C5  00AE               	movwf	___ftmul@f2^(0+128)
  2422     03C6  0829               	movf	(?___lwtoft+1)^(0+128),w
  2423     03C7  00AF               	movwf	(___ftmul@f2+1)^(0+128)
  2424     03C8  082A               	movf	(?___lwtoft+2)^(0+128),w
  2425     03C9  00B0               	movwf	(___ftmul@f2+2)^(0+128)
  2426     03CA  3182  225A  3183   	fcall	___ftmul
  2427     03CD  0021               	movlb	1	; select bank1
  2428     03CE  082B               	movf	?___ftmul^(0+128),w
  2429     03CF  00BE               	movwf	___ftadd@f2^(0+128)
  2430     03D0  082C               	movf	(?___ftmul+1)^(0+128),w
  2431     03D1  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  2432     03D2  082D               	movf	(?___ftmul+2)^(0+128),w
  2433     03D3  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  2434     03D4  3180  202F  3183   	fcall	___ftadd
  2435     03D7  0021               	movlb	1	; select bank1
  2436     03D8  083B               	movf	?___ftadd^(0+128),w
  2437     03D9  0020               	movlb	0	; select bank0
  2438     03DA  00D6               	movwf	_a
  2439     03DB  0021               	movlb	1	; select bank1
  2440     03DC  083C               	movf	(?___ftadd+1)^(0+128),w
  2441     03DD  0020               	movlb	0	; select bank0
  2442     03DE  00D7               	movwf	_a+1
  2443     03DF  0021               	movlb	1	; select bank1
  2444     03E0  083D               	movf	(?___ftadd+2)^(0+128),w
  2445     03E1  0020               	movlb	0	; select bank0
  2446     03E2  00D8               	movwf	_a+2
  2447     03E3                     l3367:
  2448                           
  2449                           ;main.c: 250: T = random & 15;
  2450     03E3  0859               	movf	_random,w
  2451     03E4  390F               	andlw	15
  2452     03E5  00DD               	movwf	_T
  2453     03E6                     l3369:
  2454                           
  2455                           ;main.c: 251: y = random & 7;
  2456     03E6  0859               	movf	_random,w
  2457     03E7  3907               	andlw	7
  2458     03E8  00DB               	movwf	_y
  2459     03E9                     l3371:
  2460                           
  2461                           ;main.c: 252: if (T == 0){
  2462     03E9  085D               	movf	_T,w
  2463     03EA  1D03               	btfss	3,2
  2464     03EB  2BED               	goto	u3671
  2465     03EC  2BEE               	goto	u3670
  2466     03ED                     u3671:
  2467     03ED  2BF0               	goto	l3375
  2468     03EE                     u3670:
  2469     03EE                     l3373:
  2470                           
  2471                           ;main.c: 253: T = 1;
  2472     03EE  01DD               	clrf	_T
  2473     03EF  0ADD               	incf	_T,f
  2474     03F0                     l3375:
  2475                           
  2476                           ;main.c: 254: };main.c: 255: char rxByte;;main.c: 258: SYSTEM_Initialize();
  2477     03F0  318D  25E9  3183   	fcall	_SYSTEM_Initialize
  2478                           
  2479                           ;main.c: 259: TMR2_SetInterruptHandler(decrementaT);
  2480     03F3  3048               	movlw	low _decrementaT
  2481     03F4  0021               	movlb	1	; select bank1
  2482     03F5  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  2483     03F6  300E               	movlw	high _decrementaT
  2484     03F7  00A1               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  2485     03F8  318D  2561  3183   	fcall	_TMR2_SetInterruptHandler
  2486     03FB                     l3377:
  2487     03FB  0022               	movlb	2	; select bank2
  2488     03FC  158D               	bsf	13,3	;volatile
  2489     03FD                     l3379:
  2490     03FD  160C               	bsf	12,4	;volatile
  2491     03FE                     l3381:
  2492                           
  2493                           ;main.c: 263: SPI1_Open(SPI1_DEFAULT);
  2494     03FE  3000               	movlw	0
  2495     03FF  3186  265E  3183   	fcall	_SPI1_Open
  2496     0402                     l3383:
  2497                           
  2498                           ;main.c: 265: initMatrix();
  2499     0402  3186  2606  3183   	fcall	_initMatrix
  2500     0405                     l3385:
  2501                           
  2502                           ;main.c: 266: _delay((unsigned long)((1000)*(16000000/4000.0)));
  2503     0405  3015               	movlw	21
  2504     0406  0021               	movlb	1	; select bank1
  2505     0407  00C8               	movwf	(??_main^(0+128)+1)
  2506     0408  304B               	movlw	75
  2507     0409  00C7               	movwf	??_main^(0+128)
  2508     040A  30BE               	movlw	190
  2509     040B                     u3697:
  2510     040B  0B89               	decfsz	9,f
  2511     040C  2C0B               	goto	u3697
  2512     040D  0BC7               	decfsz	??_main^(0+128),f
  2513     040E  2C0B               	goto	u3697
  2514     040F  0BC8               	decfsz	(??_main^(0+128)+1),f
  2515     0410  2C0B               	goto	u3697
  2516     0411  0000               	nop
  2517     0412                     l3387:
  2518                           
  2519                           ;main.c: 271: (INTCONbits.GIE = 1);
  2520     0412  178B               	bsf	11,7	;volatile
  2521     0413                     l3389:
  2522                           
  2523                           ;main.c: 274: (INTCONbits.PEIE = 1);
  2524     0413  170B               	bsf	11,6	;volatile
  2525     0414                     l3391:
  2526                           
  2527                           ;main.c: 282: if(EUSART_is_rx_ready()){
  2528     0414  318D  2534  3183   	fcall	_EUSART_is_rx_ready
  2529     0417  3A00               	xorlw	0
  2530     0418  1903               	skipnz
  2531     0419  2C1B               	goto	u3681
  2532     041A  2C1C               	goto	u3680
  2533     041B                     u3681:
  2534     041B  2C14               	goto	l3391
  2535     041C                     u3680:
  2536     041C                     l3393:
  2537                           
  2538                           ;main.c: 283: uint8_t rxChar = EUSART_Read();
  2539     041C  318D  25B4  3183   	fcall	_EUSART_Read
  2540     041F  0021               	movlb	1	; select bank1
  2541     0420  00C9               	movwf	main@rxChar^(0+128)
  2542     0421                     l3395:
  2543                           
  2544                           ;main.c: 284: bufferRx = rxChar;
  2545     0421  0849               	movf	main@rxChar^(0+128),w
  2546     0422  0020               	movlb	0	; select bank0
  2547     0423  00D4               	movwf	_bufferRx
  2548     0424                     l3397:
  2549                           
  2550                           ;main.c: 285: analisaRx();
  2551     0424  3185  2593  3183   	fcall	_analisaRx
  2552     0427  2C14               	goto	l3391
  2553     0428  3180  2819         	ljmp	start
  2554     042A                     __end_of_main:
  2555                           
  2556                           	psect	text1
  2557     0606                     __ptext1:	
  2558 ;; *************** function _initMatrix *****************
  2559 ;; Defined at:
  2560 ;;		line 67 in file "main.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  j               1   22[BANK1 ] unsigned char 
  2565 ;;  i               1   21[BANK1 ] unsigned char 
  2566 ;;  data            4   16[BANK1 ] unsigned char [4]
  2567 ;;  k               1   20[BANK1 ] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2577 ;;      Params:         0       0       0       0       0       0
  2578 ;;      Locals:         0       0       7       0       0       0
  2579 ;;      Temps:          0       0       2       0       0       0
  2580 ;;      Totals:         0       0       9       0       0       0
  2581 ;;Total ram usage:        9 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 12
  2584 ;; This function calls:
  2585 ;;		_matrixClear
  2586 ;;		_txSpi
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592     0606                     _initMatrix:	
  2593                           ;psect for function _initMatrix
  2594                           
  2595     0606                     l3283:	
  2596                           ;incstack = 0
  2597                           ; Regs used in _initMatrix: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2598                           
  2599                           
  2600                           ;main.c: 68: uint8_t data[4];;main.c: 69: uint8_t k=0;
  2601     0606  0021               	movlb	1	; select bank1
  2602     0607  01B4               	clrf	initMatrix@k^(0+128)
  2603     0608                     l3285:
  2604                           
  2605                           ;main.c: 70: matrixClear();
  2606     0608  318E  2662  3186   	fcall	_matrixClear
  2607     060B                     l3287:
  2608                           
  2609                           ;main.c: 71: for(uint8_t i=0;i<6;i++){
  2610     060B  0021               	movlb	1	; select bank1
  2611     060C  01B5               	clrf	initMatrix@i^(0+128)
  2612     060D                     l3293:
  2613                           
  2614                           ;main.c: 72: for(uint8_t j=0;j<4;j=j+2){
  2615     060D  01B6               	clrf	initMatrix@j^(0+128)
  2616     060E                     l3299:
  2617                           
  2618                           ;main.c: 73: data[j]= matrix_conf[k];
  2619     060E  0836               	movf	initMatrix@j^(0+128),w
  2620     060F  3EB0               	addlw	(low (initMatrix@data| 0))& (0+255)
  2621     0610  0086               	movwf	6
  2622     0611  0187               	clrf	7
  2623     0612  0834               	movf	initMatrix@k^(0+128),w
  2624     0613  3EFB               	addlw	low (_matrix_conf| (0+32768))
  2625     0614  0084               	movwf	4
  2626     0615  3087               	movlw	high (_matrix_conf| (0+32768))
  2627     0616  1803               	skipnc
  2628     0617  3E01               	addlw	1
  2629     0618  0085               	movwf	5
  2630     0619  0800               	movf	0,w	;code access
  2631     061A  0081               	movwf	1
  2632                           
  2633                           ;main.c: 74: data[j+1]= matrix_conf[k+1];
  2634     061B  0836               	movf	initMatrix@j^(0+128),w
  2635     061C  3E01               	addlw	1
  2636     061D  3EB0               	addlw	(low (initMatrix@data| 0))& (0+255)
  2637     061E  0086               	movwf	6
  2638     061F  0187               	clrf	7
  2639     0620  0834               	movf	initMatrix@k^(0+128),w
  2640     0621  3EFC               	addlw	low ((_matrix_conf+1)| (0+32768))
  2641     0622  0084               	movwf	4
  2642     0623  3087               	movlw	high ((_matrix_conf+1)| (0+32768))
  2643     0624  1803               	skipnc
  2644     0625  3E01               	addlw	1
  2645     0626  0085               	movwf	5
  2646     0627  0800               	movf	0,w	;code access
  2647     0628  0081               	movwf	1
  2648     0629                     l3301:
  2649     0629  0836               	movf	initMatrix@j^(0+128),w
  2650     062A  3E02               	addlw	2
  2651     062B  00B6               	movwf	initMatrix@j^(0+128)
  2652     062C                     l3303:
  2653     062C  3004               	movlw	4
  2654     062D  0236               	subwf	initMatrix@j^(0+128),w
  2655     062E  1C03               	skipc
  2656     062F  2E31               	goto	u3571
  2657     0630  2E32               	goto	u3570
  2658     0631                     u3571:
  2659     0631  2E0E               	goto	l3299
  2660     0632                     u3570:
  2661     0632                     l3305:
  2662                           
  2663                           ;main.c: 75: };main.c: 76: k=k+2;
  2664     0632  0834               	movf	initMatrix@k^(0+128),w
  2665     0633  3E02               	addlw	2
  2666     0634  00B4               	movwf	initMatrix@k^(0+128)
  2667     0635                     l3307:
  2668                           
  2669                           ;main.c: 77: txSpi(spiCS1, data, 4);
  2670     0635  30B0               	movlw	(low (initMatrix@data| 0))& (0+255)
  2671     0636  00A5               	movwf	txSpi@data^(0+128)
  2672     0637  3004               	movlw	4
  2673     0638  00A6               	movwf	txSpi@dataSize^(0+128)
  2674     0639  3000               	movlw	0
  2675     063A  00A7               	movwf	(txSpi@dataSize^(0+128)+1)
  2676     063B  3000               	movlw	0
  2677     063C  318F  27A7  3186   	fcall	_txSpi
  2678     063F                     l3309:
  2679                           
  2680                           ;main.c: 78: if(i==4){
  2681     063F  3004               	movlw	4
  2682     0640  0021               	movlb	1	; select bank1
  2683     0641  0635               	xorwf	initMatrix@i^(0+128),w
  2684     0642  1D03               	btfss	3,2
  2685     0643  2E45               	goto	u3581
  2686     0644  2E46               	goto	u3580
  2687     0645                     u3581:
  2688     0645  2E52               	goto	l3313
  2689     0646                     u3580:
  2690     0646                     l3311:
  2691                           
  2692                           ;main.c: 79: _delay((unsigned long)((800)*(16000000/4000.0)));
  2693     0646  3011               	movlw	17
  2694     0647  0021               	movlb	1	; select bank1
  2695     0648  00AF               	movwf	(??_initMatrix^(0+128)+1)
  2696     0649  303C               	movlw	60
  2697     064A  00AE               	movwf	??_initMatrix^(0+128)
  2698     064B  30CB               	movlw	203
  2699     064C                     u3707:
  2700     064C  0B89               	decfsz	9,f
  2701     064D  2E4C               	goto	u3707
  2702     064E  0BAE               	decfsz	??_initMatrix^(0+128),f
  2703     064F  2E4C               	goto	u3707
  2704     0650  0BAF               	decfsz	(??_initMatrix^(0+128)+1),f
  2705     0651  2E4C               	goto	u3707
  2706     0652                     l3313:
  2707     0652  3001               	movlw	1
  2708     0653  0021               	movlb	1	; select bank1
  2709     0654  00AE               	movwf	??_initMatrix^(0+128)
  2710     0655  082E               	movf	??_initMatrix^(0+128),w
  2711     0656  07B5               	addwf	initMatrix@i^(0+128),f
  2712     0657                     l3315:
  2713     0657  3006               	movlw	6
  2714     0658  0235               	subwf	initMatrix@i^(0+128),w
  2715     0659  1C03               	skipc
  2716     065A  2E5C               	goto	u3591
  2717     065B  2E5D               	goto	u3590
  2718     065C                     u3591:
  2719     065C  2E0D               	goto	l3293
  2720     065D                     u3590:
  2721     065D                     l391:
  2722     065D  0008               	return
  2723     065E                     __end_of_initMatrix:
  2724                           
  2725                           	psect	text2
  2726     0E62                     __ptext2:	
  2727 ;; *************** function _matrixClear *****************
  2728 ;; Defined at:
  2729 ;;		line 52 in file "main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  i               1   13[BANK1 ] unsigned char 
  2734 ;;  data            4    9[BANK1 ] unsigned char [4]
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      void 
  2737 ;; Registers used:
  2738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2744 ;;      Params:         0       0       0       0       0       0
  2745 ;;      Locals:         0       0       5       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0
  2747 ;;      Totals:         0       0       5       0       0       0
  2748 ;;Total ram usage:        5 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 11
  2751 ;; This function calls:
  2752 ;;		_txSpi
  2753 ;; This function is called by:
  2754 ;;		_initMatrix
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758     0E62                     _matrixClear:	
  2759                           ;psect for function _matrixClear
  2760                           
  2761     0E62                     l3081:	
  2762                           ;incstack = 0
  2763                           ; Regs used in _matrixClear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2764                           
  2765                           
  2766                           ;main.c: 53: uint8_t data[4];;main.c: 55: for(uint8_t i=8;i>0;i--){
  2767     0E62  3008               	movlw	8
  2768     0E63  0021               	movlb	1	; select bank1
  2769     0E64  00AD               	movwf	matrixClear@i^(0+128)
  2770     0E65                     l3087:
  2771                           
  2772                           ;main.c: 59: data[0] = i;
  2773     0E65  082D               	movf	matrixClear@i^(0+128),w
  2774     0E66  00A9               	movwf	matrixClear@data^(0+128)
  2775     0E67                     l3089:
  2776                           
  2777                           ;main.c: 60: data[1] = 0;
  2778     0E67  01AA               	clrf	(matrixClear@data^(0+128)+1)
  2779     0E68                     l3091:
  2780                           
  2781                           ;main.c: 61: data[2] = i;
  2782     0E68  082D               	movf	matrixClear@i^(0+128),w
  2783     0E69  00AB               	movwf	(matrixClear@data^(0+128)+2)
  2784                           
  2785                           ;main.c: 62: data[3] = 0;
  2786     0E6A  01AC               	clrf	(matrixClear@data^(0+128)+3)
  2787     0E6B                     l3093:
  2788                           
  2789                           ;main.c: 63: txSpi(spiCS1, data, 4);
  2790     0E6B  30A9               	movlw	(low (matrixClear@data| 0))& (0+255)
  2791     0E6C  00A5               	movwf	txSpi@data^(0+128)
  2792     0E6D  3004               	movlw	4
  2793     0E6E  00A6               	movwf	txSpi@dataSize^(0+128)
  2794     0E6F  3000               	movlw	0
  2795     0E70  00A7               	movwf	(txSpi@dataSize^(0+128)+1)
  2796     0E71  3000               	movlw	0
  2797     0E72  318F  27A7  318E   	fcall	_txSpi
  2798     0E75                     l3095:
  2799     0E75  3001               	movlw	1
  2800     0E76  0021               	movlb	1	; select bank1
  2801     0E77  02AD               	subwf	matrixClear@i^(0+128),f
  2802     0E78                     l3097:
  2803     0E78  082D               	movf	matrixClear@i^(0+128),w
  2804     0E79  1D03               	btfss	3,2
  2805     0E7A  2E7C               	goto	u3161
  2806     0E7B  2E7D               	goto	u3160
  2807     0E7C                     u3161:
  2808     0E7C  2E65               	goto	l3087
  2809     0E7D                     u3160:
  2810     0E7D                     l383:
  2811     0E7D  0008               	return
  2812     0E7E                     __end_of_matrixClear:
  2813                           
  2814                           	psect	text3
  2815     0FA7                     __ptext3:	
  2816 ;; *************** function _txSpi *****************
  2817 ;; Defined at:
  2818 ;;		line 129 in file "main.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  cs              1    wreg     enum E2499
  2821 ;;  data            1    5[BANK1 ] PTR unsigned char 
  2822 ;;		 -> Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), matrixClear@data(4), 
  2823 ;;  dataSize        2    6[BANK1 ] unsigned int 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  cs              1    8[BANK1 ] enum E2499
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2835 ;;      Params:         0       0       3       0       0       0
  2836 ;;      Locals:         0       0       1       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0
  2838 ;;      Totals:         0       0       4       0       0       0
  2839 ;;Total ram usage:        4 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 10
  2842 ;; This function calls:
  2843 ;;		_SPI1_ExchangeBlock
  2844 ;; This function is called by:
  2845 ;;		_matrixClear
  2846 ;;		_initMatrix
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850     0FA7                     _txSpi:	
  2851                           ;psect for function _txSpi
  2852                           
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _txSpi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2856                           ;txSpi@cs stored from wreg
  2857     0FA7  0021               	movlb	1	; select bank1
  2858     0FA8  00A8               	movwf	txSpi@cs^(0+128)
  2859     0FA9                     l2953:
  2860                           
  2861                           ;main.c: 130: switch(cs){
  2862     0FA9  2FB0               	goto	l2957
  2863     0FAA                     l412:	
  2864                           ;main.c: 132: do { LATBbits.LATB3 = 0; } while(0);
  2865                           
  2866     0FAA  0022               	movlb	2	; select bank2
  2867     0FAB  118D               	bcf	13,3	;volatile
  2868     0FAC  2FB8               	goto	l2959
  2869     0FAD                     l416:	
  2870                           ;main.c: 135: do { LATAbits.LATA4 = 0; } while(0);
  2871                           
  2872     0FAD  0022               	movlb	2	; select bank2
  2873     0FAE  120C               	bcf	12,4	;volatile
  2874     0FAF  2FB8               	goto	l2959
  2875     0FB0                     l2957:
  2876     0FB0  0828               	movf	txSpi@cs^(0+128),w
  2877                           
  2878                           ; Switch size 1, requested type "simple"
  2879                           ; Number of cases is 2, Range of values is 0 to 1
  2880                           ; switch strategies available:
  2881                           ; Name         Instructions Cycles
  2882                           ; simple_byte            7     4 (average)
  2883                           ; direct_byte           10     6 (fixed)
  2884                           ; jumptable            260     6 (fixed)
  2885                           ;	Chosen strategy is simple_byte
  2886     0FB1  3A00               	xorlw	0	; case 0
  2887     0FB2  1903               	skipnz
  2888     0FB3  2FAA               	goto	l412
  2889     0FB4  3A01               	xorlw	1	; case 1
  2890     0FB5  1903               	skipnz
  2891     0FB6  2FAD               	goto	l416
  2892     0FB7  2FB8               	goto	l2959
  2893     0FB8                     l2959:
  2894                           
  2895                           ;main.c: 138: SPI1_ExchangeBlock(data,dataSize);
  2896     0FB8  0021               	movlb	1	; select bank1
  2897     0FB9  0827               	movf	(txSpi@dataSize+1)^(0+128),w
  2898     0FBA  00A1               	movwf	(SPI1_ExchangeBlock@blockSize+1)^(0+128)
  2899     0FBB  0826               	movf	txSpi@dataSize^(0+128),w
  2900     0FBC  00A0               	movwf	SPI1_ExchangeBlock@blockSize^(0+128)
  2901     0FBD  0825               	movf	txSpi@data^(0+128),w
  2902     0FBE  318F  277D  318F   	fcall	_SPI1_ExchangeBlock
  2903                           
  2904                           ;main.c: 139: switch(cs){
  2905     0FC1  2FC8               	goto	l2963
  2906     0FC2                     l420:	
  2907                           ;main.c: 141: do { LATBbits.LATB3 = 1; } while(0);
  2908                           
  2909     0FC2  0022               	movlb	2	; select bank2
  2910     0FC3  158D               	bsf	13,3	;volatile
  2911     0FC4  2FD1               	goto	l426
  2912     0FC5                     l424:	
  2913                           ;main.c: 144: do { LATAbits.LATA4 = 1; } while(0);
  2914                           
  2915     0FC5  0022               	movlb	2	; select bank2
  2916     0FC6  160C               	bsf	12,4	;volatile
  2917     0FC7  2FD1               	goto	l426
  2918     0FC8                     l2963:
  2919     0FC8  0021               	movlb	1	; select bank1
  2920     0FC9  0828               	movf	txSpi@cs^(0+128),w
  2921                           
  2922                           ; Switch size 1, requested type "simple"
  2923                           ; Number of cases is 2, Range of values is 0 to 1
  2924                           ; switch strategies available:
  2925                           ; Name         Instructions Cycles
  2926                           ; simple_byte            7     4 (average)
  2927                           ; direct_byte           10     6 (fixed)
  2928                           ; jumptable            260     6 (fixed)
  2929                           ;	Chosen strategy is simple_byte
  2930     0FCA  3A00               	xorlw	0	; case 0
  2931     0FCB  1903               	skipnz
  2932     0FCC  2FC2               	goto	l420
  2933     0FCD  3A01               	xorlw	1	; case 1
  2934     0FCE  1903               	skipnz
  2935     0FCF  2FC5               	goto	l424
  2936     0FD0  2FD1               	goto	l426
  2937     0FD1                     l426:
  2938     0FD1  0008               	return
  2939     0FD2                     __end_of_txSpi:
  2940                           
  2941                           	psect	text4
  2942     0F7D                     __ptext4:	
  2943 ;; *************** function _SPI1_ExchangeBlock *****************
  2944 ;; Defined at:
  2945 ;;		line 100 in file "mcc_generated_files/spi1.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  block           1    wreg     PTR void 
  2948 ;;		 -> Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), matrixClear@data(4), 
  2949 ;;  blockSize       2    0[BANK1 ] unsigned int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  block           1    3[BANK1 ] PTR void 
  2952 ;;		 -> Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), matrixClear@data(4), 
  2953 ;;  data            1    4[BANK1 ] PTR unsigned char 
  2954 ;;		 -> Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), matrixClear@data(4), 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2964 ;;      Params:         0       0       2       0       0       0
  2965 ;;      Locals:         0       0       2       0       0       0
  2966 ;;      Temps:          0       0       1       0       0       0
  2967 ;;      Totals:         0       0       5       0       0       0
  2968 ;;Total ram usage:        5 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 9
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_txSpi
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     0F7D                     _SPI1_ExchangeBlock:	
  2979                           ;psect for function _SPI1_ExchangeBlock
  2980                           
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  2984                           ;SPI1_ExchangeBlock@block stored from wreg
  2985     0F7D  0021               	movlb	1	; select bank1
  2986     0F7E  00A3               	movwf	SPI1_ExchangeBlock@block^(0+128)
  2987     0F7F                     l2845:
  2988                           
  2989                           ;spi1.c: 102: uint8_t *data = block;
  2990     0F7F  0823               	movf	SPI1_ExchangeBlock@block^(0+128),w
  2991     0F80  00A4               	movwf	SPI1_ExchangeBlock@data^(0+128)
  2992                           
  2993                           ;spi1.c: 103: while(blockSize--)
  2994     0F81  2F9A               	goto	l2853
  2995     0F82                     l2847:
  2996                           
  2997                           ;spi1.c: 104: {;spi1.c: 105: SSP1BUF = *data;
  2998     0F82  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  2999     0F83  0086               	movwf	6
  3000     0F84  0187               	clrf	7
  3001     0F85  0801               	movf	1,w
  3002     0F86  0024               	movlb	4	; select bank4
  3003     0F87  0091               	movwf	17	;volatile
  3004     0F88                     l39:	
  3005                           ;spi1.c: 106: while(!PIR1bits.SSP1IF);
  3006                           
  3007     0F88  0020               	movlb	0	; select bank0
  3008     0F89  1D91               	btfss	17,3	;volatile
  3009     0F8A  2F8C               	goto	u2861
  3010     0F8B  2F8D               	goto	u2860
  3011     0F8C                     u2861:
  3012     0F8C  2F88               	goto	l39
  3013     0F8D                     u2860:
  3014     0F8D                     l41:
  3015                           
  3016                           ;spi1.c: 107: PIR1bits.SSP1IF = 0;
  3017     0F8D  1191               	bcf	17,3	;volatile
  3018     0F8E                     l2849:
  3019                           
  3020                           ;spi1.c: 108: *data++ = SSP1BUF;
  3021     0F8E  0021               	movlb	1	; select bank1
  3022     0F8F  0824               	movf	SPI1_ExchangeBlock@data^(0+128),w
  3023     0F90  0086               	movwf	6
  3024     0F91  0187               	clrf	7
  3025     0F92  0024               	movlb	4	; select bank4
  3026     0F93  0811               	movf	17,w	;volatile
  3027     0F94  0081               	movwf	1
  3028     0F95                     l2851:
  3029     0F95  3001               	movlw	1
  3030     0F96  0021               	movlb	1	; select bank1
  3031     0F97  00A2               	movwf	??_SPI1_ExchangeBlock^(0+128)
  3032     0F98  0822               	movf	??_SPI1_ExchangeBlock^(0+128),w
  3033     0F99  07A4               	addwf	SPI1_ExchangeBlock@data^(0+128),f
  3034     0F9A                     l2853:
  3035     0F9A  3001               	movlw	1
  3036     0F9B  02A0               	subwf	SPI1_ExchangeBlock@blockSize^(0+128),f
  3037     0F9C  3000               	movlw	0
  3038     0F9D  3BA1               	subwfb	(SPI1_ExchangeBlock@blockSize+1)^(0+128),f
  3039     0F9E  0A20               	incf	SPI1_ExchangeBlock@blockSize^(0+128),w
  3040     0F9F  1D03               	skipz
  3041     0FA0  2FA5               	goto	u2871
  3042     0FA1  0A21               	incf	(SPI1_ExchangeBlock@blockSize+1)^(0+128),w
  3043     0FA2  1D03               	btfss	3,2
  3044     0FA3  2FA5               	goto	u2871
  3045     0FA4  2FA6               	goto	u2870
  3046     0FA5                     u2871:
  3047     0FA5  2F82               	goto	l2847
  3048     0FA6                     u2870:
  3049     0FA6                     l43:
  3050     0FA6  0008               	return
  3051     0FA7                     __end_of_SPI1_ExchangeBlock:
  3052                           
  3053                           	psect	text5
  3054     0593                     __ptext5:	
  3055 ;; *************** function _analisaRx *****************
  3056 ;; Defined at:
  3057 ;;		line 171 in file "main.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3071 ;;      Params:         0       0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 13
  3078 ;; This function calls:
  3079 ;;		_Ext_Read
  3080 ;;		___ftadd
  3081 ;;		___ftmul
  3082 ;;		___lwtoft
  3083 ;; This function is called by:
  3084 ;;		_main
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088     0593                     _analisaRx:	
  3089                           ;psect for function _analisaRx
  3090                           
  3091     0593                     l3317:	
  3092                           ;incstack = 0
  3093                           ; Regs used in _analisaRx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3094                           
  3095                           
  3096                           ;main.c: 172: if(bufferRx == 0x55){
  3097     0593  3055               	movlw	85
  3098     0594  0020               	movlb	0	; select bank0
  3099     0595  0654               	xorwf	_bufferRx,w
  3100     0596  1D03               	btfss	3,2
  3101     0597  2D99               	goto	u3601
  3102     0598  2D9A               	goto	u3600
  3103     0599                     u3601:
  3104     0599  2E05               	goto	l453
  3105     059A                     u3600:
  3106     059A                     l3319:
  3107                           
  3108                           ;main.c: 173: random = TMR1;
  3109     059A  0817               	movf	23,w	;volatile
  3110     059B  00DA               	movwf	_random+1
  3111     059C  0816               	movf	22,w	;volatile
  3112     059D  00D9               	movwf	_random
  3113     059E                     l3321:
  3114                           
  3115                           ;main.c: 174: x = 1;
  3116     059E  01DC               	clrf	_x
  3117     059F  0ADC               	incf	_x,f
  3118     05A0                     l3323:
  3119                           
  3120                           ;main.c: 175: a = -1.5 + 0.1*(random & 31);
  3121     05A0  3000               	movlw	0
  3122     05A1  0021               	movlb	1	; select bank1
  3123     05A2  00BB               	movwf	___ftadd@f1^(0+128)
  3124     05A3  30C0               	movlw	192
  3125     05A4  00BC               	movwf	(___ftadd@f1+1)^(0+128)
  3126     05A5  30BF               	movlw	191
  3127     05A6  00BD               	movwf	(___ftadd@f1+2)^(0+128)
  3128     05A7  30CD               	movlw	205
  3129     05A8  00AB               	movwf	___ftmul@f1^(0+128)
  3130     05A9  30CC               	movlw	204
  3131     05AA  00AC               	movwf	(___ftmul@f1+1)^(0+128)
  3132     05AB  303D               	movlw	61
  3133     05AC  00AD               	movwf	(___ftmul@f1+2)^(0+128)
  3134     05AD  301F               	movlw	31
  3135     05AE  0020               	movlb	0	; select bank0
  3136     05AF  0559               	andwf	_random,w
  3137     05B0  0021               	movlb	1	; select bank1
  3138     05B1  00A8               	movwf	___lwtoft@c^(0+128)
  3139     05B2  3000               	movlw	0
  3140     05B3  0020               	movlb	0	; select bank0
  3141     05B4  055A               	andwf	_random+1,w
  3142     05B5  0021               	movlb	1	; select bank1
  3143     05B6  00A9               	movwf	(___lwtoft@c+1)^(0+128)
  3144     05B7  318D  25D5  3185   	fcall	___lwtoft
  3145     05BA  0021               	movlb	1	; select bank1
  3146     05BB  0828               	movf	?___lwtoft^(0+128),w
  3147     05BC  00AE               	movwf	___ftmul@f2^(0+128)
  3148     05BD  0829               	movf	(?___lwtoft+1)^(0+128),w
  3149     05BE  00AF               	movwf	(___ftmul@f2+1)^(0+128)
  3150     05BF  082A               	movf	(?___lwtoft+2)^(0+128),w
  3151     05C0  00B0               	movwf	(___ftmul@f2+2)^(0+128)
  3152     05C1  3182  225A  3185   	fcall	___ftmul
  3153     05C4  0021               	movlb	1	; select bank1
  3154     05C5  082B               	movf	?___ftmul^(0+128),w
  3155     05C6  00BE               	movwf	___ftadd@f2^(0+128)
  3156     05C7  082C               	movf	(?___ftmul+1)^(0+128),w
  3157     05C8  00BF               	movwf	(___ftadd@f2+1)^(0+128)
  3158     05C9  082D               	movf	(?___ftmul+2)^(0+128),w
  3159     05CA  00C0               	movwf	(___ftadd@f2+2)^(0+128)
  3160     05CB  3180  202F  3185   	fcall	___ftadd
  3161     05CE  0021               	movlb	1	; select bank1
  3162     05CF  083B               	movf	?___ftadd^(0+128),w
  3163     05D0  0020               	movlb	0	; select bank0
  3164     05D1  00D6               	movwf	_a
  3165     05D2  0021               	movlb	1	; select bank1
  3166     05D3  083C               	movf	(?___ftadd+1)^(0+128),w
  3167     05D4  0020               	movlb	0	; select bank0
  3168     05D5  00D7               	movwf	_a+1
  3169     05D6  0021               	movlb	1	; select bank1
  3170     05D7  083D               	movf	(?___ftadd+2)^(0+128),w
  3171     05D8  0020               	movlb	0	; select bank0
  3172     05D9  00D8               	movwf	_a+2
  3173     05DA                     l3325:
  3174                           
  3175                           ;main.c: 176: incx = 1;
  3176     05DA  0021               	movlb	1	; select bank1
  3177     05DB  01D6               	clrf	_incx^(0+128)
  3178     05DC  0AD6               	incf	_incx^(0+128),f
  3179     05DD                     l3327:
  3180                           
  3181                           ;main.c: 177: T = random & 15;
  3182     05DD  0020               	movlb	0	; select bank0
  3183     05DE  0859               	movf	_random,w
  3184     05DF  390F               	andlw	15
  3185     05E0  00DD               	movwf	_T
  3186     05E1                     l3329:
  3187                           
  3188                           ;main.c: 178: y = random & 7;
  3189     05E1  0859               	movf	_random,w
  3190     05E2  3907               	andlw	7
  3191     05E3  00DB               	movwf	_y
  3192     05E4                     l3331:
  3193                           
  3194                           ;main.c: 179: if (T == 0){
  3195     05E4  085D               	movf	_T,w
  3196     05E5  1D03               	btfss	3,2
  3197     05E6  2DE8               	goto	u3611
  3198     05E7  2DE9               	goto	u3610
  3199     05E8                     u3611:
  3200     05E8  2DEB               	goto	l3335
  3201     05E9                     u3610:
  3202     05E9                     l3333:
  3203                           
  3204                           ;main.c: 180: T = 12;
  3205     05E9  300C               	movlw	12
  3206     05EA  00DD               	movwf	_T
  3207     05EB                     l3335:
  3208                           
  3209                           ;main.c: 181: };main.c: 182: address_read.v16 = 0;
  3210     05EB  01C4               	clrf	_address_read
  3211     05EC  01C5               	clrf	_address_read+1
  3212                           
  3213                           ;main.c: 183: while(address_read.v16 != address_write.v16){
  3214     05ED  2DFB               	goto	l3341
  3215     05EE                     l3337:
  3216                           
  3217                           ;main.c: 184: Ext_Read(address_read.b0, address_read.b1);
  3218     05EE  0845               	movf	_address_read+1,w
  3219     05EF  0021               	movlb	1	; select bank1
  3220     05F0  00AB               	movwf	Ext_Read@addressHigh^(0+128)
  3221     05F1  0020               	movlb	0	; select bank0
  3222     05F2  0844               	movf	_address_read,w
  3223     05F3  318E  26BE  3185   	fcall	_Ext_Read
  3224     05F6                     l3339:
  3225                           
  3226                           ;main.c: 185: address_read.v16++;
  3227     05F6  3001               	movlw	1
  3228     05F7  0020               	movlb	0	; select bank0
  3229     05F8  07C4               	addwf	_address_read,f
  3230     05F9  3000               	movlw	0
  3231     05FA  3DC5               	addwfc	_address_read+1,f
  3232     05FB                     l3341:
  3233     05FB  0847               	movf	_address_write+1,w
  3234     05FC  0645               	xorwf	_address_read+1,w
  3235     05FD  1D03               	skipz
  3236     05FE  2E01               	goto	u3625
  3237     05FF  0846               	movf	_address_write,w
  3238     0600  0644               	xorwf	_address_read,w
  3239     0601                     u3625:
  3240     0601  1D03               	skipz
  3241     0602  2E04               	goto	u3621
  3242     0603  2E05               	goto	u3620
  3243     0604                     u3621:
  3244     0604  2DEE               	goto	l3337
  3245     0605                     u3620:
  3246     0605                     l453:
  3247     0605  0008               	return
  3248     0606                     __end_of_analisaRx:
  3249                           
  3250                           	psect	text6
  3251     0DD5                     __ptext6:	
  3252 ;; *************** function ___lwtoft *****************
  3253 ;; Defined at:
  3254 ;;		line 28 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/lwtoft.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  c               2    8[BANK1 ] unsigned int 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  3    8[BANK1 ] float 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3268 ;;      Params:         0       0       3       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0
  3271 ;;      Totals:         0       0       3       0       0       0
  3272 ;;Total ram usage:        3 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 10
  3275 ;; This function calls:
  3276 ;;		___ftpack
  3277 ;; This function is called by:
  3278 ;;		_analisaRx
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283     0DD5                     ___lwtoft:	
  3284                           ;psect for function ___lwtoft
  3285                           
  3286     0DD5                     l3241:	
  3287                           ;incstack = 0
  3288                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3289                           
  3290     0DD5  0021               	movlb	1	; select bank1
  3291     0DD6  0828               	movf	___lwtoft@c^(0+128),w
  3292     0DD7  00A0               	movwf	___ftpack@arg^(0+128)
  3293     0DD8  0829               	movf	(___lwtoft@c+1)^(0+128),w
  3294     0DD9  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  3295     0DDA  01A2               	clrf	(___ftpack@arg+2)^(0+128)
  3296     0DDB  308E               	movlw	142
  3297     0DDC  00A3               	movwf	___ftpack@exp^(0+128)
  3298     0DDD  01A4               	clrf	___ftpack@sign^(0+128)
  3299     0DDE  3184  24AA  318D   	fcall	___ftpack
  3300     0DE1  0021               	movlb	1	; select bank1
  3301     0DE2  0820               	movf	?___ftpack^(0+128),w
  3302     0DE3  00A8               	movwf	?___lwtoft^(0+128)
  3303     0DE4  0821               	movf	(?___ftpack+1)^(0+128),w
  3304     0DE5  00A9               	movwf	(?___lwtoft+1)^(0+128)
  3305     0DE6  0822               	movf	(?___ftpack+2)^(0+128),w
  3306     0DE7  00AA               	movwf	(?___lwtoft+2)^(0+128)
  3307     0DE8                     l1063:
  3308     0DE8  0008               	return
  3309     0DE9                     __end_of___lwtoft:
  3310                           
  3311                           	psect	text7
  3312     025A                     __ptext7:	
  3313 ;; *************** function ___ftmul *****************
  3314 ;; Defined at:
  3315 ;;		line 62 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/ftmul.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  f1              3   11[BANK1 ] float 
  3318 ;;  f2              3   14[BANK1 ] float 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;  f3_as_produc    3   22[BANK1 ] unsigned um
  3321 ;;  sign            1   26[BANK1 ] unsigned char 
  3322 ;;  cntr            1   25[BANK1 ] unsigned char 
  3323 ;;  exp             1   21[BANK1 ] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  3   11[BANK1 ] float 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, pclath, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3333 ;;      Params:         0       0       6       0       0       0
  3334 ;;      Locals:         0       0       6       0       0       0
  3335 ;;      Temps:          0       0       4       0       0       0
  3336 ;;      Totals:         0       0      16       0       0       0
  3337 ;;Total ram usage:       16 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 10
  3340 ;; This function calls:
  3341 ;;		___ftpack
  3342 ;; This function is called by:
  3343 ;;		_analisaRx
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348     025A                     ___ftmul:	
  3349                           ;psect for function ___ftmul
  3350                           
  3351     025A                     l3191:	
  3352                           ;incstack = 0
  3353                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3354                           
  3355     025A  0021               	movlb	1	; select bank1
  3356     025B  082B               	movf	___ftmul@f1^(0+128),w
  3357     025C  00B1               	movwf	??___ftmul^(0+128)
  3358     025D  082C               	movf	(___ftmul@f1+1)^(0+128),w
  3359     025E  00B2               	movwf	(??___ftmul^(0+128)+1)
  3360     025F  082D               	movf	(___ftmul@f1+2)^(0+128),w
  3361     0260  00B3               	movwf	(??___ftmul^(0+128)+2)
  3362     0261  1003               	clrc
  3363     0262  0D32               	rlf	(??___ftmul^(0+128)+1),w
  3364     0263  0D33               	rlf	(??___ftmul^(0+128)+2),w
  3365     0264  00B5               	movwf	___ftmul@exp^(0+128)
  3366     0265  0835               	movf	___ftmul@exp^(0+128),w
  3367     0266  1D03               	btfss	3,2
  3368     0267  2A69               	goto	u3411
  3369     0268  2A6A               	goto	u3410
  3370     0269                     u3411:
  3371     0269  2A71               	goto	l3197
  3372     026A                     u3410:
  3373     026A                     l3193:
  3374     026A  3000               	movlw	0
  3375     026B  00AB               	movwf	?___ftmul^(0+128)
  3376     026C  3000               	movlw	0
  3377     026D  00AC               	movwf	(?___ftmul+1)^(0+128)
  3378     026E  3000               	movlw	0
  3379     026F  00AD               	movwf	(?___ftmul+2)^(0+128)
  3380     0270  2B0C               	goto	l915
  3381     0271                     l3197:
  3382     0271  082E               	movf	___ftmul@f2^(0+128),w
  3383     0272  00B1               	movwf	??___ftmul^(0+128)
  3384     0273  082F               	movf	(___ftmul@f2+1)^(0+128),w
  3385     0274  00B2               	movwf	(??___ftmul^(0+128)+1)
  3386     0275  0830               	movf	(___ftmul@f2+2)^(0+128),w
  3387     0276  00B3               	movwf	(??___ftmul^(0+128)+2)
  3388     0277  1003               	clrc
  3389     0278  0D32               	rlf	(??___ftmul^(0+128)+1),w
  3390     0279  0D33               	rlf	(??___ftmul^(0+128)+2),w
  3391     027A  00BA               	movwf	___ftmul@sign^(0+128)
  3392     027B  083A               	movf	___ftmul@sign^(0+128),w
  3393     027C  1D03               	btfss	3,2
  3394     027D  2A7F               	goto	u3421
  3395     027E  2A80               	goto	u3420
  3396     027F                     u3421:
  3397     027F  2A87               	goto	l3203
  3398     0280                     u3420:
  3399     0280                     l3199:
  3400     0280  3000               	movlw	0
  3401     0281  00AB               	movwf	?___ftmul^(0+128)
  3402     0282  3000               	movlw	0
  3403     0283  00AC               	movwf	(?___ftmul+1)^(0+128)
  3404     0284  3000               	movlw	0
  3405     0285  00AD               	movwf	(?___ftmul+2)^(0+128)
  3406     0286  2B0C               	goto	l915
  3407     0287                     l3203:
  3408     0287  083A               	movf	___ftmul@sign^(0+128),w
  3409     0288  3E7B               	addlw	123
  3410     0289  00B1               	movwf	??___ftmul^(0+128)
  3411     028A  0831               	movf	??___ftmul^(0+128),w
  3412     028B  07B5               	addwf	___ftmul@exp^(0+128),f
  3413     028C  082B               	movf	___ftmul@f1^(0+128),w
  3414     028D  00B1               	movwf	??___ftmul^(0+128)
  3415     028E  082C               	movf	(___ftmul@f1+1)^(0+128),w
  3416     028F  00B2               	movwf	(??___ftmul^(0+128)+1)
  3417     0290  082D               	movf	(___ftmul@f1+2)^(0+128),w
  3418     0291  00B3               	movwf	(??___ftmul^(0+128)+2)
  3419     0292  3010               	movlw	16
  3420     0293                     u3435:
  3421     0293  36B3               	lsrf	(??___ftmul^(0+128)+2),f
  3422     0294  0CB2               	rrf	(??___ftmul^(0+128)+1),f
  3423     0295  0CB1               	rrf	??___ftmul^(0+128),f
  3424     0296                     u3430:
  3425     0296  0B89               	decfsz	9,f
  3426     0297  2A93               	goto	u3435
  3427     0298  0831               	movf	??___ftmul^(0+128),w
  3428     0299  00BA               	movwf	___ftmul@sign^(0+128)
  3429     029A  082E               	movf	___ftmul@f2^(0+128),w
  3430     029B  00B1               	movwf	??___ftmul^(0+128)
  3431     029C  082F               	movf	(___ftmul@f2+1)^(0+128),w
  3432     029D  00B2               	movwf	(??___ftmul^(0+128)+1)
  3433     029E  0830               	movf	(___ftmul@f2+2)^(0+128),w
  3434     029F  00B3               	movwf	(??___ftmul^(0+128)+2)
  3435     02A0  3010               	movlw	16
  3436     02A1                     u3445:
  3437     02A1  36B3               	lsrf	(??___ftmul^(0+128)+2),f
  3438     02A2  0CB2               	rrf	(??___ftmul^(0+128)+1),f
  3439     02A3  0CB1               	rrf	??___ftmul^(0+128),f
  3440     02A4                     u3440:
  3441     02A4  0B89               	decfsz	9,f
  3442     02A5  2AA1               	goto	u3445
  3443     02A6  0831               	movf	??___ftmul^(0+128),w
  3444     02A7  00B4               	movwf	(??___ftmul+3)^(0+128)
  3445     02A8  0834               	movf	(??___ftmul+3)^(0+128),w
  3446     02A9  06BA               	xorwf	___ftmul@sign^(0+128),f
  3447     02AA  3080               	movlw	128
  3448     02AB  00B1               	movwf	??___ftmul^(0+128)
  3449     02AC  0831               	movf	??___ftmul^(0+128),w
  3450     02AD  05BA               	andwf	___ftmul@sign^(0+128),f
  3451     02AE                     l3205:
  3452     02AE  17AC               	bsf	(___ftmul@f1^(0+128)+1),7
  3453     02AF                     l3207:
  3454     02AF  17AF               	bsf	(___ftmul@f2^(0+128)+1),7
  3455     02B0                     l3209:
  3456     02B0  30FF               	movlw	255
  3457     02B1  05AE               	andwf	___ftmul@f2^(0+128),f
  3458     02B2  30FF               	movlw	255
  3459     02B3  05AF               	andwf	(___ftmul@f2+1)^(0+128),f
  3460     02B4  3000               	movlw	0
  3461     02B5  05B0               	andwf	(___ftmul@f2+2)^(0+128),f
  3462     02B6                     l3211:
  3463     02B6  3000               	movlw	0
  3464     02B7  00B6               	movwf	___ftmul@f3_as_product^(0+128)
  3465     02B8  3000               	movlw	0
  3466     02B9  00B7               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  3467     02BA  3000               	movlw	0
  3468     02BB  00B8               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  3469     02BC                     l3213:
  3470     02BC  3007               	movlw	7
  3471     02BD  00B9               	movwf	___ftmul@cntr^(0+128)
  3472     02BE                     l3215:
  3473     02BE  1C2B               	btfss	___ftmul@f1^(0+128),0
  3474     02BF  2AC1               	goto	u3451
  3475     02C0  2AC2               	goto	u3450
  3476     02C1                     u3451:
  3477     02C1  2AC8               	goto	l3219
  3478     02C2                     u3450:
  3479     02C2                     l3217:
  3480     02C2  082E               	movf	___ftmul@f2^(0+128),w
  3481     02C3  07B6               	addwf	___ftmul@f3_as_product^(0+128),f
  3482     02C4  082F               	movf	(___ftmul@f2+1)^(0+128),w
  3483     02C5  3DB7               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  3484     02C6  0830               	movf	(___ftmul@f2+2)^(0+128),w
  3485     02C7  3DB8               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  3486     02C8                     l3219:
  3487     02C8  3001               	movlw	1
  3488     02C9                     u3465:
  3489     02C9  36AD               	lsrf	(___ftmul@f1+2)^(0+128),f
  3490     02CA  0CAC               	rrf	(___ftmul@f1+1)^(0+128),f
  3491     02CB  0CAB               	rrf	___ftmul@f1^(0+128),f
  3492     02CC  0B89               	decfsz	9,f
  3493     02CD  2AC9               	goto	u3465
  3494     02CE                     l3221:
  3495     02CE  3001               	movlw	1
  3496     02CF                     u3475:
  3497     02CF  35AE               	lslf	___ftmul@f2^(0+128),f
  3498     02D0  0DAF               	rlf	(___ftmul@f2+1)^(0+128),f
  3499     02D1  0DB0               	rlf	(___ftmul@f2+2)^(0+128),f
  3500     02D2  0B89               	decfsz	9,f
  3501     02D3  2ACF               	goto	u3475
  3502     02D4                     l3223:
  3503     02D4  3001               	movlw	1
  3504     02D5  02B9               	subwf	___ftmul@cntr^(0+128),f
  3505     02D6  1D03               	btfss	3,2
  3506     02D7  2AD9               	goto	u3481
  3507     02D8  2ADA               	goto	u3480
  3508     02D9                     u3481:
  3509     02D9  2ABE               	goto	l3215
  3510     02DA                     u3480:
  3511     02DA                     l3225:
  3512     02DA  3009               	movlw	9
  3513     02DB  00B9               	movwf	___ftmul@cntr^(0+128)
  3514     02DC                     l3227:
  3515     02DC  1C2B               	btfss	___ftmul@f1^(0+128),0
  3516     02DD  2ADF               	goto	u3491
  3517     02DE  2AE0               	goto	u3490
  3518     02DF                     u3491:
  3519     02DF  2AE6               	goto	l3231
  3520     02E0                     u3490:
  3521     02E0                     l3229:
  3522     02E0  082E               	movf	___ftmul@f2^(0+128),w
  3523     02E1  07B6               	addwf	___ftmul@f3_as_product^(0+128),f
  3524     02E2  082F               	movf	(___ftmul@f2+1)^(0+128),w
  3525     02E3  3DB7               	addwfc	(___ftmul@f3_as_product+1)^(0+128),f
  3526     02E4  0830               	movf	(___ftmul@f2+2)^(0+128),w
  3527     02E5  3DB8               	addwfc	(___ftmul@f3_as_product+2)^(0+128),f
  3528     02E6                     l3231:
  3529     02E6  3001               	movlw	1
  3530     02E7                     u3505:
  3531     02E7  36AD               	lsrf	(___ftmul@f1+2)^(0+128),f
  3532     02E8  0CAC               	rrf	(___ftmul@f1+1)^(0+128),f
  3533     02E9  0CAB               	rrf	___ftmul@f1^(0+128),f
  3534     02EA  0B89               	decfsz	9,f
  3535     02EB  2AE7               	goto	u3505
  3536     02EC                     l3233:
  3537     02EC  3001               	movlw	1
  3538     02ED                     u3515:
  3539     02ED  36B8               	lsrf	(___ftmul@f3_as_product+2)^(0+128),f
  3540     02EE  0CB7               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  3541     02EF  0CB6               	rrf	___ftmul@f3_as_product^(0+128),f
  3542     02F0  0B89               	decfsz	9,f
  3543     02F1  2AED               	goto	u3515
  3544     02F2                     l3235:
  3545     02F2  3001               	movlw	1
  3546     02F3  02B9               	subwf	___ftmul@cntr^(0+128),f
  3547     02F4  1D03               	btfss	3,2
  3548     02F5  2AF7               	goto	u3521
  3549     02F6  2AF8               	goto	u3520
  3550     02F7                     u3521:
  3551     02F7  2ADC               	goto	l3227
  3552     02F8                     u3520:
  3553     02F8                     l3237:
  3554     02F8  0836               	movf	___ftmul@f3_as_product^(0+128),w
  3555     02F9  00A0               	movwf	___ftpack@arg^(0+128)
  3556     02FA  0837               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  3557     02FB  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  3558     02FC  0838               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  3559     02FD  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  3560     02FE  0835               	movf	___ftmul@exp^(0+128),w
  3561     02FF  00A3               	movwf	___ftpack@exp^(0+128)
  3562     0300  083A               	movf	___ftmul@sign^(0+128),w
  3563     0301  00A4               	movwf	___ftpack@sign^(0+128)
  3564     0302  3184  24AA  3182   	fcall	___ftpack
  3565     0305  0021               	movlb	1	; select bank1
  3566     0306  0820               	movf	?___ftpack^(0+128),w
  3567     0307  00AB               	movwf	?___ftmul^(0+128)
  3568     0308  0821               	movf	(?___ftpack+1)^(0+128),w
  3569     0309  00AC               	movwf	(?___ftmul+1)^(0+128)
  3570     030A  0822               	movf	(?___ftpack+2)^(0+128),w
  3571     030B  00AD               	movwf	(?___ftmul+2)^(0+128)
  3572     030C                     l915:
  3573     030C  0008               	return
  3574     030D                     __end_of___ftmul:
  3575                           
  3576                           	psect	text8
  3577     002F                     __ptext8:	
  3578 ;; *************** function ___ftadd *****************
  3579 ;; Defined at:
  3580 ;;		line 86 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/ftadd.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  f1              3   27[BANK1 ] float 
  3583 ;;  f2              3   30[BANK1 ] float 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  exp1            1   38[BANK1 ] unsigned char 
  3586 ;;  exp2            1   37[BANK1 ] unsigned char 
  3587 ;;  sign            1   36[BANK1 ] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  3   27[BANK1 ] float 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, pclath, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3597 ;;      Params:         0       0       6       0       0       0
  3598 ;;      Locals:         0       0       3       0       0       0
  3599 ;;      Temps:          0       0       3       0       0       0
  3600 ;;      Totals:         0       0      12       0       0       0
  3601 ;;Total ram usage:       12 bytes
  3602 ;; Hardware stack levels used: 1
  3603 ;; Hardware stack levels required when called: 10
  3604 ;; This function calls:
  3605 ;;		___ftpack
  3606 ;; This function is called by:
  3607 ;;		_analisaRx
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612     002F                     ___ftadd:	
  3613                           ;psect for function ___ftadd
  3614                           
  3615     002F                     l3121:	
  3616                           ;incstack = 0
  3617                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3618                           
  3619     002F  0021               	movlb	1	; select bank1
  3620     0030  083B               	movf	___ftadd@f1^(0+128),w
  3621     0031  00C1               	movwf	??___ftadd^(0+128)
  3622     0032  083C               	movf	(___ftadd@f1+1)^(0+128),w
  3623     0033  00C2               	movwf	(??___ftadd^(0+128)+1)
  3624     0034  083D               	movf	(___ftadd@f1+2)^(0+128),w
  3625     0035  00C3               	movwf	(??___ftadd^(0+128)+2)
  3626     0036  1003               	clrc
  3627     0037  0D42               	rlf	(??___ftadd^(0+128)+1),w
  3628     0038  0D43               	rlf	(??___ftadd^(0+128)+2),w
  3629     0039  00C6               	movwf	___ftadd@exp1^(0+128)
  3630     003A  083E               	movf	___ftadd@f2^(0+128),w
  3631     003B  00C1               	movwf	??___ftadd^(0+128)
  3632     003C  083F               	movf	(___ftadd@f2+1)^(0+128),w
  3633     003D  00C2               	movwf	(??___ftadd^(0+128)+1)
  3634     003E  0840               	movf	(___ftadd@f2+2)^(0+128),w
  3635     003F  00C3               	movwf	(??___ftadd^(0+128)+2)
  3636     0040  1003               	clrc
  3637     0041  0D42               	rlf	(??___ftadd^(0+128)+1),w
  3638     0042  0D43               	rlf	(??___ftadd^(0+128)+2),w
  3639     0043  00C5               	movwf	___ftadd@exp2^(0+128)
  3640     0044  0846               	movf	___ftadd@exp1^(0+128),w
  3641     0045  1903               	btfsc	3,2
  3642     0046  2848               	goto	u3181
  3643     0047  2849               	goto	u3180
  3644     0048                     u3181:
  3645     0048  2859               	goto	l3127
  3646     0049                     u3180:
  3647     0049                     l3123:
  3648     0049  0845               	movf	___ftadd@exp2^(0+128),w
  3649     004A  0246               	subwf	___ftadd@exp1^(0+128),w
  3650     004B  1803               	skipnc
  3651     004C  284E               	goto	u3191
  3652     004D  284F               	goto	u3190
  3653     004E                     u3191:
  3654     004E  2860               	goto	l3131
  3655     004F                     u3190:
  3656     004F                     l3125:
  3657     004F  0845               	movf	___ftadd@exp2^(0+128),w
  3658     0050  00C1               	movwf	??___ftadd^(0+128)
  3659     0051  0846               	movf	___ftadd@exp1^(0+128),w
  3660     0052  02C1               	subwf	??___ftadd^(0+128),f
  3661     0053  3019               	movlw	25
  3662     0054  0241               	subwf	??___ftadd^(0+128),w
  3663     0055  1C03               	skipc
  3664     0056  2858               	goto	u3201
  3665     0057  2859               	goto	u3200
  3666     0058                     u3201:
  3667     0058  2860               	goto	l3131
  3668     0059                     u3200:
  3669     0059                     l3127:
  3670     0059  083E               	movf	___ftadd@f2^(0+128),w
  3671     005A  00BB               	movwf	?___ftadd^(0+128)
  3672     005B  083F               	movf	(___ftadd@f2+1)^(0+128),w
  3673     005C  00BC               	movwf	(?___ftadd+1)^(0+128)
  3674     005D  0840               	movf	(___ftadd@f2+2)^(0+128),w
  3675     005E  00BD               	movwf	(?___ftadd+2)^(0+128)
  3676     005F  2944               	goto	l869
  3677     0060                     l3131:
  3678     0060  0845               	movf	___ftadd@exp2^(0+128),w
  3679     0061  1903               	btfsc	3,2
  3680     0062  2864               	goto	u3211
  3681     0063  2865               	goto	u3210
  3682     0064                     u3211:
  3683     0064  2875               	goto	l872
  3684     0065                     u3210:
  3685     0065                     l3133:
  3686     0065  0846               	movf	___ftadd@exp1^(0+128),w
  3687     0066  0245               	subwf	___ftadd@exp2^(0+128),w
  3688     0067  1803               	skipnc
  3689     0068  286A               	goto	u3221
  3690     0069  286B               	goto	u3220
  3691     006A                     u3221:
  3692     006A  2876               	goto	l3137
  3693     006B                     u3220:
  3694     006B                     l3135:
  3695     006B  0846               	movf	___ftadd@exp1^(0+128),w
  3696     006C  00C1               	movwf	??___ftadd^(0+128)
  3697     006D  0845               	movf	___ftadd@exp2^(0+128),w
  3698     006E  02C1               	subwf	??___ftadd^(0+128),f
  3699     006F  3019               	movlw	25
  3700     0070  0241               	subwf	??___ftadd^(0+128),w
  3701     0071  1C03               	skipc
  3702     0072  2874               	goto	u3231
  3703     0073  2875               	goto	u3230
  3704     0074                     u3231:
  3705     0074  2876               	goto	l3137
  3706     0075                     u3230:
  3707     0075                     l872:
  3708     0075  2944               	goto	l869
  3709     0076                     l3137:
  3710     0076  3006               	movlw	6
  3711     0077  00C4               	movwf	___ftadd@sign^(0+128)
  3712     0078                     l3139:
  3713     0078  1FBD               	btfss	(___ftadd@f1+2)^(0+128),7
  3714     0079  287B               	goto	u3241
  3715     007A  287C               	goto	u3240
  3716     007B                     u3241:
  3717     007B  287D               	goto	l873
  3718     007C                     u3240:
  3719     007C                     l3141:
  3720     007C  17C4               	bsf	___ftadd@sign^(0+128),7
  3721     007D                     l873:
  3722     007D  1FC0               	btfss	(___ftadd@f2+2)^(0+128),7
  3723     007E  2880               	goto	u3251
  3724     007F  2881               	goto	u3250
  3725     0080                     u3251:
  3726     0080  2882               	goto	l874
  3727     0081                     u3250:
  3728     0081                     l3143:
  3729     0081  1744               	bsf	___ftadd@sign^(0+128),6
  3730     0082                     l874:
  3731     0082  17BC               	bsf	(___ftadd@f1^(0+128)+1),7
  3732     0083                     l3145:
  3733     0083  30FF               	movlw	255
  3734     0084  05BB               	andwf	___ftadd@f1^(0+128),f
  3735     0085  30FF               	movlw	255
  3736     0086  05BC               	andwf	(___ftadd@f1+1)^(0+128),f
  3737     0087  3000               	movlw	0
  3738     0088  05BD               	andwf	(___ftadd@f1+2)^(0+128),f
  3739     0089                     l3147:
  3740     0089  17BF               	bsf	(___ftadd@f2^(0+128)+1),7
  3741     008A  30FF               	movlw	255
  3742     008B  05BE               	andwf	___ftadd@f2^(0+128),f
  3743     008C  30FF               	movlw	255
  3744     008D  05BF               	andwf	(___ftadd@f2+1)^(0+128),f
  3745     008E  3000               	movlw	0
  3746     008F  05C0               	andwf	(___ftadd@f2+2)^(0+128),f
  3747     0090  0845               	movf	___ftadd@exp2^(0+128),w
  3748     0091  0246               	subwf	___ftadd@exp1^(0+128),w
  3749     0092  1803               	skipnc
  3750     0093  2895               	goto	u3261
  3751     0094  2896               	goto	u3260
  3752     0095                     u3261:
  3753     0095  28BE               	goto	l3159
  3754     0096                     u3260:
  3755     0096                     l3149:
  3756     0096  3001               	movlw	1
  3757     0097                     u3275:
  3758     0097  35BE               	lslf	___ftadd@f2^(0+128),f
  3759     0098  0DBF               	rlf	(___ftadd@f2+1)^(0+128),f
  3760     0099  0DC0               	rlf	(___ftadd@f2+2)^(0+128),f
  3761     009A  0B89               	decfsz	9,f
  3762     009B  2897               	goto	u3275
  3763     009C  3001               	movlw	1
  3764     009D  02C5               	subwf	___ftadd@exp2^(0+128),f
  3765     009E                     l3151:
  3766     009E  0845               	movf	___ftadd@exp2^(0+128),w
  3767     009F  0646               	xorwf	___ftadd@exp1^(0+128),w
  3768     00A0  1903               	skipnz
  3769     00A1  28A3               	goto	u3281
  3770     00A2  28A4               	goto	u3280
  3771     00A3                     u3281:
  3772     00A3  28B7               	goto	l3157
  3773     00A4                     u3280:
  3774     00A4                     l3153:
  3775     00A4  3001               	movlw	1
  3776     00A5  02C4               	subwf	___ftadd@sign^(0+128),f
  3777     00A6  0844               	movf	___ftadd@sign^(0+128),w
  3778     00A7  3907               	andlw	7
  3779     00A8  1D03               	btfss	3,2
  3780     00A9  28AB               	goto	u3291
  3781     00AA  28AC               	goto	u3290
  3782     00AB                     u3291:
  3783     00AB  2896               	goto	l3149
  3784     00AC                     u3290:
  3785     00AC  28B7               	goto	l3157
  3786     00AD                     l3155:
  3787     00AD  3001               	movlw	1
  3788     00AE                     u3305:
  3789     00AE  36BD               	lsrf	(___ftadd@f1+2)^(0+128),f
  3790     00AF  0CBC               	rrf	(___ftadd@f1+1)^(0+128),f
  3791     00B0  0CBB               	rrf	___ftadd@f1^(0+128),f
  3792     00B1  0B89               	decfsz	9,f
  3793     00B2  28AE               	goto	u3305
  3794     00B3  3001               	movlw	1
  3795     00B4  00C1               	movwf	??___ftadd^(0+128)
  3796     00B5  0841               	movf	??___ftadd^(0+128),w
  3797     00B6  07C6               	addwf	___ftadd@exp1^(0+128),f
  3798     00B7                     l3157:
  3799     00B7  0846               	movf	___ftadd@exp1^(0+128),w
  3800     00B8  0645               	xorwf	___ftadd@exp2^(0+128),w
  3801     00B9  1D03               	skipz
  3802     00BA  28BC               	goto	u3311
  3803     00BB  28BD               	goto	u3310
  3804     00BC                     u3311:
  3805     00BC  28AD               	goto	l3155
  3806     00BD                     u3310:
  3807     00BD  28EB               	goto	l883
  3808     00BE                     l3159:
  3809     00BE  0846               	movf	___ftadd@exp1^(0+128),w
  3810     00BF  0245               	subwf	___ftadd@exp2^(0+128),w
  3811     00C0  1803               	skipnc
  3812     00C1  28C3               	goto	u3321
  3813     00C2  28C4               	goto	u3320
  3814     00C3                     u3321:
  3815     00C3  28EB               	goto	l883
  3816     00C4                     u3320:
  3817     00C4                     l3161:
  3818     00C4  3001               	movlw	1
  3819     00C5                     u3335:
  3820     00C5  35BB               	lslf	___ftadd@f1^(0+128),f
  3821     00C6  0DBC               	rlf	(___ftadd@f1+1)^(0+128),f
  3822     00C7  0DBD               	rlf	(___ftadd@f1+2)^(0+128),f
  3823     00C8  0B89               	decfsz	9,f
  3824     00C9  28C5               	goto	u3335
  3825     00CA  3001               	movlw	1
  3826     00CB  02C6               	subwf	___ftadd@exp1^(0+128),f
  3827     00CC                     l3163:
  3828     00CC  0845               	movf	___ftadd@exp2^(0+128),w
  3829     00CD  0646               	xorwf	___ftadd@exp1^(0+128),w
  3830     00CE  1903               	skipnz
  3831     00CF  28D1               	goto	u3341
  3832     00D0  28D2               	goto	u3340
  3833     00D1                     u3341:
  3834     00D1  28E5               	goto	l3169
  3835     00D2                     u3340:
  3836     00D2                     l3165:
  3837     00D2  3001               	movlw	1
  3838     00D3  02C4               	subwf	___ftadd@sign^(0+128),f
  3839     00D4  0844               	movf	___ftadd@sign^(0+128),w
  3840     00D5  3907               	andlw	7
  3841     00D6  1D03               	btfss	3,2
  3842     00D7  28D9               	goto	u3351
  3843     00D8  28DA               	goto	u3350
  3844     00D9                     u3351:
  3845     00D9  28C4               	goto	l3161
  3846     00DA                     u3350:
  3847     00DA  28E5               	goto	l3169
  3848     00DB                     l3167:
  3849     00DB  3001               	movlw	1
  3850     00DC                     u3365:
  3851     00DC  36C0               	lsrf	(___ftadd@f2+2)^(0+128),f
  3852     00DD  0CBF               	rrf	(___ftadd@f2+1)^(0+128),f
  3853     00DE  0CBE               	rrf	___ftadd@f2^(0+128),f
  3854     00DF  0B89               	decfsz	9,f
  3855     00E0  28DC               	goto	u3365
  3856     00E1  3001               	movlw	1
  3857     00E2  00C1               	movwf	??___ftadd^(0+128)
  3858     00E3  0841               	movf	??___ftadd^(0+128),w
  3859     00E4  07C5               	addwf	___ftadd@exp2^(0+128),f
  3860     00E5                     l3169:
  3861     00E5  0846               	movf	___ftadd@exp1^(0+128),w
  3862     00E6  0645               	xorwf	___ftadd@exp2^(0+128),w
  3863     00E7  1D03               	skipz
  3864     00E8  28EA               	goto	u3371
  3865     00E9  28EB               	goto	u3370
  3866     00EA                     u3371:
  3867     00EA  28DB               	goto	l3167
  3868     00EB                     u3370:
  3869     00EB                     l883:
  3870     00EB  1FC4               	btfss	___ftadd@sign^(0+128),7
  3871     00EC  28EE               	goto	u3381
  3872     00ED  28EF               	goto	u3380
  3873     00EE                     u3381:
  3874     00EE  28FF               	goto	l3173
  3875     00EF                     u3380:
  3876     00EF                     l3171:
  3877     00EF  30FF               	movlw	255
  3878     00F0  06BB               	xorwf	___ftadd@f1^(0+128),f
  3879     00F1  30FF               	movlw	255
  3880     00F2  06BC               	xorwf	(___ftadd@f1+1)^(0+128),f
  3881     00F3  30FF               	movlw	255
  3882     00F4  06BD               	xorwf	(___ftadd@f1+2)^(0+128),f
  3883     00F5  3001               	movlw	1
  3884     00F6  07BB               	addwf	___ftadd@f1^(0+128),f
  3885     00F7  3000               	movlw	0
  3886     00F8  1803               	skipnc
  3887     00F9  3001               	movlw	1
  3888     00FA  07BC               	addwf	(___ftadd@f1+1)^(0+128),f
  3889     00FB  3000               	movlw	0
  3890     00FC  1803               	skipnc
  3891     00FD  3001               	movlw	1
  3892     00FE  07BD               	addwf	(___ftadd@f1+2)^(0+128),f
  3893     00FF                     l3173:
  3894     00FF  1F44               	btfss	___ftadd@sign^(0+128),6
  3895     0100  2902               	goto	u3391
  3896     0101  2903               	goto	u3390
  3897     0102                     u3391:
  3898     0102  2913               	goto	l3177
  3899     0103                     u3390:
  3900     0103                     l3175:
  3901     0103  30FF               	movlw	255
  3902     0104  06BE               	xorwf	___ftadd@f2^(0+128),f
  3903     0105  30FF               	movlw	255
  3904     0106  06BF               	xorwf	(___ftadd@f2+1)^(0+128),f
  3905     0107  30FF               	movlw	255
  3906     0108  06C0               	xorwf	(___ftadd@f2+2)^(0+128),f
  3907     0109  3001               	movlw	1
  3908     010A  07BE               	addwf	___ftadd@f2^(0+128),f
  3909     010B  3000               	movlw	0
  3910     010C  1803               	skipnc
  3911     010D  3001               	movlw	1
  3912     010E  07BF               	addwf	(___ftadd@f2+1)^(0+128),f
  3913     010F  3000               	movlw	0
  3914     0110  1803               	skipnc
  3915     0111  3001               	movlw	1
  3916     0112  07C0               	addwf	(___ftadd@f2+2)^(0+128),f
  3917     0113                     l3177:
  3918     0113  01C4               	clrf	___ftadd@sign^(0+128)
  3919     0114                     l3179:
  3920     0114  083B               	movf	___ftadd@f1^(0+128),w
  3921     0115  07BE               	addwf	___ftadd@f2^(0+128),f
  3922     0116  083C               	movf	(___ftadd@f1+1)^(0+128),w
  3923     0117  3DBF               	addwfc	(___ftadd@f2+1)^(0+128),f
  3924     0118  083D               	movf	(___ftadd@f1+2)^(0+128),w
  3925     0119  3DC0               	addwfc	(___ftadd@f2+2)^(0+128),f
  3926     011A                     l3181:
  3927     011A  1FC0               	btfss	(___ftadd@f2+2)^(0+128),7
  3928     011B  291D               	goto	u3401
  3929     011C  291E               	goto	u3400
  3930     011D                     u3401:
  3931     011D  2930               	goto	l3187
  3932     011E                     u3400:
  3933     011E                     l3183:
  3934     011E  30FF               	movlw	255
  3935     011F  06BE               	xorwf	___ftadd@f2^(0+128),f
  3936     0120  30FF               	movlw	255
  3937     0121  06BF               	xorwf	(___ftadd@f2+1)^(0+128),f
  3938     0122  30FF               	movlw	255
  3939     0123  06C0               	xorwf	(___ftadd@f2+2)^(0+128),f
  3940     0124  3001               	movlw	1
  3941     0125  07BE               	addwf	___ftadd@f2^(0+128),f
  3942     0126  3000               	movlw	0
  3943     0127  1803               	skipnc
  3944     0128  3001               	movlw	1
  3945     0129  07BF               	addwf	(___ftadd@f2+1)^(0+128),f
  3946     012A  3000               	movlw	0
  3947     012B  1803               	skipnc
  3948     012C  3001               	movlw	1
  3949     012D  07C0               	addwf	(___ftadd@f2+2)^(0+128),f
  3950     012E                     l3185:
  3951     012E  01C4               	clrf	___ftadd@sign^(0+128)
  3952     012F  0AC4               	incf	___ftadd@sign^(0+128),f
  3953     0130                     l3187:
  3954     0130  083E               	movf	___ftadd@f2^(0+128),w
  3955     0131  00A0               	movwf	___ftpack@arg^(0+128)
  3956     0132  083F               	movf	(___ftadd@f2+1)^(0+128),w
  3957     0133  00A1               	movwf	(___ftpack@arg+1)^(0+128)
  3958     0134  0840               	movf	(___ftadd@f2+2)^(0+128),w
  3959     0135  00A2               	movwf	(___ftpack@arg+2)^(0+128)
  3960     0136  0846               	movf	___ftadd@exp1^(0+128),w
  3961     0137  00A3               	movwf	___ftpack@exp^(0+128)
  3962     0138  0844               	movf	___ftadd@sign^(0+128),w
  3963     0139  00A4               	movwf	___ftpack@sign^(0+128)
  3964     013A  3184  24AA  3180   	fcall	___ftpack
  3965     013D  0021               	movlb	1	; select bank1
  3966     013E  0820               	movf	?___ftpack^(0+128),w
  3967     013F  00BB               	movwf	?___ftadd^(0+128)
  3968     0140  0821               	movf	(?___ftpack+1)^(0+128),w
  3969     0141  00BC               	movwf	(?___ftadd+1)^(0+128)
  3970     0142  0822               	movf	(?___ftpack+2)^(0+128),w
  3971     0143  00BD               	movwf	(?___ftadd+2)^(0+128)
  3972     0144                     l869:
  3973     0144  0008               	return
  3974     0145                     __end_of___ftadd:
  3975                           
  3976                           	psect	text9
  3977     04AA                     __ptext9:	
  3978 ;; *************** function ___ftpack *****************
  3979 ;; Defined at:
  3980 ;;		line 62 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/float.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  arg             3    0[BANK1 ] unsigned um
  3983 ;;  exp             1    3[BANK1 ] unsigned char 
  3984 ;;  sign            1    4[BANK1 ] unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  3    0[BANK1 ] float 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3996 ;;      Params:         0       0       5       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0
  3998 ;;      Temps:          0       0       3       0       0       0
  3999 ;;      Totals:         0       0       8       0       0       0
  4000 ;;Total ram usage:        8 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 9
  4003 ;; This function calls:
  4004 ;;		Nothing
  4005 ;; This function is called by:
  4006 ;;		___ftadd
  4007 ;;		___ftmul
  4008 ;;		___lwtoft
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012     04AA                     ___ftpack:	
  4013                           ;psect for function ___ftpack
  4014                           
  4015     04AA                     l2987:	
  4016                           ;incstack = 0
  4017                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4018                           
  4019     04AA  0021               	movlb	1	; select bank1
  4020     04AB  0823               	movf	___ftpack@exp^(0+128),w
  4021     04AC  1903               	btfsc	3,2
  4022     04AD  2CAF               	goto	u3041
  4023     04AE  2CB0               	goto	u3040
  4024     04AF                     u3041:
  4025     04AF  2CB7               	goto	l2991
  4026     04B0                     u3040:
  4027     04B0                     l2989:
  4028     04B0  0822               	movf	(___ftpack@arg+2)^(0+128),w
  4029     04B1  0421               	iorwf	(___ftpack@arg+1)^(0+128),w
  4030     04B2  0420               	iorwf	___ftpack@arg^(0+128),w
  4031     04B3  1D03               	skipz
  4032     04B4  2CB6               	goto	u3051
  4033     04B5  2CB7               	goto	u3050
  4034     04B6                     u3051:
  4035     04B6  2CC8               	goto	l2997
  4036     04B7                     u3050:
  4037     04B7                     l2991:
  4038     04B7  3000               	movlw	0
  4039     04B8  00A0               	movwf	?___ftpack^(0+128)
  4040     04B9  3000               	movlw	0
  4041     04BA  00A1               	movwf	(?___ftpack+1)^(0+128)
  4042     04BB  3000               	movlw	0
  4043     04BC  00A2               	movwf	(?___ftpack+2)^(0+128)
  4044     04BD  2D1E               	goto	l848
  4045     04BE                     l2995:
  4046     04BE  3001               	movlw	1
  4047     04BF  00A5               	movwf	??___ftpack^(0+128)
  4048     04C0  0825               	movf	??___ftpack^(0+128),w
  4049     04C1  07A3               	addwf	___ftpack@exp^(0+128),f
  4050     04C2  3001               	movlw	1
  4051     04C3                     u3065:
  4052     04C3  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  4053     04C4  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  4054     04C5  0CA0               	rrf	___ftpack@arg^(0+128),f
  4055     04C6  0B89               	decfsz	9,f
  4056     04C7  2CC3               	goto	u3065
  4057     04C8                     l2997:
  4058     04C8  30FE               	movlw	254
  4059     04C9  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  4060     04CA  1D03               	btfss	3,2
  4061     04CB  2CCD               	goto	u3071
  4062     04CC  2CCE               	goto	u3070
  4063     04CD                     u3071:
  4064     04CD  2CBE               	goto	l2995
  4065     04CE                     u3070:
  4066     04CE  2CE3               	goto	l852
  4067     04CF                     l2999:
  4068     04CF  3001               	movlw	1
  4069     04D0  00A5               	movwf	??___ftpack^(0+128)
  4070     04D1  0825               	movf	??___ftpack^(0+128),w
  4071     04D2  07A3               	addwf	___ftpack@exp^(0+128),f
  4072     04D3                     l3001:
  4073     04D3  3001               	movlw	1
  4074     04D4  07A0               	addwf	___ftpack@arg^(0+128),f
  4075     04D5  3000               	movlw	0
  4076     04D6  1803               	skipnc
  4077     04D7  3001               	movlw	1
  4078     04D8  07A1               	addwf	(___ftpack@arg+1)^(0+128),f
  4079     04D9  3000               	movlw	0
  4080     04DA  1803               	skipnc
  4081     04DB  3001               	movlw	1
  4082     04DC  07A2               	addwf	(___ftpack@arg+2)^(0+128),f
  4083     04DD                     l3003:
  4084     04DD  3001               	movlw	1
  4085     04DE                     u3085:
  4086     04DE  36A2               	lsrf	(___ftpack@arg+2)^(0+128),f
  4087     04DF  0CA1               	rrf	(___ftpack@arg+1)^(0+128),f
  4088     04E0  0CA0               	rrf	___ftpack@arg^(0+128),f
  4089     04E1  0B89               	decfsz	9,f
  4090     04E2  2CDE               	goto	u3085
  4091     04E3                     l852:
  4092     04E3  30FF               	movlw	255
  4093     04E4  0522               	andwf	(___ftpack@arg+2)^(0+128),w
  4094     04E5  1D03               	btfss	3,2
  4095     04E6  2CE8               	goto	u3091
  4096     04E7  2CE9               	goto	u3090
  4097     04E8                     u3091:
  4098     04E8  2CCF               	goto	l2999
  4099     04E9                     u3090:
  4100     04E9  2CF2               	goto	l3007
  4101     04EA                     l3005:
  4102     04EA  3001               	movlw	1
  4103     04EB  02A3               	subwf	___ftpack@exp^(0+128),f
  4104     04EC  3001               	movlw	1
  4105     04ED                     u3105:
  4106     04ED  35A0               	lslf	___ftpack@arg^(0+128),f
  4107     04EE  0DA1               	rlf	(___ftpack@arg+1)^(0+128),f
  4108     04EF  0DA2               	rlf	(___ftpack@arg+2)^(0+128),f
  4109     04F0  0B89               	decfsz	9,f
  4110     04F1  2CED               	goto	u3105
  4111     04F2                     l3007:
  4112     04F2  1BA1               	btfsc	(___ftpack@arg+1)^(0+128),7
  4113     04F3  2CF5               	goto	u3111
  4114     04F4  2CF6               	goto	u3110
  4115     04F5                     u3111:
  4116     04F5  2CFC               	goto	l859
  4117     04F6                     u3110:
  4118     04F6                     l3009:
  4119     04F6  3002               	movlw	2
  4120     04F7  0223               	subwf	___ftpack@exp^(0+128),w
  4121     04F8  1803               	skipnc
  4122     04F9  2CFB               	goto	u3121
  4123     04FA  2CFC               	goto	u3120
  4124     04FB                     u3121:
  4125     04FB  2CEA               	goto	l3005
  4126     04FC                     u3120:
  4127     04FC                     l859:
  4128     04FC  1823               	btfsc	___ftpack@exp^(0+128),0
  4129     04FD  2CFF               	goto	u3131
  4130     04FE  2D00               	goto	u3130
  4131     04FF                     u3131:
  4132     04FF  2D06               	goto	l860
  4133     0500                     u3130:
  4134     0500                     l3011:
  4135     0500  30FF               	movlw	255
  4136     0501  05A0               	andwf	___ftpack@arg^(0+128),f
  4137     0502  307F               	movlw	127
  4138     0503  05A1               	andwf	(___ftpack@arg+1)^(0+128),f
  4139     0504  30FF               	movlw	255
  4140     0505  05A2               	andwf	(___ftpack@arg+2)^(0+128),f
  4141     0506                     l860:
  4142     0506  1003               	clrc
  4143     0507  0CA3               	rrf	___ftpack@exp^(0+128),f
  4144     0508                     l3013:
  4145     0508  0823               	movf	___ftpack@exp^(0+128),w
  4146     0509  00A5               	movwf	??___ftpack^(0+128)
  4147     050A  01A6               	clrf	(??___ftpack^(0+128)+1)
  4148     050B  01A7               	clrf	(??___ftpack^(0+128)+2)
  4149     050C  3010               	movlw	16
  4150     050D                     u3145:
  4151     050D  35A5               	lslf	??___ftpack^(0+128),f
  4152     050E  0DA6               	rlf	(??___ftpack^(0+128)+1),f
  4153     050F  0DA7               	rlf	(??___ftpack^(0+128)+2),f
  4154     0510                     u3140:
  4155     0510  0B89               	decfsz	9,f
  4156     0511  2D0D               	goto	u3145
  4157     0512  0825               	movf	??___ftpack^(0+128),w
  4158     0513  04A0               	iorwf	___ftpack@arg^(0+128),f
  4159     0514  0826               	movf	(??___ftpack+1)^(0+128),w
  4160     0515  04A1               	iorwf	(___ftpack@arg+1)^(0+128),f
  4161     0516  0827               	movf	(??___ftpack+2)^(0+128),w
  4162     0517  04A2               	iorwf	(___ftpack@arg+2)^(0+128),f
  4163     0518                     l3015:
  4164     0518  0824               	movf	___ftpack@sign^(0+128),w
  4165     0519  1903               	btfsc	3,2
  4166     051A  2D1C               	goto	u3151
  4167     051B  2D1D               	goto	u3150
  4168     051C                     u3151:
  4169     051C  2D1E               	goto	l861
  4170     051D                     u3150:
  4171     051D                     l3017:
  4172     051D  17A2               	bsf	(___ftpack@arg^(0+128)+2),7
  4173     051E                     l861:
  4174     051E                     l848:
  4175     051E  0008               	return
  4176     051F                     __end_of___ftpack:
  4177                           
  4178                           	psect	text10
  4179     0EBE                     __ptext10:	
  4180 ;; *************** function _Ext_Read *****************
  4181 ;; Defined at:
  4182 ;;		line 212 in file "main.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  addressLow      1    wreg     unsigned char 
  4185 ;;  addressHigh     1   11[BANK1 ] unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  addressLow      1   12[BANK1 ] unsigned char 
  4188 ;;  data            4   13[BANK1 ] unsigned char [4]
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4198 ;;      Params:         0       0       1       0       0       0
  4199 ;;      Locals:         0       0       5       0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0
  4201 ;;      Totals:         0       0       6       0       0       0
  4202 ;;Total ram usage:        6 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; Hardware stack levels required when called: 12
  4205 ;; This function calls:
  4206 ;;		_EUSART_Write
  4207 ;;		_rxSpi
  4208 ;; This function is called by:
  4209 ;;		_analisaRx
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213     0EBE                     _Ext_Read:	
  4214                           ;psect for function _Ext_Read
  4215                           
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _Ext_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4219                           ;Ext_Read@addressLow stored from wreg
  4220     0EBE  0021               	movlb	1	; select bank1
  4221     0EBF  00AC               	movwf	Ext_Read@addressLow^(0+128)
  4222     0EC0                     l3099:
  4223                           
  4224                           ;main.c: 213: uint8_t data[4];;main.c: 214: data[0] = 0b00000011;
  4225     0EC0  3003               	movlw	3
  4226     0EC1  00AD               	movwf	Ext_Read@data^(0+128)
  4227                           
  4228                           ;main.c: 215: data[1] = addressLow;
  4229     0EC2  082C               	movf	Ext_Read@addressLow^(0+128),w
  4230     0EC3  00AE               	movwf	(Ext_Read@data^(0+128)+1)
  4231                           
  4232                           ;main.c: 216: data[2] = addressHigh;
  4233     0EC4  082B               	movf	Ext_Read@addressHigh^(0+128),w
  4234     0EC5  00AF               	movwf	(Ext_Read@data^(0+128)+2)
  4235     0EC6                     l3101:
  4236                           
  4237                           ;main.c: 217: data[3] = 0;
  4238     0EC6  01B0               	clrf	(Ext_Read@data^(0+128)+3)
  4239     0EC7                     l3103:
  4240                           
  4241                           ;main.c: 218: data[4] = 0;
  4242     0EC7  01B1               	clrf	(Ext_Read@data^(0+128)+4)
  4243     0EC8                     l3105:
  4244                           
  4245                           ;main.c: 219: rxSpi(spiCS2, data, 5);
  4246     0EC8  30AD               	movlw	(low (Ext_Read@data| 0))& (0+255)
  4247     0EC9  00A6               	movwf	rxSpi@block^(0+128)
  4248     0ECA  3005               	movlw	5
  4249     0ECB  00A7               	movwf	rxSpi@blockSize^(0+128)
  4250     0ECC  3001               	movlw	1
  4251     0ECD  318F  27D2  318E   	fcall	_rxSpi
  4252     0ED0                     l3107:
  4253                           
  4254                           ;main.c: 220: EUSART_Write(data[3]);
  4255     0ED0  0021               	movlb	1	; select bank1
  4256     0ED1  0830               	movf	(Ext_Read@data^(0+128)+3),w
  4257     0ED2  318D  258C  318E   	fcall	_EUSART_Write
  4258     0ED5                     l3109:
  4259                           
  4260                           ;main.c: 221: EUSART_Write(data[4]);
  4261     0ED5  0021               	movlb	1	; select bank1
  4262     0ED6  0831               	movf	(Ext_Read@data^(0+128)+4),w
  4263     0ED7  318D  258C  318E   	fcall	_EUSART_Write
  4264     0EDA                     l3111:
  4265                           
  4266                           ;main.c: 222: EUSART_Write(0x0D);
  4267     0EDA  300D               	movlw	13
  4268     0EDB  318D  258C  318E   	fcall	_EUSART_Write
  4269     0EDE                     l470:
  4270     0EDE  0008               	return
  4271     0EDF                     __end_of_Ext_Read:
  4272                           
  4273                           	psect	text11
  4274     0FD2                     __ptext11:	
  4275 ;; *************** function _rxSpi *****************
  4276 ;; Defined at:
  4277 ;;		line 150 in file "main.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  cs              1    wreg     enum E2499
  4280 ;;  block           1    6[BANK1 ] PTR void 
  4281 ;;		 -> Ext_Read@data(4), 
  4282 ;;  blockSize       1    7[BANK1 ] unsigned char 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  cs              1   10[BANK1 ] enum E2499
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      void 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4294 ;;      Params:         0       0       2       0       0       0
  4295 ;;      Locals:         0       0       1       0       0       0
  4296 ;;      Temps:          0       0       2       0       0       0
  4297 ;;      Totals:         0       0       5       0       0       0
  4298 ;;Total ram usage:        5 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; Hardware stack levels required when called: 11
  4301 ;; This function calls:
  4302 ;;		_SPI1_ReadBlock
  4303 ;; This function is called by:
  4304 ;;		_Ext_Read
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308     0FD2                     _rxSpi:	
  4309                           ;psect for function _rxSpi
  4310                           
  4311                           
  4312                           ;incstack = 0
  4313                           ; Regs used in _rxSpi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4314                           ;rxSpi@cs stored from wreg
  4315     0FD2  0021               	movlb	1	; select bank1
  4316     0FD3  00AA               	movwf	rxSpi@cs^(0+128)
  4317     0FD4                     l2965:
  4318                           
  4319                           ;main.c: 151: switch(cs){
  4320     0FD4  2FDB               	goto	l2969
  4321     0FD5                     l431:	
  4322                           ;main.c: 153: do { LATBbits.LATB3 = 0; } while(0);
  4323                           
  4324     0FD5  0022               	movlb	2	; select bank2
  4325     0FD6  118D               	bcf	13,3	;volatile
  4326     0FD7  2FE3               	goto	l2971
  4327     0FD8                     l435:	
  4328                           ;main.c: 156: do { LATAbits.LATA4 = 0; } while(0);
  4329                           
  4330     0FD8  0022               	movlb	2	; select bank2
  4331     0FD9  120C               	bcf	12,4	;volatile
  4332     0FDA  2FE3               	goto	l2971
  4333     0FDB                     l2969:
  4334     0FDB  082A               	movf	rxSpi@cs^(0+128),w
  4335                           
  4336                           ; Switch size 1, requested type "simple"
  4337                           ; Number of cases is 2, Range of values is 0 to 1
  4338                           ; switch strategies available:
  4339                           ; Name         Instructions Cycles
  4340                           ; simple_byte            7     4 (average)
  4341                           ; direct_byte           10     6 (fixed)
  4342                           ; jumptable            260     6 (fixed)
  4343                           ;	Chosen strategy is simple_byte
  4344     0FDC  3A00               	xorlw	0	; case 0
  4345     0FDD  1903               	skipnz
  4346     0FDE  2FD5               	goto	l431
  4347     0FDF  3A01               	xorlw	1	; case 1
  4348     0FE0  1903               	skipnz
  4349     0FE1  2FD8               	goto	l435
  4350     0FE2  2FE3               	goto	l2971
  4351     0FE3                     l2971:
  4352                           
  4353                           ;main.c: 159: SPI1_ReadBlock(block, blockSize);
  4354     0FE3  0021               	movlb	1	; select bank1
  4355     0FE4  0827               	movf	rxSpi@blockSize^(0+128),w
  4356     0FE5  00A8               	movwf	??_rxSpi^(0+128)
  4357     0FE6  01A9               	clrf	(??_rxSpi^(0+128)+1)
  4358     0FE7  0828               	movf	??_rxSpi^(0+128),w
  4359     0FE8  00A1               	movwf	SPI1_ReadBlock@blockSize^(0+128)
  4360     0FE9  0829               	movf	(??_rxSpi+1)^(0+128),w
  4361     0FEA  00A2               	movwf	(SPI1_ReadBlock@blockSize+1)^(0+128)
  4362     0FEB  0826               	movf	rxSpi@block^(0+128),w
  4363     0FEC  318E  267E  318F   	fcall	_SPI1_ReadBlock
  4364                           
  4365                           ;main.c: 160: switch(cs){
  4366     0FEF  2FF6               	goto	l2975
  4367     0FF0                     l439:	
  4368                           ;main.c: 162: do { LATBbits.LATB3 = 1; } while(0);
  4369                           
  4370     0FF0  0022               	movlb	2	; select bank2
  4371     0FF1  158D               	bsf	13,3	;volatile
  4372     0FF2  2FFF               	goto	l445
  4373     0FF3                     l443:	
  4374                           ;main.c: 165: do { LATAbits.LATA4 = 1; } while(0);
  4375                           
  4376     0FF3  0022               	movlb	2	; select bank2
  4377     0FF4  160C               	bsf	12,4	;volatile
  4378     0FF5  2FFF               	goto	l445
  4379     0FF6                     l2975:
  4380     0FF6  0021               	movlb	1	; select bank1
  4381     0FF7  082A               	movf	rxSpi@cs^(0+128),w
  4382                           
  4383                           ; Switch size 1, requested type "simple"
  4384                           ; Number of cases is 2, Range of values is 0 to 1
  4385                           ; switch strategies available:
  4386                           ; Name         Instructions Cycles
  4387                           ; simple_byte            7     4 (average)
  4388                           ; direct_byte           10     6 (fixed)
  4389                           ; jumptable            260     6 (fixed)
  4390                           ;	Chosen strategy is simple_byte
  4391     0FF8  3A00               	xorlw	0	; case 0
  4392     0FF9  1903               	skipnz
  4393     0FFA  2FF0               	goto	l439
  4394     0FFB  3A01               	xorlw	1	; case 1
  4395     0FFC  1903               	skipnz
  4396     0FFD  2FF3               	goto	l443
  4397     0FFE  2FFF               	goto	l445
  4398     0FFF                     l445:
  4399     0FFF  0008               	return
  4400     1000                     __end_of_rxSpi:
  4401                           
  4402                           	psect	text12
  4403     0E7E                     __ptext12:	
  4404 ;; *************** function _SPI1_ReadBlock *****************
  4405 ;; Defined at:
  4406 ;;		line 122 in file "mcc_generated_files/spi1.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  block           1    wreg     PTR void 
  4409 ;;		 -> Ext_Read@data(4), 
  4410 ;;  blockSize       2    1[BANK1 ] unsigned int 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  block           1    4[BANK1 ] PTR void 
  4413 ;;		 -> Ext_Read@data(4), 
  4414 ;;  data            1    5[BANK1 ] PTR unsigned char 
  4415 ;;		 -> Ext_Read@data(4), 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4425 ;;      Params:         0       0       2       0       0       0
  4426 ;;      Locals:         0       0       2       0       0       0
  4427 ;;      Temps:          0       0       1       0       0       0
  4428 ;;      Totals:         0       0       5       0       0       0
  4429 ;;Total ram usage:        5 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 10
  4432 ;; This function calls:
  4433 ;;		_SPI1_ExchangeByte
  4434 ;; This function is called by:
  4435 ;;		_rxSpi
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439     0E7E                     _SPI1_ReadBlock:	
  4440                           ;psect for function _SPI1_ReadBlock
  4441                           
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in _SPI1_ReadBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4445                           ;SPI1_ReadBlock@block stored from wreg
  4446     0E7E  0021               	movlb	1	; select bank1
  4447     0E7F  00A4               	movwf	SPI1_ReadBlock@block^(0+128)
  4448     0E80                     l2855:
  4449                           
  4450                           ;spi1.c: 124: uint8_t *data = block;
  4451     0E80  0824               	movf	SPI1_ReadBlock@block^(0+128),w
  4452     0E81  00A5               	movwf	SPI1_ReadBlock@data^(0+128)
  4453                           
  4454                           ;spi1.c: 125: while(blockSize--)
  4455     0E82  2E90               	goto	l2861
  4456     0E83                     l2857:
  4457                           
  4458                           ;spi1.c: 126: {;spi1.c: 127: *data++ = SPI1_ExchangeByte(0);
  4459     0E83  0825               	movf	SPI1_ReadBlock@data^(0+128),w
  4460     0E84  0086               	movwf	6
  4461     0E85  0187               	clrf	7
  4462     0E86  3000               	movlw	0
  4463     0E87  318D  25A6  318E   	fcall	_SPI1_ExchangeByte
  4464     0E8A  0081               	movwf	1
  4465     0E8B                     l2859:
  4466     0E8B  3001               	movlw	1
  4467     0E8C  0021               	movlb	1	; select bank1
  4468     0E8D  00A3               	movwf	??_SPI1_ReadBlock^(0+128)
  4469     0E8E  0823               	movf	??_SPI1_ReadBlock^(0+128),w
  4470     0E8F  07A5               	addwf	SPI1_ReadBlock@data^(0+128),f
  4471     0E90                     l2861:
  4472     0E90  3001               	movlw	1
  4473     0E91  02A1               	subwf	SPI1_ReadBlock@blockSize^(0+128),f
  4474     0E92  3000               	movlw	0
  4475     0E93  3BA2               	subwfb	(SPI1_ReadBlock@blockSize+1)^(0+128),f
  4476     0E94  0A21               	incf	SPI1_ReadBlock@blockSize^(0+128),w
  4477     0E95  1D03               	skipz
  4478     0E96  2E9B               	goto	u2881
  4479     0E97  0A22               	incf	(SPI1_ReadBlock@blockSize+1)^(0+128),w
  4480     0E98  1D03               	btfss	3,2
  4481     0E99  2E9B               	goto	u2881
  4482     0E9A  2E9C               	goto	u2880
  4483     0E9B                     u2881:
  4484     0E9B  2E83               	goto	l2857
  4485     0E9C                     u2880:
  4486     0E9C                     l55:
  4487     0E9C  0008               	return
  4488     0E9D                     __end_of_SPI1_ReadBlock:
  4489                           
  4490                           	psect	text13
  4491     0DA6                     __ptext13:	
  4492 ;; *************** function _SPI1_ExchangeByte *****************
  4493 ;; Defined at:
  4494 ;;		line 92 in file "mcc_generated_files/spi1.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  data            1    wreg     unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  data            1    0[BANK1 ] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  1    wreg      unsigned char 
  4501 ;; Registers used:
  4502 ;;		wreg
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4508 ;;      Params:         0       0       0       0       0       0
  4509 ;;      Locals:         0       0       1       0       0       0
  4510 ;;      Temps:          0       0       0       0       0       0
  4511 ;;      Totals:         0       0       1       0       0       0
  4512 ;;Total ram usage:        1 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 9
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_SPI1_ReadBlock
  4519 ;;		_SPI1_WriteBlock
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523     0DA6                     _SPI1_ExchangeByte:	
  4524                           ;psect for function _SPI1_ExchangeByte
  4525                           
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _SPI1_ExchangeByte: [wreg]
  4529                           ;SPI1_ExchangeByte@data stored from wreg
  4530     0DA6  0021               	movlb	1	; select bank1
  4531     0DA7  00A0               	movwf	SPI1_ExchangeByte@data^(0+128)
  4532     0DA8                     l2835:
  4533                           
  4534                           ;spi1.c: 94: SSP1BUF = data;
  4535     0DA8  0820               	movf	SPI1_ExchangeByte@data^(0+128),w
  4536     0DA9  0024               	movlb	4	; select bank4
  4537     0DAA  0091               	movwf	17	;volatile
  4538     0DAB                     l31:	
  4539                           ;spi1.c: 95: while(!PIR1bits.SSP1IF);
  4540                           
  4541     0DAB  0020               	movlb	0	; select bank0
  4542     0DAC  1D91               	btfss	17,3	;volatile
  4543     0DAD  2DAF               	goto	u2851
  4544     0DAE  2DB0               	goto	u2850
  4545     0DAF                     u2851:
  4546     0DAF  2DAB               	goto	l31
  4547     0DB0                     u2850:
  4548     0DB0                     l33:
  4549                           
  4550                           ;spi1.c: 96: PIR1bits.SSP1IF = 0;
  4551     0DB0  1191               	bcf	17,3	;volatile
  4552     0DB1                     l2837:
  4553                           
  4554                           ;spi1.c: 97: return SSP1BUF;
  4555     0DB1  0024               	movlb	4	; select bank4
  4556     0DB2  0811               	movf	17,w	;volatile
  4557     0DB3                     l34:
  4558     0DB3  0008               	return
  4559     0DB4                     __end_of_SPI1_ExchangeByte:
  4560                           
  4561                           	psect	text14
  4562     0D8C                     __ptext14:	
  4563 ;; *************** function _EUSART_Write *****************
  4564 ;; Defined at:
  4565 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  txData          1    wreg     unsigned char 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  txData          1    0[BANK1 ] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4579 ;;      Params:         0       0       0       0       0       0
  4580 ;;      Locals:         0       0       1       0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0
  4582 ;;      Totals:         0       0       1       0       0       0
  4583 ;;Total ram usage:        1 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 9
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_Ext_Read
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593     0D8C                     _EUSART_Write:	
  4594                           ;psect for function _EUSART_Write
  4595                           
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in _EUSART_Write: [wreg]
  4599                           ;EUSART_Write@txData stored from wreg
  4600     0D8C  0021               	movlb	1	; select bank1
  4601     0D8D  00A0               	movwf	EUSART_Write@txData^(0+128)
  4602     0D8E                     l2947:
  4603     0D8E                     l187:	
  4604                           ;eusart.c: 135: {
  4605                           
  4606     0D8E  0020               	movlb	0	; select bank0
  4607     0D8F  1E11               	btfss	17,4	;volatile
  4608     0D90  2D92               	goto	u2991
  4609     0D91  2D93               	goto	u2990
  4610     0D92                     u2991:
  4611     0D92  2D8E               	goto	l187
  4612     0D93                     u2990:
  4613     0D93                     l2949:
  4614                           
  4615                           ;eusart.c: 136: };eusart.c: 138: TXREG = txData;
  4616     0D93  0021               	movlb	1	; select bank1
  4617     0D94  0820               	movf	EUSART_Write@txData^(0+128),w
  4618     0D95  0023               	movlb	3	; select bank3
  4619     0D96  009A               	movwf	26	;volatile
  4620     0D97                     l190:
  4621     0D97  0008               	return
  4622     0D98                     __end_of_EUSART_Write:
  4623                           
  4624                           	psect	text15
  4625     0DE9                     __ptext15:	
  4626 ;; *************** function _SYSTEM_Initialize *****************
  4627 ;; Defined at:
  4628 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0, pclath, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4642 ;;      Params:         0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0
  4645 ;;      Totals:         0       0       0       0       0       0
  4646 ;;Total ram usage:        0 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 11
  4649 ;; This function calls:
  4650 ;;		_EUSART_Initialize
  4651 ;;		_OSCILLATOR_Initialize
  4652 ;;		_PIN_MANAGER_Initialize
  4653 ;;		_SPI1_Initialize
  4654 ;;		_TMR1_Initialize
  4655 ;;		_TMR2_Initialize
  4656 ;;		_WDT_Initialize
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662     0DE9                     _SYSTEM_Initialize:	
  4663                           ;psect for function _SYSTEM_Initialize
  4664                           
  4665     0DE9                     l3259:	
  4666                           ;incstack = 0
  4667                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4668                           
  4669                           
  4670                           ;mcc.c: 53: SPI1_Initialize();
  4671     0DE9  318D  2574  318D   	fcall	_SPI1_Initialize
  4672                           
  4673                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  4674     0DEC  318E  2616  318D   	fcall	_PIN_MANAGER_Initialize
  4675                           
  4676                           ;mcc.c: 55: OSCILLATOR_Initialize();
  4677     0DEF  318D  253F  318D   	fcall	_OSCILLATOR_Initialize
  4678                           
  4679                           ;mcc.c: 56: WDT_Initialize();
  4680     0DF2  318D  2530  318D   	fcall	_WDT_Initialize
  4681                           
  4682                           ;mcc.c: 57: TMR2_Initialize();
  4683     0DF5  318D  25C3  318D   	fcall	_TMR2_Initialize
  4684                           
  4685                           ;mcc.c: 58: TMR1_Initialize();
  4686     0DF8  318D  2580  318D   	fcall	_TMR1_Initialize
  4687                           
  4688                           ;mcc.c: 59: EUSART_Initialize();
  4689     0DFB  318E  26DF  318D   	fcall	_EUSART_Initialize
  4690     0DFE                     l86:
  4691     0DFE  0008               	return
  4692     0DFF                     __end_of_SYSTEM_Initialize:
  4693                           
  4694                           	psect	text16
  4695     0D30                     __ptext16:	
  4696 ;; *************** function _WDT_Initialize *****************
  4697 ;; Defined at:
  4698 ;;		line 72 in file "mcc_generated_files/mcc.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4712 ;;      Params:         0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0
  4715 ;;      Totals:         0       0       0       0       0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used: 1
  4718 ;; Hardware stack levels required when called: 9
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_SYSTEM_Initialize
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726     0D30                     _WDT_Initialize:	
  4727                           ;psect for function _WDT_Initialize
  4728                           
  4729     0D30                     l3047:	
  4730                           ;incstack = 0
  4731                           ; Regs used in _WDT_Initialize: [wreg]
  4732                           
  4733                           
  4734                           ;mcc.c: 75: WDTCON = 0x16;
  4735     0D30  3016               	movlw	22
  4736     0D31  0021               	movlb	1	; select bank1
  4737     0D32  0097               	movwf	23	;volatile
  4738     0D33                     l92:
  4739     0D33  0008               	return
  4740     0D34                     __end_of_WDT_Initialize:
  4741                           
  4742                           	psect	text17
  4743     0DC3                     __ptext17:	
  4744 ;; *************** function _TMR2_Initialize *****************
  4745 ;; Defined at:
  4746 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;		None
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      void 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, pclath, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4760 ;;      Params:         0       0       0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0
  4763 ;;      Totals:         0       0       0       0       0       0
  4764 ;;Total ram usage:        0 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 10
  4767 ;; This function calls:
  4768 ;;		_TMR2_SetInterruptHandler
  4769 ;; This function is called by:
  4770 ;;		_SYSTEM_Initialize
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774     0DC3                     _TMR2_Initialize:	
  4775                           ;psect for function _TMR2_Initialize
  4776                           
  4777     0DC3                     l3049:	
  4778                           ;incstack = 0
  4779                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4780                           
  4781                           
  4782                           ;tmr2.c: 69: PR2 = 0x9B;
  4783     0DC3  309B               	movlw	155
  4784     0DC4  0020               	movlb	0	; select bank0
  4785     0DC5  009B               	movwf	27	;volatile
  4786     0DC6                     l3051:
  4787                           
  4788                           ;tmr2.c: 72: TMR2 = 0x00;
  4789     0DC6  019A               	clrf	26	;volatile
  4790     0DC7                     l3053:
  4791                           
  4792                           ;tmr2.c: 75: PIR1bits.TMR2IF = 0;
  4793     0DC7  1091               	bcf	17,1	;volatile
  4794     0DC8                     l3055:
  4795                           
  4796                           ;tmr2.c: 78: PIE1bits.TMR2IE = 1;
  4797     0DC8  0021               	movlb	1	; select bank1
  4798     0DC9  1491               	bsf	17,1	;volatile
  4799     0DCA                     l3057:
  4800                           
  4801                           ;tmr2.c: 81: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  4802     0DCA  3003               	movlw	low _TMR2_DefaultInterruptHandler
  4803     0DCB  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  4804     0DCC  3000               	movlw	high _TMR2_DefaultInterruptHandler
  4805     0DCD  00A1               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4806     0DCE  318D  2561  318D   	fcall	_TMR2_SetInterruptHandler
  4807     0DD1                     l3059:
  4808                           
  4809                           ;tmr2.c: 84: T2CON = 0x4F;
  4810     0DD1  304F               	movlw	79
  4811     0DD2  0020               	movlb	0	; select bank0
  4812     0DD3  009C               	movwf	28	;volatile
  4813     0DD4                     l291:
  4814     0DD4  0008               	return
  4815     0DD5                     __end_of_TMR2_Initialize:
  4816                           
  4817                           	psect	text18
  4818     0D61                     __ptext18:	
  4819 ;; *************** function _TMR2_SetInterruptHandler *****************
  4820 ;; Defined at:
  4821 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4824 ;;		 -> decrementaT(1), TMR2_DefaultInterruptHandler(1), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4836 ;;      Params:         0       0       2       0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0
  4839 ;;      Totals:         0       0       2       0       0       0
  4840 ;;Total ram usage:        2 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 9
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_TMR2_Initialize
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851     0D61                     _TMR2_SetInterruptHandler:	
  4852                           ;psect for function _TMR2_SetInterruptHandler
  4853                           
  4854     0D61                     l2951:	
  4855                           ;incstack = 0
  4856                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  4857                           
  4858                           
  4859                           ;tmr2.c: 133: TMR2_InterruptHandler = InterruptHandler;
  4860     0D61  0021               	movlb	1	; select bank1
  4861     0D62  0821               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4862     0D63  0020               	movlb	0	; select bank0
  4863     0D64  00C9               	movwf	_TMR2_InterruptHandler+1
  4864     0D65  0021               	movlb	1	; select bank1
  4865     0D66  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler^(0+128),w
  4866     0D67  0020               	movlb	0	; select bank0
  4867     0D68  00C8               	movwf	_TMR2_InterruptHandler
  4868     0D69                     l313:
  4869     0D69  0008               	return
  4870     0D6A                     __end_of_TMR2_SetInterruptHandler:
  4871                           
  4872                           	psect	text19
  4873     0D80                     __ptext19:	
  4874 ;; *************** function _TMR1_Initialize *****************
  4875 ;; Defined at:
  4876 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;		None
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;		None
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, status,2
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4890 ;;      Params:         0       0       0       0       0       0
  4891 ;;      Locals:         0       0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0
  4893 ;;      Totals:         0       0       0       0       0       0
  4894 ;;Total ram usage:        0 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 9
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_SYSTEM_Initialize
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904     0D80                     _TMR1_Initialize:	
  4905                           ;psect for function _TMR1_Initialize
  4906                           
  4907     0D80                     l3061:	
  4908                           ;incstack = 0
  4909                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  4910                           
  4911                           
  4912                           ;tmr1.c: 68: T1GCON = 0x00;
  4913     0D80  0020               	movlb	0	; select bank0
  4914     0D81  0199               	clrf	25	;volatile
  4915                           
  4916                           ;tmr1.c: 71: TMR1H = 0x00;
  4917     0D82  0197               	clrf	23	;volatile
  4918                           
  4919                           ;tmr1.c: 74: TMR1L = 0x00;
  4920     0D83  0196               	clrf	22	;volatile
  4921     0D84                     l3063:
  4922                           
  4923                           ;tmr1.c: 77: PIR1bits.TMR1IF = 0;
  4924     0D84  1011               	bcf	17,0	;volatile
  4925     0D85                     l3065:
  4926                           
  4927                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4928     0D85  0817               	movf	23,w	;volatile
  4929     0D86  00CB               	movwf	_timer1ReloadVal+1	;volatile
  4930     0D87  0816               	movf	22,w	;volatile
  4931     0D88  00CA               	movwf	_timer1ReloadVal	;volatile
  4932     0D89                     l3067:
  4933                           
  4934                           ;tmr1.c: 83: T1CON = 0x01;
  4935     0D89  3001               	movlw	1
  4936     0D8A  0098               	movwf	24	;volatile
  4937     0D8B                     l227:
  4938     0D8B  0008               	return
  4939     0D8C                     __end_of_TMR1_Initialize:
  4940                           
  4941                           	psect	text20
  4942     0D74                     __ptext20:	
  4943 ;; *************** function _SPI1_Initialize *****************
  4944 ;; Defined at:
  4945 ;;		line 62 in file "mcc_generated_files/spi1.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4959 ;;      Params:         0       0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 9
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_SYSTEM_Initialize
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973     0D74                     _SPI1_Initialize:	
  4974                           ;psect for function _SPI1_Initialize
  4975                           
  4976     0D74                     l3019:	
  4977                           ;incstack = 0
  4978                           ; Regs used in _SPI1_Initialize: [wreg]
  4979                           
  4980                           
  4981                           ;spi1.c: 65: SSP1STAT = 0x40;
  4982     0D74  3040               	movlw	64
  4983     0D75  0024               	movlb	4	; select bank4
  4984     0D76  0094               	movwf	20	;volatile
  4985                           
  4986                           ;spi1.c: 66: SSP1CON1 = 0x01;
  4987     0D77  3001               	movlw	1
  4988     0D78  0095               	movwf	21	;volatile
  4989                           
  4990                           ;spi1.c: 67: SSP1ADD = 0x01;
  4991     0D79  3001               	movlw	1
  4992     0D7A  0092               	movwf	18	;volatile
  4993     0D7B                     l3021:
  4994                           
  4995                           ;spi1.c: 68: TRISBbits.TRISB4 = 0;
  4996     0D7B  0021               	movlb	1	; select bank1
  4997     0D7C  120D               	bcf	13,4	;volatile
  4998     0D7D                     l3023:
  4999                           
  5000                           ;spi1.c: 69: SSP1CON1bits.SSPEN = 0;
  5001     0D7D  0024               	movlb	4	; select bank4
  5002     0D7E  1295               	bcf	21,5	;volatile
  5003     0D7F                     l21:
  5004     0D7F  0008               	return
  5005     0D80                     __end_of_SPI1_Initialize:
  5006                           
  5007                           	psect	text21
  5008     0E16                     __ptext21:	
  5009 ;; *************** function _PIN_MANAGER_Initialize *****************
  5010 ;; Defined at:
  5011 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;		None
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, status,2
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5025 ;;      Params:         0       0       0       0       0       0
  5026 ;;      Locals:         0       0       0       0       0       0
  5027 ;;      Temps:          0       0       0       0       0       0
  5028 ;;      Totals:         0       0       0       0       0       0
  5029 ;;Total ram usage:        0 bytes
  5030 ;; Hardware stack levels used: 1
  5031 ;; Hardware stack levels required when called: 9
  5032 ;; This function calls:
  5033 ;;		Nothing
  5034 ;; This function is called by:
  5035 ;;		_SYSTEM_Initialize
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039     0E16                     _PIN_MANAGER_Initialize:	
  5040                           ;psect for function _PIN_MANAGER_Initialize
  5041                           
  5042     0E16                     l3025:	
  5043                           ;incstack = 0
  5044                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5045                           
  5046                           
  5047                           ;pin_manager.c: 60: LATA = 0x00;
  5048     0E16  0022               	movlb	2	; select bank2
  5049     0E17  018C               	clrf	12	;volatile
  5050                           
  5051                           ;pin_manager.c: 61: LATB = 0x00;
  5052     0E18  018D               	clrf	13	;volatile
  5053     0E19                     l3027:
  5054                           
  5055                           ;pin_manager.c: 66: TRISA = 0xA7;
  5056     0E19  30A7               	movlw	167
  5057     0E1A  0021               	movlb	1	; select bank1
  5058     0E1B  008C               	movwf	12	;volatile
  5059     0E1C                     l3029:
  5060                           
  5061                           ;pin_manager.c: 67: TRISB = 0xE7;
  5062     0E1C  30E7               	movlw	231
  5063     0E1D  008D               	movwf	13	;volatile
  5064     0E1E                     l3031:
  5065                           
  5066                           ;pin_manager.c: 72: ANSELB = 0xC8;
  5067     0E1E  30C8               	movlw	200
  5068     0E1F  0023               	movlb	3	; select bank3
  5069     0E20  008D               	movwf	13	;volatile
  5070     0E21                     l3033:
  5071                           
  5072                           ;pin_manager.c: 73: ANSELA = 0x1F;
  5073     0E21  301F               	movlw	31
  5074     0E22  008C               	movwf	12	;volatile
  5075                           
  5076                           ;pin_manager.c: 78: WPUB = 0x00;
  5077     0E23  0024               	movlb	4	; select bank4
  5078     0E24  018D               	clrf	13	;volatile
  5079                           
  5080                           ;pin_manager.c: 79: WPUA = 0x00;
  5081     0E25  018C               	clrf	12	;volatile
  5082     0E26                     l3035:
  5083                           
  5084                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 1;
  5085     0E26  0021               	movlb	1	; select bank1
  5086     0E27  1795               	bsf	21,7	;volatile
  5087     0E28                     l3037:
  5088                           
  5089                           ;pin_manager.c: 86: APFCON0 = 0xC0;
  5090     0E28  30C0               	movlw	192
  5091     0E29  0022               	movlb	2	; select bank2
  5092     0E2A  009D               	movwf	29	;volatile
  5093     0E2B                     l3039:
  5094                           
  5095                           ;pin_manager.c: 87: APFCON1 = 0x01;
  5096     0E2B  3001               	movlw	1
  5097     0E2C  009E               	movwf	30	;volatile
  5098     0E2D                     l117:
  5099     0E2D  0008               	return
  5100     0E2E                     __end_of_PIN_MANAGER_Initialize:
  5101                           
  5102                           	psect	text22
  5103     0D3F                     __ptext22:	
  5104 ;; *************** function _OSCILLATOR_Initialize *****************
  5105 ;; Defined at:
  5106 ;;		line 62 in file "mcc_generated_files/mcc.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;		None
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;		None
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      void 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5120 ;;      Params:         0       0       0       0       0       0
  5121 ;;      Locals:         0       0       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0       0
  5123 ;;      Totals:         0       0       0       0       0       0
  5124 ;;Total ram usage:        0 bytes
  5125 ;; Hardware stack levels used: 1
  5126 ;; Hardware stack levels required when called: 9
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_SYSTEM_Initialize
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134     0D3F                     _OSCILLATOR_Initialize:	
  5135                           ;psect for function _OSCILLATOR_Initialize
  5136                           
  5137     0D3F                     l3041:	
  5138                           ;incstack = 0
  5139                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5140                           
  5141                           
  5142                           ;mcc.c: 65: OSCCON = 0x78;
  5143     0D3F  3078               	movlw	120
  5144     0D40  0021               	movlb	1	; select bank1
  5145     0D41  0099               	movwf	25	;volatile
  5146     0D42                     l3043:
  5147                           
  5148                           ;mcc.c: 67: OSCTUNE = 0x00;
  5149     0D42  0198               	clrf	24	;volatile
  5150     0D43                     l3045:
  5151                           
  5152                           ;mcc.c: 69: BORCON = 0x00;
  5153     0D43  0022               	movlb	2	; select bank2
  5154     0D44  0196               	clrf	22	;volatile
  5155     0D45                     l89:
  5156     0D45  0008               	return
  5157     0D46                     __end_of_OSCILLATOR_Initialize:
  5158                           
  5159                           	psect	text23
  5160     0EDF                     __ptext23:	
  5161 ;; *************** function _EUSART_Initialize *****************
  5162 ;; Defined at:
  5163 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0, pclath, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5177 ;;      Params:         0       0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0       0
  5180 ;;      Totals:         0       0       0       0       0       0
  5181 ;;Total ram usage:        0 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; Hardware stack levels required when called: 10
  5184 ;; This function calls:
  5185 ;;		_EUSART_SetErrorHandler
  5186 ;;		_EUSART_SetFramingErrorHandler
  5187 ;;		_EUSART_SetOverrunErrorHandler
  5188 ;; This function is called by:
  5189 ;;		_SYSTEM_Initialize
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193     0EDF                     _EUSART_Initialize:	
  5194                           ;psect for function _EUSART_Initialize
  5195                           
  5196     0EDF                     l3069:	
  5197                           ;incstack = 0
  5198                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5199                           
  5200                           
  5201                           ;eusart.c: 71: BAUDCON = 0x08;
  5202     0EDF  3008               	movlw	8
  5203     0EE0  0023               	movlb	3	; select bank3
  5204     0EE1  009F               	movwf	31	;volatile
  5205                           
  5206                           ;eusart.c: 74: RCSTA = 0x90;
  5207     0EE2  3090               	movlw	144
  5208     0EE3  009D               	movwf	29	;volatile
  5209                           
  5210                           ;eusart.c: 77: TXSTA = 0x24;
  5211     0EE4  3024               	movlw	36
  5212     0EE5  009E               	movwf	30	;volatile
  5213                           
  5214                           ;eusart.c: 80: SPBRGL = 0x22;
  5215     0EE6  3022               	movlw	34
  5216     0EE7  009B               	movwf	27	;volatile
  5217     0EE8                     l3071:
  5218                           
  5219                           ;eusart.c: 83: SPBRGH = 0x00;
  5220     0EE8  019C               	clrf	28	;volatile
  5221     0EE9                     l3073:
  5222                           
  5223                           ;eusart.c: 86: EUSART_SetFramingErrorHandler(EUSART_DefaultFramingErrorHandler);
  5224     0EE9  3000               	movlw	0
  5225     0EEA  0021               	movlb	1	; select bank1
  5226     0EEB  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  5227     0EEC  3000               	movlw	0
  5228     0EED  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  5229     0EEE  318D  254F  318E   	fcall	_EUSART_SetFramingErrorHandler
  5230     0EF1                     l3075:
  5231                           
  5232                           ;eusart.c: 87: EUSART_SetOverrunErrorHandler(EUSART_DefaultOverrunErrorHandler);
  5233     0EF1  3000               	movlw	0
  5234     0EF2  0021               	movlb	1	; select bank1
  5235     0EF3  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  5236     0EF4  3000               	movlw	0
  5237     0EF5  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  5238     0EF6  318D  2558  318E   	fcall	_EUSART_SetOverrunErrorHandler
  5239     0EF9                     l3077:
  5240                           
  5241                           ;eusart.c: 88: EUSART_SetErrorHandler(EUSART_DefaultErrorHandler);
  5242     0EF9  3000               	movlw	0
  5243     0EFA  0021               	movlb	1	; select bank1
  5244     0EFB  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  5245     0EFC  3000               	movlw	0
  5246     0EFD  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  5247     0EFE  318D  2546  318E   	fcall	_EUSART_SetErrorHandler
  5248     0F01                     l3079:
  5249                           
  5250                           ;eusart.c: 90: eusartRxLastError.status = 0;
  5251     0F01  0020               	movlb	0	; select bank0
  5252     0F02  01D5               	clrf	_eusartRxLastError	;volatile
  5253     0F03                     l163:
  5254     0F03  0008               	return
  5255     0F04                     __end_of_EUSART_Initialize:
  5256                           
  5257                           	psect	text24
  5258     0D58                     __ptext24:	
  5259 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5260 ;; Defined at:
  5261 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5264 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5276 ;;      Params:         0       0       2       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0
  5279 ;;      Totals:         0       0       2       0       0       0
  5280 ;;Total ram usage:        2 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 9
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_EUSART_Initialize
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290     0D58                     _EUSART_SetOverrunErrorHandler:	
  5291                           ;psect for function _EUSART_SetOverrunErrorHandler
  5292                           
  5293     0D58                     l2943:	
  5294                           ;incstack = 0
  5295                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5296                           
  5297                           
  5298                           ;eusart.c: 162: EUSART_OverrunErrorHandler = interruptHandler;
  5299     0D58  0021               	movlb	1	; select bank1
  5300     0D59  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5301     0D5A  0020               	movlb	0	; select bank0
  5302     0D5B  00CF               	movwf	_EUSART_OverrunErrorHandler+1
  5303     0D5C  0021               	movlb	1	; select bank1
  5304     0D5D  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5305     0D5E  0020               	movlb	0	; select bank0
  5306     0D5F  00CE               	movwf	_EUSART_OverrunErrorHandler
  5307     0D60                     l205:
  5308     0D60  0008               	return
  5309     0D61                     __end_of_EUSART_SetOverrunErrorHandler:
  5310                           
  5311                           	psect	text25
  5312     0D4F                     __ptext25:	
  5313 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5314 ;; Defined at:
  5315 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5318 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5330 ;;      Params:         0       0       2       0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0
  5333 ;;      Totals:         0       0       2       0       0       0
  5334 ;;Total ram usage:        2 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 9
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_EUSART_Initialize
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344     0D4F                     _EUSART_SetFramingErrorHandler:	
  5345                           ;psect for function _EUSART_SetFramingErrorHandler
  5346                           
  5347     0D4F                     l2941:	
  5348                           ;incstack = 0
  5349                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5350                           
  5351                           
  5352                           ;eusart.c: 158: EUSART_FramingErrorHandler = interruptHandler;
  5353     0D4F  0021               	movlb	1	; select bank1
  5354     0D50  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5355     0D51  0020               	movlb	0	; select bank0
  5356     0D52  00D1               	movwf	_EUSART_FramingErrorHandler+1
  5357     0D53  0021               	movlb	1	; select bank1
  5358     0D54  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5359     0D55  0020               	movlb	0	; select bank0
  5360     0D56  00D0               	movwf	_EUSART_FramingErrorHandler
  5361     0D57                     l202:
  5362     0D57  0008               	return
  5363     0D58                     __end_of_EUSART_SetFramingErrorHandler:
  5364                           
  5365                           	psect	text26
  5366     0D46                     __ptext26:	
  5367 ;; *************** function _EUSART_SetErrorHandler *****************
  5368 ;; Defined at:
  5369 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5372 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5384 ;;      Params:         0       0       2       0       0       0
  5385 ;;      Locals:         0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0
  5387 ;;      Totals:         0       0       2       0       0       0
  5388 ;;Total ram usage:        2 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; Hardware stack levels required when called: 9
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_EUSART_Initialize
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398     0D46                     _EUSART_SetErrorHandler:	
  5399                           ;psect for function _EUSART_SetErrorHandler
  5400                           
  5401     0D46                     l2945:	
  5402                           ;incstack = 0
  5403                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5404                           
  5405                           
  5406                           ;eusart.c: 166: EUSART_ErrorHandler = interruptHandler;
  5407     0D46  0021               	movlb	1	; select bank1
  5408     0D47  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5409     0D48  0020               	movlb	0	; select bank0
  5410     0D49  00CD               	movwf	_EUSART_ErrorHandler+1
  5411     0D4A  0021               	movlb	1	; select bank1
  5412     0D4B  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5413     0D4C  0020               	movlb	0	; select bank0
  5414     0D4D  00CC               	movwf	_EUSART_ErrorHandler
  5415     0D4E                     l208:
  5416     0D4E  0008               	return
  5417     0D4F                     __end_of_EUSART_SetErrorHandler:
  5418                           
  5419                           	psect	text27
  5420     065E                     __ptext27:	
  5421 ;; *************** function _SPI1_Open *****************
  5422 ;; Defined at:
  5423 ;;		line 72 in file "mcc_generated_files/spi1.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  spi1UniqueCo    1    wreg     enum E92
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  spi1UniqueCo    1    3[BANK1 ] enum E92
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      unsigned char 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5437 ;;      Params:         0       0       0       0       0       0
  5438 ;;      Locals:         0       0       1       0       0       0
  5439 ;;      Temps:          0       0       3       0       0       0
  5440 ;;      Totals:         0       0       4       0       0       0
  5441 ;;Total ram usage:        4 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 9
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_main
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451     065E                     _SPI1_Open:	
  5452                           ;psect for function _SPI1_Open
  5453                           
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in _SPI1_Open: [wreg-fsr0h+status,2+status,0+pclath]
  5457                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  5458     065E  0021               	movlb	1	; select bank1
  5459     065F  00A3               	movwf	SPI1_Open@spi1UniqueConfiguration^(0+128)
  5460     0660                     l3245:
  5461                           
  5462                           ;spi1.c: 74: if(!SSP1CON1bits.SSPEN)
  5463     0660  0024               	movlb	4	; select bank4
  5464     0661  1A95               	btfsc	21,5	;volatile
  5465     0662  2E64               	goto	u3531
  5466     0663  2E65               	goto	u3530
  5467     0664                     u3531:
  5468     0664  2EB5               	goto	l25
  5469     0665                     u3530:
  5470     0665                     l3247:
  5471                           
  5472                           ;spi1.c: 75: {;spi1.c: 76: SSP1STAT = spi1_configuration[spi1UniqueConfiguration].stat;
  5473     0665  0021               	movlb	1	; select bank1
  5474     0666  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  5475     0667  00A0               	movwf	??_SPI1_Open^(0+128)
  5476     0668  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  5477     0669  35A0               	lslf	??_SPI1_Open^(0+128),f
  5478     066A  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5479     066B  35A0               	lslf	??_SPI1_Open^(0+128),f
  5480     066C  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5481     066D  3008               	movlw	low (_spi1_configuration+1)
  5482     066E  0720               	addwf	??_SPI1_Open^(0+128),w
  5483     066F  0084               	movwf	4
  5484     0670  3008               	movlw	high (_spi1_configuration+1)
  5485     0671  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  5486     0672  3880               	iorlw	128
  5487     0673  0085               	movwf	5
  5488     0674  0800               	movf	0,w	;code access
  5489     0675  0024               	movlb	4	; select bank4
  5490     0676  0094               	movwf	20	;volatile
  5491                           
  5492                           ;spi1.c: 77: SSP1CON1 = spi1_configuration[spi1UniqueConfiguration].con1;
  5493     0677  0021               	movlb	1	; select bank1
  5494     0678  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  5495     0679  00A0               	movwf	??_SPI1_Open^(0+128)
  5496     067A  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  5497     067B  35A0               	lslf	??_SPI1_Open^(0+128),f
  5498     067C  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5499     067D  35A0               	lslf	??_SPI1_Open^(0+128),f
  5500     067E  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5501     067F  3007               	movlw	low _spi1_configuration
  5502     0680  0720               	addwf	??_SPI1_Open^(0+128),w
  5503     0681  0084               	movwf	4
  5504     0682  3008               	movlw	high _spi1_configuration
  5505     0683  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  5506     0684  3880               	iorlw	128
  5507     0685  0085               	movwf	5
  5508     0686  0800               	movf	0,w	;code access
  5509     0687  0024               	movlb	4	; select bank4
  5510     0688  0095               	movwf	21	;volatile
  5511     0689                     l3249:
  5512                           
  5513                           ;spi1.c: 78: SSP1CON2 = 0x00;
  5514     0689  0196               	clrf	22	;volatile
  5515     068A                     l3251:
  5516                           
  5517                           ;spi1.c: 79: SSP1ADD = spi1_configuration[spi1UniqueConfiguration].add;
  5518     068A  0021               	movlb	1	; select bank1
  5519     068B  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  5520     068C  00A0               	movwf	??_SPI1_Open^(0+128)
  5521     068D  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  5522     068E  35A0               	lslf	??_SPI1_Open^(0+128),f
  5523     068F  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5524     0690  35A0               	lslf	??_SPI1_Open^(0+128),f
  5525     0691  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5526     0692  3009               	movlw	low (_spi1_configuration+2)
  5527     0693  0720               	addwf	??_SPI1_Open^(0+128),w
  5528     0694  0084               	movwf	4
  5529     0695  3008               	movlw	high (_spi1_configuration+2)
  5530     0696  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  5531     0697  3880               	iorlw	128
  5532     0698  0085               	movwf	5
  5533     0699  0800               	movf	0,w	;code access
  5534     069A  0024               	movlb	4	; select bank4
  5535     069B  0092               	movwf	18	;volatile
  5536     069C                     l3253:
  5537                           
  5538                           ;spi1.c: 80: TRISBbits.TRISB4 = spi1_configuration[spi1UniqueConfiguration].operation;
  5539     069C  0021               	movlb	1	; select bank1
  5540     069D  0823               	movf	SPI1_Open@spi1UniqueConfiguration^(0+128),w
  5541     069E  00A0               	movwf	??_SPI1_Open^(0+128)
  5542     069F  01A1               	clrf	(??_SPI1_Open^(0+128)+1)
  5543     06A0  35A0               	lslf	??_SPI1_Open^(0+128),f
  5544     06A1  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5545     06A2  35A0               	lslf	??_SPI1_Open^(0+128),f
  5546     06A3  0DA1               	rlf	(??_SPI1_Open^(0+128)+1),f
  5547     06A4  300A               	movlw	low (_spi1_configuration+3)
  5548     06A5  0720               	addwf	??_SPI1_Open^(0+128),w
  5549     06A6  0084               	movwf	4
  5550     06A7  3008               	movlw	high (_spi1_configuration+3)
  5551     06A8  3D21               	addwfc	(??_SPI1_Open+1)^(0+128),w
  5552     06A9  3880               	iorlw	128
  5553     06AA  0085               	movwf	5
  5554     06AB  0800               	movf	0,w	;code access
  5555     06AC  00A2               	movwf	(??_SPI1_Open+2)^(0+128)
  5556     06AD  0EA2               	swapf	(??_SPI1_Open+2)^(0+128),f
  5557     06AE  080D               	movf	13,w	;volatile
  5558     06AF  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  5559     06B0  39EF               	andlw	-17
  5560     06B1  0622               	xorwf	(??_SPI1_Open+2)^(0+128),w
  5561     06B2  008D               	movwf	13	;volatile
  5562     06B3                     l3255:
  5563                           
  5564                           ;spi1.c: 81: SSP1CON1bits.SSPEN = 1;
  5565     06B3  0024               	movlb	4	; select bank4
  5566     06B4  1695               	bsf	21,5	;volatile
  5567     06B5                     l25:
  5568     06B5  0008               	return
  5569     06B6                     __end_of_SPI1_Open:
  5570                           
  5571                           	psect	text28
  5572     0D34                     __ptext28:	
  5573 ;; *************** function _EUSART_is_rx_ready *****************
  5574 ;; Defined at:
  5575 ;;		line 99 in file "mcc_generated_files/eusart.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      unsigned char 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5589 ;;      Params:         0       0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0
  5592 ;;      Totals:         0       0       0       0       0       0
  5593 ;;Total ram usage:        0 bytes
  5594 ;; Hardware stack levels used: 1
  5595 ;; Hardware stack levels required when called: 9
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_main
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603     0D34                     _EUSART_is_rx_ready:	
  5604                           ;psect for function _EUSART_is_rx_ready
  5605                           
  5606     0D34                     l3261:	
  5607                           ;incstack = 0
  5608                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  5609                           
  5610                           
  5611                           ;eusart.c: 101: return (bool)(PIR1bits.RCIF);
  5612     0D34  0020               	movlb	0	; select bank0
  5613     0D35  0E11               	swapf	17,w	;volatile
  5614     0D36  0C89               	rrf	9,f
  5615     0D37  3901               	andlw	1
  5616     0D38                     l171:
  5617     0D38  0008               	return
  5618     0D39                     __end_of_EUSART_is_rx_ready:
  5619                           
  5620                           	psect	text29
  5621     0DB4                     __ptext29:	
  5622 ;; *************** function _EUSART_Read *****************
  5623 ;; Defined at:
  5624 ;;		line 113 in file "mcc_generated_files/eusart.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      unsigned char 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5638 ;;      Params:         0       0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0
  5640 ;;      Temps:          0       0       0       0       0       0
  5641 ;;      Totals:         0       0       0       0       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 9
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_main
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652     0DB4                     _EUSART_Read:	
  5653                           ;psect for function _EUSART_Read
  5654                           
  5655     0DB4                     l3265:	
  5656                           ;incstack = 0
  5657                           ; Regs used in _EUSART_Read: [wreg+status,2]
  5658                           
  5659     0DB4                     l180:	
  5660                           ;eusart.c: 116: {
  5661                           
  5662     0DB4  0020               	movlb	0	; select bank0
  5663     0DB5  1E91               	btfss	17,5	;volatile
  5664     0DB6  2DB8               	goto	u3541
  5665     0DB7  2DB9               	goto	u3540
  5666     0DB8                     u3541:
  5667     0DB8  2DB4               	goto	l180
  5668     0DB9                     u3540:
  5669     0DB9                     l3267:
  5670                           
  5671                           ;eusart.c: 117: };eusart.c: 119: eusartRxLastError.status = 0;
  5672     0DB9  01D5               	clrf	_eusartRxLastError	;volatile
  5673     0DBA                     l3269:
  5674                           
  5675                           ;eusart.c: 121: if(1 == RCSTAbits.OERR)
  5676     0DBA  0023               	movlb	3	; select bank3
  5677     0DBB  1C9D               	btfss	29,1	;volatile
  5678     0DBC  2DBE               	goto	u3551
  5679     0DBD  2DBF               	goto	u3550
  5680     0DBE                     u3551:
  5681     0DBE  2DC1               	goto	l3273
  5682     0DBF                     u3550:
  5683     0DBF                     l3271:
  5684                           
  5685                           ;eusart.c: 122: {;eusart.c: 125: RCSTAbits.CREN = 0;
  5686     0DBF  121D               	bcf	29,4	;volatile
  5687                           
  5688                           ;eusart.c: 126: RCSTAbits.CREN = 1;
  5689     0DC0  161D               	bsf	29,4	;volatile
  5690     0DC1                     l3273:
  5691                           
  5692                           ;eusart.c: 127: };eusart.c: 129: return RCREG;
  5693     0DC1  0819               	movf	25,w	;volatile
  5694     0DC2                     l184:
  5695     0DC2  0008               	return
  5696     0DC3                     __end_of_EUSART_Read:
  5697                           
  5698                           	psect	intentry
  5699     0004                     __pintentry:	
  5700 ;; *************** function _INTERRUPT_InterruptManager *****************
  5701 ;; Defined at:
  5702 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;		None
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;		None
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5716 ;;      Params:         0       0       0       0       0       0
  5717 ;;      Locals:         0       0       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0
  5719 ;;      Totals:         0       0       0       0       0       0
  5720 ;;Total ram usage:        0 bytes
  5721 ;; Hardware stack levels used: 1
  5722 ;; Hardware stack levels required when called: 8
  5723 ;; This function calls:
  5724 ;;		_TMR2_ISR
  5725 ;; This function is called by:
  5726 ;;		Interrupt level 1
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730     0004                     _INTERRUPT_InterruptManager:
  5731                           
  5732                           ;incstack = 0
  5733     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5734                           
  5735                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5736     0005  3180               	pagesel	$
  5737     0006                     i1l3351:
  5738                           
  5739                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  5740     0006  1F0B               	btfss	11,6	;volatile
  5741     0007  2809               	goto	u364_21
  5742     0008  280A               	goto	u364_20
  5743     0009                     u364_21:
  5744     0009  2817               	goto	i1l270
  5745     000A                     u364_20:
  5746     000A                     i1l3353:
  5747                           
  5748                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE1bits.TMR2IE == 1 && PIR1bits
      +                          .TMR2IF == 1)
  5749     000A  0021               	movlb	1	; select bank1
  5750     000B  1C91               	btfss	17,1	;volatile
  5751     000C  280E               	goto	u365_21
  5752     000D  280F               	goto	u365_20
  5753     000E                     u365_21:
  5754     000E  2817               	goto	i1l270
  5755     000F                     u365_20:
  5756     000F                     i1l3355:
  5757     000F  0020               	movlb	0	; select bank0
  5758     0010  1C91               	btfss	17,1	;volatile
  5759     0011  2813               	goto	u366_21
  5760     0012  2814               	goto	u366_20
  5761     0013                     u366_21:
  5762     0013  2817               	goto	i1l270
  5763     0014                     u366_20:
  5764     0014                     i1l3357:
  5765                           
  5766                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR2_ISR();
  5767     0014  318D  2598  3180   	fcall	_TMR2_ISR
  5768     0017                     i1l270:	
  5769                           ;interrupt_manager.c: 60: }
  5770                           
  5771     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5772     0018  0009               	retfie
  5773     0019                     __end_of_INTERRUPT_InterruptManager:
  5774                           
  5775                           	psect	text31
  5776     0D98                     __ptext31:	
  5777 ;; *************** function _TMR2_ISR *****************
  5778 ;; Defined at:
  5779 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5793 ;;      Params:         0       0       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0
  5796 ;;      Totals:         0       0       0       0       0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; Hardware stack levels required when called: 7
  5800 ;; This function calls:
  5801 ;;		NULL
  5802 ;;		_TMR2_DefaultInterruptHandler
  5803 ;;		_decrementaT
  5804 ;; This function is called by:
  5805 ;;		_INTERRUPT_InterruptManager
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809     0D98                     _TMR2_ISR:	
  5810                           ;psect for function _TMR2_ISR
  5811                           
  5812     0D98                     i1l3277:	
  5813                           ;incstack = 0
  5814                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5815                           
  5816                           
  5817                           ;tmr2.c: 123: PIR1bits.TMR2IF = 0;
  5818     0D98  0020               	movlb	0	; select bank0
  5819     0D99  1091               	bcf	17,1	;volatile
  5820     0D9A                     i1l3279:
  5821                           
  5822                           ;tmr2.c: 125: if(TMR2_InterruptHandler)
  5823     0D9A  0848               	movf	_TMR2_InterruptHandler,w
  5824     0D9B  0449               	iorwf	_TMR2_InterruptHandler+1,w
  5825     0D9C  1903               	btfsc	3,2
  5826     0D9D  2D9F               	goto	u356_21
  5827     0D9E  2DA0               	goto	u356_20
  5828     0D9F                     u356_21:
  5829     0D9F  2DA5               	goto	i1l310
  5830     0DA0                     u356_20:
  5831     0DA0                     i1l3281:
  5832                           
  5833                           ;tmr2.c: 126: {;tmr2.c: 127: TMR2_InterruptHandler();
  5834     0DA0  0849               	movf	_TMR2_InterruptHandler+1,w
  5835     0DA1  008A               	movwf	10
  5836     0DA2  0848               	movf	_TMR2_InterruptHandler,w
  5837     0DA3  000A               	callw
  5838     0DA4  318D               	pagesel	$
  5839     0DA5                     i1l310:
  5840     0DA5  0008               	return
  5841     0DA6                     __end_of_TMR2_ISR:
  5842                           
  5843                           	psect	text32
  5844     0003                     __ptext32:	
  5845 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  5846 ;; Defined at:
  5847 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		None
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5861 ;;      Params:         0       0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0
  5864 ;;      Totals:         0       0       0       0       0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used: 1
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_TMR2_Initialize
  5871 ;;		_TMR2_ISR
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875     0003                     _TMR2_DefaultInterruptHandler:	
  5876                           ;psect for function _TMR2_DefaultInterruptHandler
  5877                           
  5878     0003                     i1l316:	
  5879                           ;incstack = 0
  5880                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  5881                           
  5882     0003  0008               	return
  5883     0004                     __end_of_TMR2_DefaultInterruptHandler:
  5884                           
  5885                           	psect	text33
  5886     0E48                     __ptext33:	
  5887 ;; *************** function _decrementaT *****************
  5888 ;; Defined at:
  5889 ;;		line 225 in file "main.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5903 ;;      Params:         0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0
  5905 ;;      Temps:          0       2       0       0       0       0
  5906 ;;      Totals:         0       2       0       0       0       0
  5907 ;;Total ram usage:        2 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 6
  5910 ;; This function calls:
  5911 ;;		_executaTudo
  5912 ;; This function is called by:
  5913 ;;		_main
  5914 ;;		_TMR2_ISR
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918     0E48                     _decrementaT:	
  5919                           ;psect for function _decrementaT
  5920                           
  5921     0E48                     i1l3113:	
  5922                           ;incstack = 0
  5923                           ; Regs used in _decrementaT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5924                           
  5925                           
  5926                           ;main.c: 226: static volatile unsigned int CountCallBack = 0;;main.c: 229: PIR1bits.TMR2
      +                          IF = 0;
  5927     0E48  0020               	movlb	0	; select bank0
  5928     0E49  1091               	bcf	17,1	;volatile
  5929     0E4A                     i1l3115:
  5930                           
  5931                           ;main.c: 232: if (++CountCallBack >= T)
  5932     0E4A  085D               	movf	_T,w
  5933     0E4B  00BD               	movwf	??_decrementaT
  5934     0E4C  01BE               	clrf	??_decrementaT+1
  5935     0E4D  3001               	movlw	1
  5936     0E4E  07C2               	addwf	decrementaT@CountCallBack,f	;volatile
  5937     0E4F  3000               	movlw	0
  5938     0E50  3DC3               	addwfc	decrementaT@CountCallBack+1,f	;volatile
  5939     0E51  083E               	movf	??_decrementaT+1,w
  5940     0E52  0243               	subwf	decrementaT@CountCallBack+1,w	;volatile
  5941     0E53  1D03               	skipz
  5942     0E54  2E57               	goto	u317_25
  5943     0E55  083D               	movf	??_decrementaT,w
  5944     0E56  0242               	subwf	decrementaT@CountCallBack,w	;volatile
  5945     0E57                     u317_25:
  5946     0E57  1C03               	skipc
  5947     0E58  2E5A               	goto	u317_21
  5948     0E59  2E5B               	goto	u317_20
  5949     0E5A                     u317_21:
  5950     0E5A  2E61               	goto	i1l476
  5951     0E5B                     u317_20:
  5952     0E5B                     i1l3117:
  5953                           
  5954                           ;main.c: 233: {;main.c: 235: executaTudo();
  5955     0E5B  318F  2753  318E   	fcall	_executaTudo
  5956     0E5E                     i1l3119:
  5957                           
  5958                           ;main.c: 238: CountCallBack = 0;
  5959     0E5E  0020               	movlb	0	; select bank0
  5960     0E5F  01C2               	clrf	decrementaT@CountCallBack	;volatile
  5961     0E60  01C3               	clrf	decrementaT@CountCallBack+1	;volatile
  5962     0E61                     i1l476:
  5963     0E61  0008               	return
  5964     0E62                     __end_of_decrementaT:
  5965                           
  5966                           	psect	text34
  5967     0F53                     __ptext34:	
  5968 ;; *************** function _executaTudo *****************
  5969 ;; Defined at:
  5970 ;;		line 190 in file "main.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5984 ;;      Params:         0       0       0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0
  5987 ;;      Totals:         0       0       0       0       0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 5
  5991 ;; This function calls:
  5992 ;;		_positionCalc
  5993 ;;		_positionUpdate
  5994 ;;		i1_matrixClear
  5995 ;; This function is called by:
  5996 ;;		_decrementaT
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000     0F53                     _executaTudo:	
  6001                           ;psect for function _executaTudo
  6002                           
  6003     0F53                     i1l2977:	
  6004                           ;incstack = 0
  6005                           ; Regs used in _executaTudo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6006                           
  6007                           
  6008                           ;main.c: 191: if (y >= 7 | y <= 0 | x == 16 | x == 1){
  6009     0F53  3007               	movlw	7
  6010     0F54  0020               	movlb	0	; select bank0
  6011     0F55  025B               	subwf	_y,w
  6012     0F56  1803               	skipnc
  6013     0F57  2F59               	goto	u300_21
  6014     0F58  2F5A               	goto	u300_20
  6015     0F59                     u300_21:
  6016     0F59  2F6A               	goto	i1l459
  6017     0F5A                     u300_20:
  6018     0F5A                     i1l2979:
  6019     0F5A  085B               	movf	_y,w
  6020     0F5B  1903               	btfsc	3,2
  6021     0F5C  2F5E               	goto	u301_21
  6022     0F5D  2F5F               	goto	u301_20
  6023     0F5E                     u301_21:
  6024     0F5E  2F6A               	goto	i1l459
  6025     0F5F                     u301_20:
  6026     0F5F                     i1l2981:
  6027     0F5F  3010               	movlw	16
  6028     0F60  065C               	xorwf	_x,w
  6029     0F61  1903               	btfsc	3,2
  6030     0F62  2F64               	goto	u302_21
  6031     0F63  2F65               	goto	u302_20
  6032     0F64                     u302_21:
  6033     0F64  2F6A               	goto	i1l459
  6034     0F65                     u302_20:
  6035     0F65                     i1l2983:
  6036     0F65  035C               	decf	_x,w
  6037     0F66  1D03               	btfss	3,2
  6038     0F67  2F69               	goto	u303_21
  6039     0F68  2F6A               	goto	u303_20
  6040     0F69                     u303_21:
  6041     0F69  2F6D               	goto	i1l462
  6042     0F6A                     u303_20:
  6043     0F6A                     i1l459:	
  6044                           ;main.c: 192: do { LATAbits.LATA3 = 1; } while(0);
  6045                           
  6046     0F6A  0022               	movlb	2	; select bank2
  6047     0F6B  158C               	bsf	12,3	;volatile
  6048     0F6C  2F6F               	goto	i1l2985
  6049     0F6D                     i1l462:	
  6050                           ;main.c: 194: else {;main.c: 195: do { LATAbits.LATA3 = 0; } while(0);
  6051                           
  6052     0F6D  0022               	movlb	2	; select bank2
  6053     0F6E  118C               	bcf	12,3	;volatile
  6054     0F6F                     i1l2985:
  6055                           
  6056                           ;main.c: 196: };main.c: 197: matrixClear();
  6057     0F6F  318E  262E  318F   	fcall	i1_matrixClear
  6058                           
  6059                           ;main.c: 198: positionUpdate(x,y);
  6060     0F72  0020               	movlb	0	; select bank0
  6061     0F73  085B               	movf	_y,w
  6062     0F74  00F9               	movwf	positionUpdate@cordY
  6063     0F75  085C               	movf	_x,w
  6064     0F76  3186  26FE  318F   	fcall	_positionUpdate
  6065                           
  6066                           ;main.c: 199: positionCalc();
  6067     0F79  3183  230D  318F   	fcall	_positionCalc
  6068     0F7C                     i1l464:
  6069     0F7C  0008               	return
  6070     0F7D                     __end_of_executaTudo:
  6071                           
  6072                           	psect	text35
  6073     0E2E                     __ptext35:	
  6074 ;; *************** function i1_matrixClear *****************
  6075 ;; Defined at:
  6076 ;;		line 52 in file "main.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;		None
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  data            4    9[COMMON] unsigned char [4]
  6081 ;;  i               1   13[COMMON] unsigned char 
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      void 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6091 ;;      Params:         0       0       0       0       0       0
  6092 ;;      Locals:         5       0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0
  6094 ;;      Totals:         5       0       0       0       0       0
  6095 ;;Total ram usage:        5 bytes
  6096 ;; Hardware stack levels used: 1
  6097 ;; Hardware stack levels required when called: 2
  6098 ;; This function calls:
  6099 ;;		i1_txSpi
  6100 ;; This function is called by:
  6101 ;;		_executaTudo
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105     0E2E                     i1_matrixClear:	
  6106                           ;psect for function i1_matrixClear
  6107                           
  6108     0E2E                     i1l2923:	
  6109                           ;incstack = 0
  6110                           ; Regs used in i1_matrixClear: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6111                           
  6112                           
  6113                           ;main.c: 53: uint8_t data[4];;main.c: 55: for(uint8_t i=8;i>0;i--){
  6114     0E2E  3008               	movlw	8
  6115     0E2F  00FD               	movwf	i1matrixClear@i
  6116     0E30                     i1l2929:
  6117                           
  6118                           ;main.c: 59: data[0] = i;
  6119     0E30  087D               	movf	i1matrixClear@i,w
  6120     0E31  00F9               	movwf	i1matrixClear@data
  6121     0E32                     i1l2931:
  6122                           
  6123                           ;main.c: 60: data[1] = 0;
  6124     0E32  01FA               	clrf	i1matrixClear@data+1
  6125     0E33                     i1l2933:
  6126                           
  6127                           ;main.c: 61: data[2] = i;
  6128     0E33  087D               	movf	i1matrixClear@i,w
  6129     0E34  00FB               	movwf	i1matrixClear@data+2
  6130                           
  6131                           ;main.c: 62: data[3] = 0;
  6132     0E35  01FC               	clrf	i1matrixClear@data+3
  6133     0E36                     i1l2935:
  6134                           
  6135                           ;main.c: 63: txSpi(spiCS1, data, 4);
  6136     0E36  3079               	movlw	(low (i1matrixClear@data| 0))& (0+255)
  6137     0E37  00F5               	movwf	i1txSpi@data
  6138     0E38  3004               	movlw	4
  6139     0E39  00F6               	movwf	i1txSpi@dataSize
  6140     0E3A  3000               	movlw	0
  6141     0E3B  00F7               	movwf	i1txSpi@dataSize+1
  6142     0E3C  3000               	movlw	0
  6143     0E3D  318F  272B  318E   	fcall	i1_txSpi
  6144     0E40                     i1l2937:
  6145     0E40  3001               	movlw	1
  6146     0E41  02FD               	subwf	i1matrixClear@i,f
  6147     0E42                     i1l2939:
  6148     0E42  087D               	movf	i1matrixClear@i,w
  6149     0E43  1D03               	btfss	3,2
  6150     0E44  2E46               	goto	u298_21
  6151     0E45  2E47               	goto	u298_20
  6152     0E46                     u298_21:
  6153     0E46  2E30               	goto	i1l2929
  6154     0E47                     u298_20:
  6155     0E47                     i1l383:
  6156     0E47  0008               	return
  6157     0E48                     __end_ofi1_matrixClear:
  6158                           
  6159                           	psect	text36
  6160     06FE                     __ptext36:	
  6161 ;; *************** function _positionUpdate *****************
  6162 ;; Defined at:
  6163 ;;		line 110 in file "main.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  cordX           1    wreg     unsigned char 
  6166 ;;  cordY           1    9[COMMON] unsigned char 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  cordX           1    4[BANK0 ] unsigned char 
  6169 ;;  data            4    0[BANK0 ] unsigned char [4]
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6179 ;;      Params:         1       0       0       0       0       0
  6180 ;;      Locals:         0       5       0       0       0       0
  6181 ;;      Temps:          3       0       0       0       0       0
  6182 ;;      Totals:         4       5       0       0       0       0
  6183 ;;Total ram usage:        9 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 2
  6186 ;; This function calls:
  6187 ;;		i1_txSpi
  6188 ;; This function is called by:
  6189 ;;		_executaTudo
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193     06FE                     _positionUpdate:	
  6194                           ;psect for function _positionUpdate
  6195                           
  6196                           
  6197                           ;incstack = 0
  6198                           ; Regs used in _positionUpdate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6199                           ;positionUpdate@cordX stored from wreg
  6200     06FE  0020               	movlb	0	; select bank0
  6201     06FF  00A4               	movwf	positionUpdate@cordX
  6202     0700                     i1l2899:
  6203                           
  6204                           ;main.c: 111: uint8_t data[4];;main.c: 112: if (cordX <= 8){
  6205     0700  3009               	movlw	9
  6206     0701  0224               	subwf	positionUpdate@cordX,w
  6207     0702  1803               	skipnc
  6208     0703  2F05               	goto	u294_21
  6209     0704  2F06               	goto	u294_20
  6210     0705                     u294_21:
  6211     0705  2F1B               	goto	i1l2909
  6212     0706                     u294_20:
  6213     0706                     i1l2901:
  6214                           
  6215                           ;main.c: 113: data[0] = 1;
  6216     0706  01A0               	clrf	positionUpdate@data
  6217     0707  0AA0               	incf	positionUpdate@data,f
  6218     0708                     i1l2903:
  6219                           
  6220                           ;main.c: 114: data[1] = 0;
  6221     0708  01A1               	clrf	positionUpdate@data+1
  6222     0709                     i1l2905:
  6223                           
  6224                           ;main.c: 115: data[2] = cordX;
  6225     0709  0824               	movf	positionUpdate@cordX,w
  6226     070A  00A2               	movwf	positionUpdate@data+2
  6227     070B                     i1l2907:
  6228                           
  6229                           ;main.c: 116: data[3] = 0b10000000 >> cordY;
  6230     070B  0A79               	incf	positionUpdate@cordY,w
  6231     070C  00FA               	movwf	??_positionUpdate
  6232     070D  3080               	movlw	128
  6233     070E  00FB               	movwf	??_positionUpdate+1
  6234     070F  3000               	movlw	0
  6235     0710  00FC               	movwf	??_positionUpdate+2
  6236     0711  2F15               	goto	u295_24
  6237     0712                     u295_25:
  6238     0712  0D7C               	rlf	??_positionUpdate+2,w
  6239     0713  0CFC               	rrf	??_positionUpdate+2,f
  6240     0714  0CFB               	rrf	??_positionUpdate+1,f
  6241     0715                     u295_24:
  6242     0715  0BFA               	decfsz	??_positionUpdate,f
  6243     0716  2F12               	goto	u295_25
  6244     0717  087B               	movf	??_positionUpdate+1,w
  6245     0718  0020               	movlb	0	; select bank0
  6246     0719  00A3               	movwf	positionUpdate@data+3
  6247                           
  6248                           ;main.c: 117: }
  6249     071A  2F38               	goto	i1l2921
  6250     071B                     i1l2909:
  6251                           
  6252                           ;main.c: 118: else if(cordX > 8){
  6253     071B  3009               	movlw	9
  6254     071C  0224               	subwf	positionUpdate@cordX,w
  6255     071D  1C03               	skipc
  6256     071E  2F20               	goto	u296_21
  6257     071F  2F21               	goto	u296_20
  6258     0720                     u296_21:
  6259     0720  2F38               	goto	i1l2921
  6260     0721                     u296_20:
  6261     0721                     i1l2911:
  6262                           
  6263                           ;main.c: 119: cordX = cordX - 8;
  6264     0721  0824               	movf	positionUpdate@cordX,w
  6265     0722  3EF8               	addlw	248
  6266     0723  00A4               	movwf	positionUpdate@cordX
  6267     0724                     i1l2913:
  6268                           
  6269                           ;main.c: 120: data[0] = cordX;
  6270     0724  0824               	movf	positionUpdate@cordX,w
  6271     0725  00A0               	movwf	positionUpdate@data
  6272     0726                     i1l2915:
  6273                           
  6274                           ;main.c: 121: data[1] = 0b10000000 >> cordY;
  6275     0726  0A79               	incf	positionUpdate@cordY,w
  6276     0727  00FA               	movwf	??_positionUpdate
  6277     0728  3080               	movlw	128
  6278     0729  00FB               	movwf	??_positionUpdate+1
  6279     072A  3000               	movlw	0
  6280     072B  00FC               	movwf	??_positionUpdate+2
  6281     072C  2F30               	goto	u297_24
  6282     072D                     u297_25:
  6283     072D  0D7C               	rlf	??_positionUpdate+2,w
  6284     072E  0CFC               	rrf	??_positionUpdate+2,f
  6285     072F  0CFB               	rrf	??_positionUpdate+1,f
  6286     0730                     u297_24:
  6287     0730  0BFA               	decfsz	??_positionUpdate,f
  6288     0731  2F2D               	goto	u297_25
  6289     0732  087B               	movf	??_positionUpdate+1,w
  6290     0733  0020               	movlb	0	; select bank0
  6291     0734  00A1               	movwf	positionUpdate@data+1
  6292     0735                     i1l2917:
  6293                           
  6294                           ;main.c: 122: data[2] = 1;
  6295     0735  01A2               	clrf	positionUpdate@data+2
  6296     0736  0AA2               	incf	positionUpdate@data+2,f
  6297     0737                     i1l2919:
  6298                           
  6299                           ;main.c: 123: data[3] = 0;
  6300     0737  01A3               	clrf	positionUpdate@data+3
  6301     0738                     i1l2921:
  6302                           
  6303                           ;main.c: 124: };main.c: 125: txSpi(spiCS1, data, 4);
  6304     0738  3020               	movlw	(low (positionUpdate@data| 0))& (0+255)
  6305     0739  00F5               	movwf	i1txSpi@data
  6306     073A  3004               	movlw	4
  6307     073B  00F6               	movwf	i1txSpi@dataSize
  6308     073C  3000               	movlw	0
  6309     073D  00F7               	movwf	i1txSpi@dataSize+1
  6310     073E  3000               	movlw	0
  6311     073F  318F  272B  3186   	fcall	i1_txSpi
  6312     0742                     i1l407:
  6313     0742  0008               	return
  6314     0743                     __end_of_positionUpdate:
  6315                           
  6316                           	psect	text37
  6317     030D                     __ptext37:	
  6318 ;; *************** function _positionCalc *****************
  6319 ;; Defined at:
  6320 ;;		line 84 in file "main.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6334 ;;      Params:         0       0       0       0       0       0
  6335 ;;      Locals:         0       3       0       0       0       0
  6336 ;;      Temps:          0       0       0       0       0       0
  6337 ;;      Totals:         0       3       0       0       0       0
  6338 ;;Total ram usage:        3 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; Hardware stack levels required when called: 4
  6341 ;; This function calls:
  6342 ;;		_Ext_Write
  6343 ;;		___ftneg
  6344 ;;		___fttol
  6345 ;;		_round
  6346 ;;		i1___ftadd
  6347 ;; This function is called by:
  6348 ;;		_executaTudo
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352     030D                     _positionCalc:	
  6353                           ;psect for function _positionCalc
  6354                           
  6355     030D                     i1l2863:	
  6356                           ;incstack = 0
  6357                           ; Regs used in _positionCalc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6358                           
  6359                           
  6360                           ;main.c: 85: static float yi;;main.c: 86: yi = yi + a;
  6361     030D  0020               	movlb	0	; select bank0
  6362     030E  0856               	movf	_a,w
  6363     030F  00F8               	movwf	i1___ftadd@f1
  6364     0310  0857               	movf	_a+1,w
  6365     0311  00F9               	movwf	i1___ftadd@f1+1
  6366     0312  0858               	movf	_a+2,w
  6367     0313  00FA               	movwf	i1___ftadd@f1+2
  6368     0314  083F               	movf	positionCalc@yi,w
  6369     0315  00FB               	movwf	i1___ftadd@f2
  6370     0316  0840               	movf	positionCalc@yi+1,w
  6371     0317  00FC               	movwf	i1___ftadd@f2+1
  6372     0318  0841               	movf	positionCalc@yi+2,w
  6373     0319  00FD               	movwf	i1___ftadd@f2+2
  6374     031A  3181  2145  3183   	fcall	i1___ftadd
  6375     031D  0878               	movf	?i1___ftadd,w
  6376     031E  0020               	movlb	0	; select bank0
  6377     031F  00BF               	movwf	positionCalc@yi
  6378     0320  0879               	movf	?i1___ftadd+1,w
  6379     0321  00C0               	movwf	positionCalc@yi+1
  6380     0322  087A               	movf	?i1___ftadd+2,w
  6381     0323  00C1               	movwf	positionCalc@yi+2
  6382     0324                     i1l2865:
  6383                           
  6384                           ;main.c: 87: y = round(yi);
  6385     0324  083F               	movf	positionCalc@yi,w
  6386     0325  00B4               	movwf	round@x
  6387     0326  0840               	movf	positionCalc@yi+1,w
  6388     0327  00B5               	movwf	round@x+1
  6389     0328  0841               	movf	positionCalc@yi+2,w
  6390     0329  00B6               	movwf	round@x+2
  6391     032A  3186  26B6  3183   	fcall	_round
  6392     032D  0020               	movlb	0	; select bank0
  6393     032E  0834               	movf	?_round,w
  6394     032F  00BA               	movwf	_positionCalc$1591
  6395     0330  0835               	movf	?_round+1,w
  6396     0331  00BB               	movwf	_positionCalc$1591+1
  6397     0332  0836               	movf	?_round+2,w
  6398     0333  00BC               	movwf	_positionCalc$1591+2
  6399     0334                     i1l2867:
  6400                           
  6401                           ;main.c: 87: y = round(yi);
  6402     0334  083A               	movf	_positionCalc$1591,w
  6403     0335  00F0               	movwf	___fttol@f1
  6404     0336  083B               	movf	_positionCalc$1591+1,w
  6405     0337  00F1               	movwf	___fttol@f1+1
  6406     0338  083C               	movf	_positionCalc$1591+2,w
  6407     0339  00F2               	movwf	___fttol@f1+2
  6408     033A  3184  242A  3183   	fcall	___fttol
  6409     033D  0870               	movf	?___fttol,w
  6410     033E  0020               	movlb	0	; select bank0
  6411     033F  00DB               	movwf	_y
  6412     0340                     i1l2869:
  6413                           
  6414                           ;main.c: 88: x = x + incx;
  6415     0340  085C               	movf	_x,w
  6416     0341  0021               	movlb	1	; select bank1
  6417     0342  0756               	addwf	_incx^(0+128),w
  6418     0343  0020               	movlb	0	; select bank0
  6419     0344  00DC               	movwf	_x
  6420     0345                     i1l2871:
  6421                           
  6422                           ;main.c: 89: if(x == 1){
  6423     0345  035C               	decf	_x,w
  6424     0346  1D03               	btfss	3,2
  6425     0347  2B49               	goto	u289_21
  6426     0348  2B4A               	goto	u289_20
  6427     0349                     u289_21:
  6428     0349  2B4D               	goto	i1l2875
  6429     034A                     u289_20:
  6430     034A                     i1l2873:
  6431                           
  6432                           ;main.c: 90: incx = 1;
  6433     034A  0021               	movlb	1	; select bank1
  6434     034B  01D6               	clrf	_incx^(0+128)
  6435     034C  0AD6               	incf	_incx^(0+128),f
  6436     034D                     i1l2875:
  6437                           
  6438                           ;main.c: 91: };main.c: 92: if(x == 16){
  6439     034D  3010               	movlw	16
  6440     034E  0020               	movlb	0	; select bank0
  6441     034F  065C               	xorwf	_x,w
  6442     0350  1D03               	btfss	3,2
  6443     0351  2B53               	goto	u290_21
  6444     0352  2B54               	goto	u290_20
  6445     0353                     u290_21:
  6446     0353  2B57               	goto	i1l2879
  6447     0354                     u290_20:
  6448     0354                     i1l2877:
  6449                           
  6450                           ;main.c: 93: incx = -1;
  6451     0354  30FF               	movlw	255
  6452     0355  0021               	movlb	1	; select bank1
  6453     0356  00D6               	movwf	_incx^(0+128)
  6454     0357                     i1l2879:
  6455                           
  6456                           ;main.c: 94: };main.c: 95: if(y <= 0){
  6457     0357  0020               	movlb	0	; select bank0
  6458     0358  085B               	movf	_y,w
  6459     0359  1D03               	btfss	3,2
  6460     035A  2B5C               	goto	u291_21
  6461     035B  2B5D               	goto	u291_20
  6462     035C                     u291_21:
  6463     035C  2B6E               	goto	i1l2885
  6464     035D                     u291_20:
  6465     035D                     i1l2881:
  6466                           
  6467                           ;main.c: 96: y = 0;
  6468     035D  01DB               	clrf	_y
  6469     035E                     i1l2883:
  6470                           
  6471                           ;main.c: 97: a = -a;
  6472     035E  0856               	movf	_a,w
  6473     035F  00F0               	movwf	___ftneg@f1
  6474     0360  0857               	movf	_a+1,w
  6475     0361  00F1               	movwf	___ftneg@f1+1
  6476     0362  0858               	movf	_a+2,w
  6477     0363  00F2               	movwf	___ftneg@f1+2
  6478     0364  318D  256A  3183   	fcall	___ftneg
  6479     0367  0870               	movf	?___ftneg,w
  6480     0368  0020               	movlb	0	; select bank0
  6481     0369  00D6               	movwf	_a
  6482     036A  0871               	movf	?___ftneg+1,w
  6483     036B  00D7               	movwf	_a+1
  6484     036C  0872               	movf	?___ftneg+2,w
  6485     036D  00D8               	movwf	_a+2
  6486     036E                     i1l2885:
  6487                           
  6488                           ;main.c: 98: };main.c: 99: if(y >= 7){
  6489     036E  3007               	movlw	7
  6490     036F  025B               	subwf	_y,w
  6491     0370  1C03               	skipc
  6492     0371  2B73               	goto	u292_21
  6493     0372  2B74               	goto	u292_20
  6494     0373                     u292_21:
  6495     0373  2B86               	goto	i1l2891
  6496     0374                     u292_20:
  6497     0374                     i1l2887:
  6498                           
  6499                           ;main.c: 100: y = 7;
  6500     0374  3007               	movlw	7
  6501     0375  00DB               	movwf	_y
  6502     0376                     i1l2889:
  6503                           
  6504                           ;main.c: 101: a = -a;
  6505     0376  0856               	movf	_a,w
  6506     0377  00F0               	movwf	___ftneg@f1
  6507     0378  0857               	movf	_a+1,w
  6508     0379  00F1               	movwf	___ftneg@f1+1
  6509     037A  0858               	movf	_a+2,w
  6510     037B  00F2               	movwf	___ftneg@f1+2
  6511     037C  318D  256A  3183   	fcall	___ftneg
  6512     037F  0870               	movf	?___ftneg,w
  6513     0380  0020               	movlb	0	; select bank0
  6514     0381  00D6               	movwf	_a
  6515     0382  0871               	movf	?___ftneg+1,w
  6516     0383  00D7               	movwf	_a+1
  6517     0384  0872               	movf	?___ftneg+2,w
  6518     0385  00D8               	movwf	_a+2
  6519     0386                     i1l2891:
  6520                           
  6521                           ;main.c: 102: };main.c: 103: if (address_write.v16 == 0x7FFF){
  6522     0386  0A46               	incf	_address_write,w
  6523     0387  307F               	movlw	127
  6524     0388  1903               	skipnz
  6525     0389  0647               	xorwf	_address_write+1,w
  6526     038A  1D03               	btfss	3,2
  6527     038B  2B8D               	goto	u293_21
  6528     038C  2B8E               	goto	u293_20
  6529     038D                     u293_21:
  6530     038D  2B90               	goto	i1l2895
  6531     038E                     u293_20:
  6532     038E                     i1l2893:
  6533                           
  6534                           ;main.c: 104: address_write.v16 = 0;
  6535     038E  01C6               	clrf	_address_write
  6536     038F  01C7               	clrf	_address_write+1
  6537     0390                     i1l2895:
  6538                           
  6539                           ;main.c: 105: };main.c: 106: Ext_Write(address_write.b0, address_write.b1, x, y);
  6540     0390  0847               	movf	_address_write+1,w
  6541     0391  00F9               	movwf	Ext_Write@addressHigh
  6542     0392  085C               	movf	_x,w
  6543     0393  00FA               	movwf	Ext_Write@x
  6544     0394  085B               	movf	_y,w
  6545     0395  00FB               	movwf	Ext_Write@y
  6546     0396  0846               	movf	_address_write,w
  6547     0397  318D  25FF  3183   	fcall	_Ext_Write
  6548     039A                     i1l2897:
  6549                           
  6550                           ;main.c: 107: address_write.v16++;
  6551     039A  3001               	movlw	1
  6552     039B  0020               	movlb	0	; select bank0
  6553     039C  07C6               	addwf	_address_write,f
  6554     039D  3000               	movlw	0
  6555     039E  3DC7               	addwfc	_address_write+1,f
  6556     039F                     i1l401:
  6557     039F  0008               	return
  6558     03A0                     __end_of_positionCalc:
  6559                           
  6560                           	psect	text38
  6561     06B6                     __ptext38:	
  6562 ;; *************** function _round *****************
  6563 ;; Defined at:
  6564 ;;		line 6 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/round.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  x               3   20[BANK0 ] void 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  f               3   23[BANK0 ] void 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  3   20[BANK0 ] void 
  6571 ;; Registers used:
  6572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6578 ;;      Params:         0       3       0       0       0       0
  6579 ;;      Locals:         0       3       0       0       0       0
  6580 ;;      Temps:          0       0       0       0       0       0
  6581 ;;      Totals:         0       6       0       0       0       0
  6582 ;;Total ram usage:        6 bytes
  6583 ;; Hardware stack levels used: 1
  6584 ;; Hardware stack levels required when called: 3
  6585 ;; This function calls:
  6586 ;;		___ftsub
  6587 ;;		_trunc
  6588 ;;		i1___ftadd
  6589 ;; This function is called by:
  6590 ;;		_positionCalc
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594     06B6                     _round:	
  6595                           ;psect for function _round
  6596                           
  6597     06B6                     i1l2223:	
  6598                           ;incstack = 0
  6599                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6600                           
  6601     06B6  0020               	movlb	0	; select bank0
  6602     06B7  0834               	movf	round@x,w
  6603     06B8  00A6               	movwf	trunc@x
  6604     06B9  0835               	movf	round@x+1,w
  6605     06BA  00A7               	movwf	trunc@x+1
  6606     06BB  0836               	movf	round@x+2,w
  6607     06BC  00A8               	movwf	trunc@x+2
  6608     06BD  3187  2743  3186   	fcall	_trunc
  6609     06C0  0020               	movlb	0	; select bank0
  6610     06C1  0826               	movf	?_trunc,w
  6611     06C2  00AE               	movwf	___ftsub@f2
  6612     06C3  0827               	movf	?_trunc+1,w
  6613     06C4  00AF               	movwf	___ftsub@f2+1
  6614     06C5  0828               	movf	?_trunc+2,w
  6615     06C6  00B0               	movwf	___ftsub@f2+2
  6616     06C7  0834               	movf	round@x,w
  6617     06C8  00B1               	movwf	___ftsub@f1
  6618     06C9  0835               	movf	round@x+1,w
  6619     06CA  00B2               	movwf	___ftsub@f1+1
  6620     06CB  0836               	movf	round@x+2,w
  6621     06CC  00B3               	movwf	___ftsub@f1+2
  6622     06CD  318E  269D  3186   	fcall	___ftsub
  6623     06D0  0020               	movlb	0	; select bank0
  6624     06D1  082E               	movf	?___ftsub,w
  6625     06D2  00B7               	movwf	round@f
  6626     06D3  082F               	movf	?___ftsub+1,w
  6627     06D4  00B8               	movwf	round@f+1
  6628     06D5  0830               	movf	?___ftsub+2,w
  6629     06D6  00B9               	movwf	round@f+2
  6630     06D7                     i1l2225:
  6631     06D7  0837               	movf	round@f,w
  6632     06D8  00F8               	movwf	i1___ftadd@f1
  6633     06D9  0838               	movf	round@f+1,w
  6634     06DA  00F9               	movwf	i1___ftadd@f1+1
  6635     06DB  0839               	movf	round@f+2,w
  6636     06DC  00FA               	movwf	i1___ftadd@f1+2
  6637     06DD  0834               	movf	round@x,w
  6638     06DE  00FB               	movwf	i1___ftadd@f2
  6639     06DF  0835               	movf	round@x+1,w
  6640     06E0  00FC               	movwf	i1___ftadd@f2+1
  6641     06E1  0836               	movf	round@x+2,w
  6642     06E2  00FD               	movwf	i1___ftadd@f2+2
  6643     06E3  3181  2145  3186   	fcall	i1___ftadd
  6644     06E6  0878               	movf	?i1___ftadd,w
  6645     06E7  0020               	movlb	0	; select bank0
  6646     06E8  00B4               	movwf	round@x
  6647     06E9  0879               	movf	?i1___ftadd+1,w
  6648     06EA  00B5               	movwf	round@x+1
  6649     06EB  087A               	movf	?i1___ftadd+2,w
  6650     06EC  00B6               	movwf	round@x+2
  6651     06ED                     i1l2227:
  6652     06ED  0834               	movf	round@x,w
  6653     06EE  00A6               	movwf	trunc@x
  6654     06EF  0835               	movf	round@x+1,w
  6655     06F0  00A7               	movwf	trunc@x+1
  6656     06F1  0836               	movf	round@x+2,w
  6657     06F2  00A8               	movwf	trunc@x+2
  6658     06F3  3187  2743  3186   	fcall	_trunc
  6659     06F6  0020               	movlb	0	; select bank0
  6660     06F7  0826               	movf	?_trunc,w
  6661     06F8  00B4               	movwf	?_round
  6662     06F9  0827               	movf	?_trunc+1,w
  6663     06FA  00B5               	movwf	?_round+1
  6664     06FB  0828               	movf	?_trunc+2,w
  6665     06FC  00B6               	movwf	?_round+2
  6666     06FD                     i1l1068:
  6667     06FD  0008               	return
  6668     06FE                     __end_of_round:
  6669                           
  6670                           	psect	text39
  6671     0743                     __ptext39:	
  6672 ;; *************** function _trunc *****************
  6673 ;; Defined at:
  6674 ;;		line 13 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/trunc.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  x               3    6[BANK0 ] void 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  i               3    9[BANK0 ] void 
  6679 ;;  expon           2   12[BANK0 ] int 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  3    6[BANK0 ] int 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6689 ;;      Params:         0       3       0       0       0       0
  6690 ;;      Locals:         0       5       0       0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0
  6692 ;;      Totals:         0       8       0       0       0       0
  6693 ;;Total ram usage:        8 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 2
  6696 ;; This function calls:
  6697 ;;		___altoft
  6698 ;;		___fttol
  6699 ;;		_frexp
  6700 ;; This function is called by:
  6701 ;;		_round
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705     0743                     _trunc:	
  6706                           ;psect for function _trunc
  6707                           
  6708     0743                     i1l2187:	
  6709                           ;incstack = 0
  6710                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6711                           
  6712     0743  0020               	movlb	0	; select bank0
  6713     0744  0826               	movf	trunc@x,w
  6714     0745  00F0               	movwf	frexp@value
  6715     0746  0827               	movf	trunc@x+1,w
  6716     0747  00F1               	movwf	frexp@value+1
  6717     0748  0828               	movf	trunc@x+2,w
  6718     0749  00F2               	movwf	frexp@value+2
  6719     074A  302C               	movlw	(low (trunc@expon| 0))& (0+255)
  6720     074B  00F3               	movwf	frexp@eptr
  6721     074C  3187  27C4  3187   	fcall	_frexp
  6722     074F                     i1l2189:
  6723     074F  0020               	movlb	0	; select bank0
  6724     0750  1FAD               	btfss	trunc@expon+1,7
  6725     0751  2F53               	goto	u195_21
  6726     0752  2F54               	goto	u195_20
  6727     0753                     u195_21:
  6728     0753  2F5B               	goto	i1l2195
  6729     0754                     u195_20:
  6730     0754                     i1l2191:
  6731     0754  3000               	movlw	0
  6732     0755  00A6               	movwf	?_trunc
  6733     0756  3000               	movlw	0
  6734     0757  00A7               	movwf	?_trunc+1
  6735     0758  3000               	movlw	0
  6736     0759  00A8               	movwf	?_trunc+2
  6737     075A  2F87               	goto	i1l1074
  6738     075B                     i1l2195:
  6739     075B  3000               	movlw	0
  6740     075C  022D               	subwf	trunc@expon+1,w
  6741     075D  3015               	movlw	21
  6742     075E  1903               	skipnz
  6743     075F  022C               	subwf	trunc@expon,w
  6744     0760  1C03               	skipc
  6745     0761  2F63               	goto	u196_21
  6746     0762  2F64               	goto	u196_20
  6747     0763                     u196_21:
  6748     0763  2F65               	goto	i1l2199
  6749     0764                     u196_20:
  6750     0764                     i1l2197:
  6751     0764  2F87               	goto	i1l1074
  6752     0765                     i1l2199:
  6753     0765  0826               	movf	trunc@x,w
  6754     0766  00F0               	movwf	___fttol@f1
  6755     0767  0827               	movf	trunc@x+1,w
  6756     0768  00F1               	movwf	___fttol@f1+1
  6757     0769  0828               	movf	trunc@x+2,w
  6758     076A  00F2               	movwf	___fttol@f1+2
  6759     076B  3184  242A  3187   	fcall	___fttol
  6760     076E  0873               	movf	?___fttol+3,w
  6761     076F  0020               	movlb	0	; select bank0
  6762     0770  00A3               	movwf	___altoft@c+3
  6763     0771  0872               	movf	?___fttol+2,w
  6764     0772  00A2               	movwf	___altoft@c+2
  6765     0773  0871               	movf	?___fttol+1,w
  6766     0774  00A1               	movwf	___altoft@c+1
  6767     0775  0870               	movf	?___fttol,w
  6768     0776  00A0               	movwf	___altoft@c
  6769     0777  3187  2788  3187   	fcall	___altoft
  6770     077A  0020               	movlb	0	; select bank0
  6771     077B  0820               	movf	?___altoft,w
  6772     077C  00A9               	movwf	trunc@i
  6773     077D  0821               	movf	?___altoft+1,w
  6774     077E  00AA               	movwf	trunc@i+1
  6775     077F  0822               	movf	?___altoft+2,w
  6776     0780  00AB               	movwf	trunc@i+2
  6777     0781                     i1l2201:
  6778     0781  0829               	movf	trunc@i,w
  6779     0782  00A6               	movwf	?_trunc
  6780     0783  082A               	movf	trunc@i+1,w
  6781     0784  00A7               	movwf	?_trunc+1
  6782     0785  082B               	movf	trunc@i+2,w
  6783     0786  00A8               	movwf	?_trunc+2
  6784     0787                     i1l1074:
  6785     0787  0008               	return
  6786     0788                     __end_of_trunc:
  6787                           
  6788                           	psect	text40
  6789     07C4                     __ptext40:	
  6790 ;; *************** function _frexp *****************
  6791 ;; Defined at:
  6792 ;;		line 254 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/frexp.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  value           3    0[COMMON] int 
  6795 ;;  eptr            1    3[COMMON] PTR int 
  6796 ;;		 -> trunc@expon(2), 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;		None
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  3    0[COMMON] PTR int 
  6801 ;; Registers used:
  6802 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6808 ;;      Params:         4       0       0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0
  6810 ;;      Temps:          2       0       0       0       0       0
  6811 ;;      Totals:         6       0       0       0       0       0
  6812 ;;Total ram usage:        6 bytes
  6813 ;; Hardware stack levels used: 1
  6814 ;; This function calls:
  6815 ;;		Nothing
  6816 ;; This function is called by:
  6817 ;;		_trunc
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821     07C4                     _frexp:	
  6822                           ;psect for function _frexp
  6823                           
  6824     07C4                     i1l2083:	
  6825                           ;incstack = 0
  6826                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6827                           
  6828     07C4  0872               	movf	frexp@value+2,w
  6829     07C5  0471               	iorwf	frexp@value+1,w
  6830     07C6  0470               	iorwf	frexp@value,w
  6831     07C7  1D03               	skipz
  6832     07C8  2FCA               	goto	u168_21
  6833     07C9  2FCB               	goto	u168_20
  6834     07CA                     u168_21:
  6835     07CA  2FD2               	goto	i1l2089
  6836     07CB                     u168_20:
  6837     07CB                     i1l2085:
  6838     07CB  0873               	movf	frexp@eptr,w
  6839     07CC  0086               	movwf	6
  6840     07CD  0187               	clrf	7
  6841     07CE  3000               	movlw	0
  6842     07CF  3FC0               	movwi [0]fsr1
  6843     07D0  3FC1               	movwi [1]fsr1
  6844     07D1  2FFA               	goto	i1l1081
  6845     07D2                     i1l2089:
  6846     07D2  0872               	movf	frexp@value+2,w
  6847     07D3  397F               	andlw	127
  6848     07D4  00F4               	movwf	??_frexp
  6849     07D5  01F5               	clrf	??_frexp+1
  6850     07D6  35F4               	lslf	??_frexp,f
  6851     07D7  0DF5               	rlf	??_frexp+1,f
  6852     07D8  0873               	movf	frexp@eptr,w
  6853     07D9  0086               	movwf	6
  6854     07DA  0187               	clrf	7
  6855     07DB  0874               	movf	??_frexp,w
  6856     07DC  3FC0               	movwi [0]fsr1
  6857     07DD  0875               	movf	??_frexp+1,w
  6858     07DE  3FC1               	movwi [1]fsr1
  6859     07DF  0D71               	rlf	frexp@value+1,w
  6860     07E0  0D71               	rlf	frexp@value+1,w
  6861     07E1  3901               	andlw	1
  6862     07E2  00F4               	movwf	??_frexp
  6863     07E3  01F5               	clrf	??_frexp+1
  6864     07E4  0873               	movf	frexp@eptr,w
  6865     07E5  0086               	movwf	6
  6866     07E6  0187               	clrf	7
  6867     07E7  0874               	movf	??_frexp,w
  6868     07E8  0481               	iorwf	1,f
  6869     07E9  3141               	addfsr 1,1
  6870     07EA  0875               	movf	??_frexp+1,w
  6871     07EB  0481               	iorwf	1,f
  6872     07EC                     i1l2091:
  6873     07EC  0873               	movf	frexp@eptr,w
  6874     07ED  0086               	movwf	6
  6875     07EE  0187               	clrf	7
  6876     07EF  3082               	movlw	130
  6877     07F0  0781               	addwf	1,f
  6878     07F1  3141               	addfsr 1,1
  6879     07F2  30FF               	movlw	255
  6880     07F3  3D81               	addwfc	1,f
  6881     07F4  317F               	addfsr 1,-1
  6882     07F5                     i1l2093:
  6883     07F5  0872               	movf	frexp@value+2,w
  6884     07F6  3980               	andlw	-128
  6885     07F7  383F               	iorlw	63
  6886     07F8  00F2               	movwf	frexp@value+2
  6887     07F9                     i1l2095:
  6888     07F9  13F1               	bcf	frexp@value+1,7
  6889     07FA                     i1l1081:
  6890     07FA  0008               	return
  6891     07FB                     __end_of_frexp:
  6892                           
  6893                           	psect	text41
  6894     042A                     __ptext41:	
  6895 ;; *************** function ___fttol *****************
  6896 ;; Defined at:
  6897 ;;		line 44 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/fttol.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;  f1              3    0[COMMON] float 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;  lval            4    8[COMMON] unsigned long 
  6902 ;;  exp1            1   12[COMMON] unsigned char 
  6903 ;;  sign1           1    7[COMMON] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  4    0[COMMON] long 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6913 ;;      Params:         4       0       0       0       0       0
  6914 ;;      Locals:         6       0       0       0       0       0
  6915 ;;      Temps:          3       0       0       0       0       0
  6916 ;;      Totals:        13       0       0       0       0       0
  6917 ;;Total ram usage:       13 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_positionCalc
  6923 ;;		_trunc
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927     042A                     ___fttol:	
  6928                           ;psect for function ___fttol
  6929                           
  6930     042A                     i1l2041:	
  6931                           ;incstack = 0
  6932                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6933                           
  6934     042A  0870               	movf	___fttol@f1,w
  6935     042B  00F4               	movwf	??___fttol
  6936     042C  0871               	movf	___fttol@f1+1,w
  6937     042D  00F5               	movwf	??___fttol+1
  6938     042E  0872               	movf	___fttol@f1+2,w
  6939     042F  00F6               	movwf	??___fttol+2
  6940     0430  1003               	clrc
  6941     0431  0D75               	rlf	??___fttol+1,w
  6942     0432  0D76               	rlf	??___fttol+2,w
  6943     0433  00FC               	movwf	___fttol@exp1
  6944     0434  087C               	movf	___fttol@exp1,w
  6945     0435  1D03               	btfss	3,2
  6946     0436  2C38               	goto	u158_21
  6947     0437  2C39               	goto	u158_20
  6948     0438                     u158_21:
  6949     0438  2C42               	goto	i1l2047
  6950     0439                     u158_20:
  6951     0439                     i1l2043:
  6952     0439  3000               	movlw	0
  6953     043A  00F3               	movwf	?___fttol+3
  6954     043B  3000               	movlw	0
  6955     043C  00F2               	movwf	?___fttol+2
  6956     043D  3000               	movlw	0
  6957     043E  00F1               	movwf	?___fttol+1
  6958     043F  3000               	movlw	0
  6959     0440  00F0               	movwf	?___fttol
  6960     0441  2CA9               	goto	i1l936
  6961     0442                     i1l2047:
  6962     0442  0870               	movf	___fttol@f1,w
  6963     0443  00F4               	movwf	??___fttol
  6964     0444  0871               	movf	___fttol@f1+1,w
  6965     0445  00F5               	movwf	??___fttol+1
  6966     0446  0872               	movf	___fttol@f1+2,w
  6967     0447  00F6               	movwf	??___fttol+2
  6968     0448  3017               	movlw	23
  6969     0449                     u159_25:
  6970     0449  36F6               	lsrf	??___fttol+2,f
  6971     044A  0CF5               	rrf	??___fttol+1,f
  6972     044B  0CF4               	rrf	??___fttol,f
  6973     044C                     u159_20:
  6974     044C  0B89               	decfsz	9,f
  6975     044D  2C49               	goto	u159_25
  6976     044E  0874               	movf	??___fttol,w
  6977     044F  00F7               	movwf	___fttol@sign1
  6978     0450                     i1l2049:
  6979     0450  17F1               	bsf	___fttol@f1+1,7
  6980     0451                     i1l2051:
  6981     0451  30FF               	movlw	255
  6982     0452  05F0               	andwf	___fttol@f1,f
  6983     0453  30FF               	movlw	255
  6984     0454  05F1               	andwf	___fttol@f1+1,f
  6985     0455  3000               	movlw	0
  6986     0456  05F2               	andwf	___fttol@f1+2,f
  6987     0457                     i1l2053:
  6988     0457  0870               	movf	___fttol@f1,w
  6989     0458  00F8               	movwf	___fttol@lval
  6990     0459  0871               	movf	___fttol@f1+1,w
  6991     045A  00F9               	movwf	___fttol@lval+1
  6992     045B  0872               	movf	___fttol@f1+2,w
  6993     045C  00FA               	movwf	___fttol@lval+2
  6994     045D  01FB               	clrf	___fttol@lval+3
  6995     045E                     i1l2055:
  6996     045E  308E               	movlw	142
  6997     045F  02FC               	subwf	___fttol@exp1,f
  6998     0460                     i1l2057:
  6999     0460  1FFC               	btfss	___fttol@exp1,7
  7000     0461  2C63               	goto	u160_21
  7001     0462  2C64               	goto	u160_20
  7002     0463                     u160_21:
  7003     0463  2C7C               	goto	i1l2067
  7004     0464                     u160_20:
  7005     0464                     i1l2059:
  7006     0464  087C               	movf	___fttol@exp1,w
  7007     0465  3A80               	xorlw	128
  7008     0466  3E8F               	addlw	143
  7009     0467  1803               	skipnc
  7010     0468  2C6A               	goto	u161_21
  7011     0469  2C6B               	goto	u161_20
  7012     046A                     u161_21:
  7013     046A  2C6C               	goto	i1l2065
  7014     046B                     u161_20:
  7015     046B  2C39               	goto	i1l2043
  7016     046C                     i1l2065:
  7017     046C  3001               	movlw	1
  7018     046D                     u162_25:
  7019     046D  36FB               	lsrf	___fttol@lval+3,f
  7020     046E  0CFA               	rrf	___fttol@lval+2,f
  7021     046F  0CF9               	rrf	___fttol@lval+1,f
  7022     0470  0CF8               	rrf	___fttol@lval,f
  7023     0471  0B89               	decfsz	9,f
  7024     0472  2C6D               	goto	u162_25
  7025     0473  3001               	movlw	1
  7026     0474  00F4               	movwf	??___fttol
  7027     0475  0874               	movf	??___fttol,w
  7028     0476  07FC               	addwf	___fttol@exp1,f
  7029     0477  1D03               	btfss	3,2
  7030     0478  2C7A               	goto	u163_21
  7031     0479  2C7B               	goto	u163_20
  7032     047A                     u163_21:
  7033     047A  2C6C               	goto	i1l2065
  7034     047B                     u163_20:
  7035     047B  2C91               	goto	i1l2075
  7036     047C                     i1l2067:
  7037     047C  3018               	movlw	24
  7038     047D  027C               	subwf	___fttol@exp1,w
  7039     047E  1C03               	skipc
  7040     047F  2C81               	goto	u164_21
  7041     0480  2C82               	goto	u164_20
  7042     0481                     u164_21:
  7043     0481  2C8C               	goto	i1l943
  7044     0482                     u164_20:
  7045     0482  2C39               	goto	i1l2043
  7046     0483                     i1l2073:
  7047     0483  3001               	movlw	1
  7048     0484                     u165_25:
  7049     0484  35F8               	lslf	___fttol@lval,f
  7050     0485  0DF9               	rlf	___fttol@lval+1,f
  7051     0486  0DFA               	rlf	___fttol@lval+2,f
  7052     0487  0DFB               	rlf	___fttol@lval+3,f
  7053     0488  0B89               	decfsz	9,f
  7054     0489  2C84               	goto	u165_25
  7055     048A  3001               	movlw	1
  7056     048B  02FC               	subwf	___fttol@exp1,f
  7057     048C                     i1l943:
  7058     048C  087C               	movf	___fttol@exp1,w
  7059     048D  1D03               	btfss	3,2
  7060     048E  2C90               	goto	u166_21
  7061     048F  2C91               	goto	u166_20
  7062     0490                     u166_21:
  7063     0490  2C83               	goto	i1l2073
  7064     0491                     u166_20:
  7065     0491                     i1l2075:
  7066     0491  0877               	movf	___fttol@sign1,w
  7067     0492  1903               	btfsc	3,2
  7068     0493  2C95               	goto	u167_21
  7069     0494  2C96               	goto	u167_20
  7070     0495                     u167_21:
  7071     0495  2CA1               	goto	i1l2079
  7072     0496                     u167_20:
  7073     0496                     i1l2077:
  7074     0496  09F8               	comf	___fttol@lval,f
  7075     0497  09F9               	comf	___fttol@lval+1,f
  7076     0498  09FA               	comf	___fttol@lval+2,f
  7077     0499  09FB               	comf	___fttol@lval+3,f
  7078     049A  0AF8               	incf	___fttol@lval,f
  7079     049B  1903               	skipnz
  7080     049C  0AF9               	incf	___fttol@lval+1,f
  7081     049D  1903               	skipnz
  7082     049E  0AFA               	incf	___fttol@lval+2,f
  7083     049F  1903               	skipnz
  7084     04A0  0AFB               	incf	___fttol@lval+3,f
  7085     04A1                     i1l2079:
  7086     04A1  087B               	movf	___fttol@lval+3,w
  7087     04A2  00F3               	movwf	?___fttol+3
  7088     04A3  087A               	movf	___fttol@lval+2,w
  7089     04A4  00F2               	movwf	?___fttol+2
  7090     04A5  0879               	movf	___fttol@lval+1,w
  7091     04A6  00F1               	movwf	?___fttol+1
  7092     04A7  0878               	movf	___fttol@lval,w
  7093     04A8  00F0               	movwf	?___fttol
  7094     04A9                     i1l936:
  7095     04A9  0008               	return
  7096     04AA                     __end_of___fttol:
  7097                           
  7098                           	psect	text42
  7099     0788                     __ptext42:	
  7100 ;; *************** function ___altoft *****************
  7101 ;; Defined at:
  7102 ;;		line 42 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/altoft.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  c               4    0[BANK0 ] long 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  sign            1    5[BANK0 ] unsigned char 
  7107 ;;  exp             1    4[BANK0 ] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  3    0[BANK0 ] float 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2, status,0, pclath, cstack
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7117 ;;      Params:         0       4       0       0       0       0
  7118 ;;      Locals:         0       2       0       0       0       0
  7119 ;;      Temps:          1       0       0       0       0       0
  7120 ;;      Totals:         1       6       0       0       0       0
  7121 ;;Total ram usage:        7 bytes
  7122 ;; Hardware stack levels used: 1
  7123 ;; Hardware stack levels required when called: 1
  7124 ;; This function calls:
  7125 ;;		i1___ftpack
  7126 ;; This function is called by:
  7127 ;;		_trunc
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131     0788                     ___altoft:	
  7132                           ;psect for function ___altoft
  7133                           
  7134     0788                     i1l2025:	
  7135                           ;incstack = 0
  7136                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  7137                           
  7138     0788  0020               	movlb	0	; select bank0
  7139     0789  01A5               	clrf	___altoft@sign
  7140     078A                     i1l2027:
  7141     078A  308E               	movlw	142
  7142     078B  00A4               	movwf	___altoft@exp
  7143     078C                     i1l2029:
  7144     078C  1FA3               	btfss	___altoft@c+3,7
  7145     078D  2F8F               	goto	u155_21
  7146     078E  2F90               	goto	u155_20
  7147     078F                     u155_21:
  7148     078F  2FA9               	goto	i1l2035
  7149     0790                     u155_20:
  7150     0790                     i1l2031:
  7151     0790  09A0               	comf	___altoft@c,f
  7152     0791  09A1               	comf	___altoft@c+1,f
  7153     0792  09A2               	comf	___altoft@c+2,f
  7154     0793  09A3               	comf	___altoft@c+3,f
  7155     0794  0AA0               	incf	___altoft@c,f
  7156     0795  1903               	skipnz
  7157     0796  0AA1               	incf	___altoft@c+1,f
  7158     0797  1903               	skipnz
  7159     0798  0AA2               	incf	___altoft@c+2,f
  7160     0799  1903               	skipnz
  7161     079A  0AA3               	incf	___altoft@c+3,f
  7162     079B  01A5               	clrf	___altoft@sign
  7163     079C  0AA5               	incf	___altoft@sign,f
  7164     079D  2FA9               	goto	i1l2035
  7165     079E                     i1l2033:
  7166     079E  3001               	movlw	1
  7167     079F                     u156_25:
  7168     079F  36A3               	lsrf	___altoft@c+3,f
  7169     07A0  0CA2               	rrf	___altoft@c+2,f
  7170     07A1  0CA1               	rrf	___altoft@c+1,f
  7171     07A2  0CA0               	rrf	___altoft@c,f
  7172     07A3  0B89               	decfsz	9,f
  7173     07A4  2F9F               	goto	u156_25
  7174     07A5  3001               	movlw	1
  7175     07A6  00FD               	movwf	??___altoft
  7176     07A7  087D               	movf	??___altoft,w
  7177     07A8  07A4               	addwf	___altoft@exp,f
  7178     07A9                     i1l2035:
  7179     07A9  30FF               	movlw	255
  7180     07AA  0523               	andwf	___altoft@c+3,w
  7181     07AB  1D03               	btfss	3,2
  7182     07AC  2FAE               	goto	u157_21
  7183     07AD  2FAF               	goto	u157_20
  7184     07AE                     u157_21:
  7185     07AE  2F9E               	goto	i1l2033
  7186     07AF                     u157_20:
  7187     07AF                     i1l2037:
  7188     07AF  0820               	movf	___altoft@c,w
  7189     07B0  00F0               	movwf	i1___ftpack@arg
  7190     07B1  0821               	movf	___altoft@c+1,w
  7191     07B2  00F1               	movwf	i1___ftpack@arg+1
  7192     07B3  0822               	movf	___altoft@c+2,w
  7193     07B4  00F2               	movwf	i1___ftpack@arg+2
  7194     07B5  0824               	movf	___altoft@exp,w
  7195     07B6  00F3               	movwf	i1___ftpack@exp
  7196     07B7  0825               	movf	___altoft@sign,w
  7197     07B8  00F4               	movwf	i1___ftpack@sign
  7198     07B9  3185  251F  3187   	fcall	i1___ftpack
  7199     07BC  0870               	movf	?i1___ftpack,w
  7200     07BD  0020               	movlb	0	; select bank0
  7201     07BE  00A0               	movwf	?___altoft
  7202     07BF  0871               	movf	?i1___ftpack+1,w
  7203     07C0  00A1               	movwf	?___altoft+1
  7204     07C1  0872               	movf	?i1___ftpack+2,w
  7205     07C2  00A2               	movwf	?___altoft+2
  7206     07C3                     i1l743:
  7207     07C3  0008               	return
  7208     07C4                     __end_of___altoft:
  7209                           
  7210                           	psect	text43
  7211     0E9D                     __ptext43:	
  7212 ;; *************** function ___ftsub *****************
  7213 ;; Defined at:
  7214 ;;		line 17 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/ftsub.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  f2              3   14[BANK0 ] float 
  7217 ;;  f1              3   17[BANK0 ] float 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  3   14[BANK0 ] float 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, pclath, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7229 ;;      Params:         0       6       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0
  7232 ;;      Totals:         0       6       0       0       0       0
  7233 ;;Total ram usage:        6 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 2
  7236 ;; This function calls:
  7237 ;;		i1___ftadd
  7238 ;; This function is called by:
  7239 ;;		_round
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243     0E9D                     ___ftsub:	
  7244                           ;psect for function ___ftsub
  7245                           
  7246     0E9D                     i1l2179:	
  7247                           ;incstack = 0
  7248                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7249                           
  7250     0E9D  0020               	movlb	0	; select bank0
  7251     0E9E  0830               	movf	___ftsub@f2+2,w
  7252     0E9F  042F               	iorwf	___ftsub@f2+1,w
  7253     0EA0  042E               	iorwf	___ftsub@f2,w
  7254     0EA1  1903               	skipnz
  7255     0EA2  2EA4               	goto	u194_21
  7256     0EA3  2EA5               	goto	u194_20
  7257     0EA4                     u194_21:
  7258     0EA4  2EA7               	goto	i1l2183
  7259     0EA5                     u194_20:
  7260     0EA5                     i1l2181:
  7261     0EA5  3080               	movlw	128
  7262     0EA6  06B0               	xorwf	___ftsub@f2+2,f
  7263     0EA7                     i1l2183:
  7264     0EA7  0831               	movf	___ftsub@f1,w
  7265     0EA8  00F8               	movwf	i1___ftadd@f1
  7266     0EA9  0832               	movf	___ftsub@f1+1,w
  7267     0EAA  00F9               	movwf	i1___ftadd@f1+1
  7268     0EAB  0833               	movf	___ftsub@f1+2,w
  7269     0EAC  00FA               	movwf	i1___ftadd@f1+2
  7270     0EAD  082E               	movf	___ftsub@f2,w
  7271     0EAE  00FB               	movwf	i1___ftadd@f2
  7272     0EAF  082F               	movf	___ftsub@f2+1,w
  7273     0EB0  00FC               	movwf	i1___ftadd@f2+1
  7274     0EB1  0830               	movf	___ftsub@f2+2,w
  7275     0EB2  00FD               	movwf	i1___ftadd@f2+2
  7276     0EB3  3181  2145  318E   	fcall	i1___ftadd
  7277     0EB6  0878               	movf	?i1___ftadd,w
  7278     0EB7  0020               	movlb	0	; select bank0
  7279     0EB8  00AE               	movwf	?___ftsub
  7280     0EB9  0879               	movf	?i1___ftadd+1,w
  7281     0EBA  00AF               	movwf	?___ftsub+1
  7282     0EBB  087A               	movf	?i1___ftadd+2,w
  7283     0EBC  00B0               	movwf	?___ftsub+2
  7284     0EBD                     i1l932:
  7285     0EBD  0008               	return
  7286     0EBE                     __end_of___ftsub:
  7287                           
  7288                           	psect	text44
  7289     0145                     __ptext44:	
  7290 ;; *************** function i1___ftadd *****************
  7291 ;; Defined at:
  7292 ;;		line 86 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/ftadd.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  f1              3    8[COMMON] float 
  7295 ;;  f2              3   11[COMMON] float 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  exp1            1    5[BANK0 ] unsigned char 
  7298 ;;  exp2            1    4[BANK0 ] unsigned char 
  7299 ;;  sign            1    3[BANK0 ] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  3    8[COMMON] float 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, pclath, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7309 ;;      Params:         6       0       0       0       0       0
  7310 ;;      Locals:         0       3       0       0       0       0
  7311 ;;      Temps:          0       3       0       0       0       0
  7312 ;;      Totals:         6       6       0       0       0       0
  7313 ;;Total ram usage:       12 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 1
  7316 ;; This function calls:
  7317 ;;		i1___ftpack
  7318 ;; This function is called by:
  7319 ;;		_positionCalc
  7320 ;;		___ftsub
  7321 ;;		_round
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325     0145                     i1___ftadd:	
  7326                           ;psect for function i1___ftadd
  7327                           
  7328     0145                     i1l2109:	
  7329                           ;incstack = 0
  7330                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7331                           
  7332     0145  0878               	movf	i1___ftadd@f1,w
  7333     0146  0020               	movlb	0	; select bank0
  7334     0147  00A0               	movwf	??i1___ftadd
  7335     0148  0879               	movf	i1___ftadd@f1+1,w
  7336     0149  00A1               	movwf	??i1___ftadd+1
  7337     014A  087A               	movf	i1___ftadd@f1+2,w
  7338     014B  00A2               	movwf	??i1___ftadd+2
  7339     014C  1003               	clrc
  7340     014D  0D21               	rlf	??i1___ftadd+1,w
  7341     014E  0D22               	rlf	??i1___ftadd+2,w
  7342     014F  00A5               	movwf	i1___ftadd@exp1
  7343     0150  087B               	movf	i1___ftadd@f2,w
  7344     0151  00A0               	movwf	??i1___ftadd
  7345     0152  087C               	movf	i1___ftadd@f2+1,w
  7346     0153  00A1               	movwf	??i1___ftadd+1
  7347     0154  087D               	movf	i1___ftadd@f2+2,w
  7348     0155  00A2               	movwf	??i1___ftadd+2
  7349     0156  1003               	clrc
  7350     0157  0D21               	rlf	??i1___ftadd+1,w
  7351     0158  0D22               	rlf	??i1___ftadd+2,w
  7352     0159  00A4               	movwf	i1___ftadd@exp2
  7353     015A  0825               	movf	i1___ftadd@exp1,w
  7354     015B  1903               	btfsc	3,2
  7355     015C  295E               	goto	u171_21
  7356     015D  295F               	goto	u171_20
  7357     015E                     u171_21:
  7358     015E  296F               	goto	i1l2115
  7359     015F                     u171_20:
  7360     015F                     i1l2111:
  7361     015F  0824               	movf	i1___ftadd@exp2,w
  7362     0160  0225               	subwf	i1___ftadd@exp1,w
  7363     0161  1803               	skipnc
  7364     0162  2964               	goto	u172_21
  7365     0163  2965               	goto	u172_20
  7366     0164                     u172_21:
  7367     0164  2976               	goto	i1l2119
  7368     0165                     u172_20:
  7369     0165                     i1l2113:
  7370     0165  0824               	movf	i1___ftadd@exp2,w
  7371     0166  00A0               	movwf	??i1___ftadd
  7372     0167  0825               	movf	i1___ftadd@exp1,w
  7373     0168  02A0               	subwf	??i1___ftadd,f
  7374     0169  3019               	movlw	25
  7375     016A  0220               	subwf	??i1___ftadd,w
  7376     016B  1C03               	skipc
  7377     016C  296E               	goto	u173_21
  7378     016D  296F               	goto	u173_20
  7379     016E                     u173_21:
  7380     016E  2976               	goto	i1l2119
  7381     016F                     u173_20:
  7382     016F                     i1l2115:
  7383     016F  087B               	movf	i1___ftadd@f2,w
  7384     0170  00F8               	movwf	?i1___ftadd
  7385     0171  087C               	movf	i1___ftadd@f2+1,w
  7386     0172  00F9               	movwf	?i1___ftadd+1
  7387     0173  087D               	movf	i1___ftadd@f2+2,w
  7388     0174  00FA               	movwf	?i1___ftadd+2
  7389     0175  2A59               	goto	i1l869
  7390     0176                     i1l2119:
  7391     0176  0824               	movf	i1___ftadd@exp2,w
  7392     0177  1903               	btfsc	3,2
  7393     0178  297A               	goto	u174_21
  7394     0179  297B               	goto	u174_20
  7395     017A                     u174_21:
  7396     017A  298B               	goto	i1l872
  7397     017B                     u174_20:
  7398     017B                     i1l2121:
  7399     017B  0825               	movf	i1___ftadd@exp1,w
  7400     017C  0224               	subwf	i1___ftadd@exp2,w
  7401     017D  1803               	skipnc
  7402     017E  2980               	goto	u175_21
  7403     017F  2981               	goto	u175_20
  7404     0180                     u175_21:
  7405     0180  298C               	goto	i1l2125
  7406     0181                     u175_20:
  7407     0181                     i1l2123:
  7408     0181  0825               	movf	i1___ftadd@exp1,w
  7409     0182  00A0               	movwf	??i1___ftadd
  7410     0183  0824               	movf	i1___ftadd@exp2,w
  7411     0184  02A0               	subwf	??i1___ftadd,f
  7412     0185  3019               	movlw	25
  7413     0186  0220               	subwf	??i1___ftadd,w
  7414     0187  1C03               	skipc
  7415     0188  298A               	goto	u176_21
  7416     0189  298B               	goto	u176_20
  7417     018A                     u176_21:
  7418     018A  298C               	goto	i1l2125
  7419     018B                     u176_20:
  7420     018B                     i1l872:
  7421     018B  2A59               	goto	i1l869
  7422     018C                     i1l2125:
  7423     018C  3006               	movlw	6
  7424     018D  00A3               	movwf	i1___ftadd@sign
  7425     018E                     i1l2127:
  7426     018E  1FFA               	btfss	i1___ftadd@f1+2,7
  7427     018F  2991               	goto	u177_21
  7428     0190  2992               	goto	u177_20
  7429     0191                     u177_21:
  7430     0191  2993               	goto	i1l873
  7431     0192                     u177_20:
  7432     0192                     i1l2129:
  7433     0192  17A3               	bsf	i1___ftadd@sign,7
  7434     0193                     i1l873:
  7435     0193  1FFD               	btfss	i1___ftadd@f2+2,7
  7436     0194  2996               	goto	u178_21
  7437     0195  2997               	goto	u178_20
  7438     0196                     u178_21:
  7439     0196  2998               	goto	i1l874
  7440     0197                     u178_20:
  7441     0197                     i1l2131:
  7442     0197  1723               	bsf	i1___ftadd@sign,6
  7443     0198                     i1l874:
  7444     0198  17F9               	bsf	i1___ftadd@f1+1,7
  7445     0199                     i1l2133:
  7446     0199  30FF               	movlw	255
  7447     019A  05F8               	andwf	i1___ftadd@f1,f
  7448     019B  30FF               	movlw	255
  7449     019C  05F9               	andwf	i1___ftadd@f1+1,f
  7450     019D  3000               	movlw	0
  7451     019E  05FA               	andwf	i1___ftadd@f1+2,f
  7452     019F                     i1l2135:
  7453     019F  17FC               	bsf	i1___ftadd@f2+1,7
  7454     01A0  30FF               	movlw	255
  7455     01A1  05FB               	andwf	i1___ftadd@f2,f
  7456     01A2  30FF               	movlw	255
  7457     01A3  05FC               	andwf	i1___ftadd@f2+1,f
  7458     01A4  3000               	movlw	0
  7459     01A5  05FD               	andwf	i1___ftadd@f2+2,f
  7460     01A6  0824               	movf	i1___ftadd@exp2,w
  7461     01A7  0225               	subwf	i1___ftadd@exp1,w
  7462     01A8  1803               	skipnc
  7463     01A9  29AB               	goto	u179_21
  7464     01AA  29AC               	goto	u179_20
  7465     01AB                     u179_21:
  7466     01AB  29D4               	goto	i1l2147
  7467     01AC                     u179_20:
  7468     01AC                     i1l2137:
  7469     01AC  3001               	movlw	1
  7470     01AD                     u180_25:
  7471     01AD  35FB               	lslf	i1___ftadd@f2,f
  7472     01AE  0DFC               	rlf	i1___ftadd@f2+1,f
  7473     01AF  0DFD               	rlf	i1___ftadd@f2+2,f
  7474     01B0  0B89               	decfsz	9,f
  7475     01B1  29AD               	goto	u180_25
  7476     01B2  3001               	movlw	1
  7477     01B3  02A4               	subwf	i1___ftadd@exp2,f
  7478     01B4                     i1l2139:
  7479     01B4  0824               	movf	i1___ftadd@exp2,w
  7480     01B5  0625               	xorwf	i1___ftadd@exp1,w
  7481     01B6  1903               	skipnz
  7482     01B7  29B9               	goto	u181_21
  7483     01B8  29BA               	goto	u181_20
  7484     01B9                     u181_21:
  7485     01B9  29CD               	goto	i1l2145
  7486     01BA                     u181_20:
  7487     01BA                     i1l2141:
  7488     01BA  3001               	movlw	1
  7489     01BB  02A3               	subwf	i1___ftadd@sign,f
  7490     01BC  0823               	movf	i1___ftadd@sign,w
  7491     01BD  3907               	andlw	7
  7492     01BE  1D03               	btfss	3,2
  7493     01BF  29C1               	goto	u182_21
  7494     01C0  29C2               	goto	u182_20
  7495     01C1                     u182_21:
  7496     01C1  29AC               	goto	i1l2137
  7497     01C2                     u182_20:
  7498     01C2  29CD               	goto	i1l2145
  7499     01C3                     i1l2143:
  7500     01C3  3001               	movlw	1
  7501     01C4                     u183_25:
  7502     01C4  36FA               	lsrf	i1___ftadd@f1+2,f
  7503     01C5  0CF9               	rrf	i1___ftadd@f1+1,f
  7504     01C6  0CF8               	rrf	i1___ftadd@f1,f
  7505     01C7  0B89               	decfsz	9,f
  7506     01C8  29C4               	goto	u183_25
  7507     01C9  3001               	movlw	1
  7508     01CA  00A0               	movwf	??i1___ftadd
  7509     01CB  0820               	movf	??i1___ftadd,w
  7510     01CC  07A5               	addwf	i1___ftadd@exp1,f
  7511     01CD                     i1l2145:
  7512     01CD  0825               	movf	i1___ftadd@exp1,w
  7513     01CE  0624               	xorwf	i1___ftadd@exp2,w
  7514     01CF  1D03               	skipz
  7515     01D0  29D2               	goto	u184_21
  7516     01D1  29D3               	goto	u184_20
  7517     01D2                     u184_21:
  7518     01D2  29C3               	goto	i1l2143
  7519     01D3                     u184_20:
  7520     01D3  2A01               	goto	i1l883
  7521     01D4                     i1l2147:
  7522     01D4  0825               	movf	i1___ftadd@exp1,w
  7523     01D5  0224               	subwf	i1___ftadd@exp2,w
  7524     01D6  1803               	skipnc
  7525     01D7  29D9               	goto	u185_21
  7526     01D8  29DA               	goto	u185_20
  7527     01D9                     u185_21:
  7528     01D9  2A01               	goto	i1l883
  7529     01DA                     u185_20:
  7530     01DA                     i1l2149:
  7531     01DA  3001               	movlw	1
  7532     01DB                     u186_25:
  7533     01DB  35F8               	lslf	i1___ftadd@f1,f
  7534     01DC  0DF9               	rlf	i1___ftadd@f1+1,f
  7535     01DD  0DFA               	rlf	i1___ftadd@f1+2,f
  7536     01DE  0B89               	decfsz	9,f
  7537     01DF  29DB               	goto	u186_25
  7538     01E0  3001               	movlw	1
  7539     01E1  02A5               	subwf	i1___ftadd@exp1,f
  7540     01E2                     i1l2151:
  7541     01E2  0824               	movf	i1___ftadd@exp2,w
  7542     01E3  0625               	xorwf	i1___ftadd@exp1,w
  7543     01E4  1903               	skipnz
  7544     01E5  29E7               	goto	u187_21
  7545     01E6  29E8               	goto	u187_20
  7546     01E7                     u187_21:
  7547     01E7  29FB               	goto	i1l2157
  7548     01E8                     u187_20:
  7549     01E8                     i1l2153:
  7550     01E8  3001               	movlw	1
  7551     01E9  02A3               	subwf	i1___ftadd@sign,f
  7552     01EA  0823               	movf	i1___ftadd@sign,w
  7553     01EB  3907               	andlw	7
  7554     01EC  1D03               	btfss	3,2
  7555     01ED  29EF               	goto	u188_21
  7556     01EE  29F0               	goto	u188_20
  7557     01EF                     u188_21:
  7558     01EF  29DA               	goto	i1l2149
  7559     01F0                     u188_20:
  7560     01F0  29FB               	goto	i1l2157
  7561     01F1                     i1l2155:
  7562     01F1  3001               	movlw	1
  7563     01F2                     u189_25:
  7564     01F2  36FD               	lsrf	i1___ftadd@f2+2,f
  7565     01F3  0CFC               	rrf	i1___ftadd@f2+1,f
  7566     01F4  0CFB               	rrf	i1___ftadd@f2,f
  7567     01F5  0B89               	decfsz	9,f
  7568     01F6  29F2               	goto	u189_25
  7569     01F7  3001               	movlw	1
  7570     01F8  00A0               	movwf	??i1___ftadd
  7571     01F9  0820               	movf	??i1___ftadd,w
  7572     01FA  07A4               	addwf	i1___ftadd@exp2,f
  7573     01FB                     i1l2157:
  7574     01FB  0825               	movf	i1___ftadd@exp1,w
  7575     01FC  0624               	xorwf	i1___ftadd@exp2,w
  7576     01FD  1D03               	skipz
  7577     01FE  2A00               	goto	u190_21
  7578     01FF  2A01               	goto	u190_20
  7579     0200                     u190_21:
  7580     0200  29F1               	goto	i1l2155
  7581     0201                     u190_20:
  7582     0201                     i1l883:
  7583     0201  1FA3               	btfss	i1___ftadd@sign,7
  7584     0202  2A04               	goto	u191_21
  7585     0203  2A05               	goto	u191_20
  7586     0204                     u191_21:
  7587     0204  2A15               	goto	i1l2161
  7588     0205                     u191_20:
  7589     0205                     i1l2159:
  7590     0205  30FF               	movlw	255
  7591     0206  06F8               	xorwf	i1___ftadd@f1,f
  7592     0207  30FF               	movlw	255
  7593     0208  06F9               	xorwf	i1___ftadd@f1+1,f
  7594     0209  30FF               	movlw	255
  7595     020A  06FA               	xorwf	i1___ftadd@f1+2,f
  7596     020B  3001               	movlw	1
  7597     020C  07F8               	addwf	i1___ftadd@f1,f
  7598     020D  3000               	movlw	0
  7599     020E  1803               	skipnc
  7600     020F  3001               	movlw	1
  7601     0210  07F9               	addwf	i1___ftadd@f1+1,f
  7602     0211  3000               	movlw	0
  7603     0212  1803               	skipnc
  7604     0213  3001               	movlw	1
  7605     0214  07FA               	addwf	i1___ftadd@f1+2,f
  7606     0215                     i1l2161:
  7607     0215  1F23               	btfss	i1___ftadd@sign,6
  7608     0216  2A18               	goto	u192_21
  7609     0217  2A19               	goto	u192_20
  7610     0218                     u192_21:
  7611     0218  2A29               	goto	i1l2165
  7612     0219                     u192_20:
  7613     0219                     i1l2163:
  7614     0219  30FF               	movlw	255
  7615     021A  06FB               	xorwf	i1___ftadd@f2,f
  7616     021B  30FF               	movlw	255
  7617     021C  06FC               	xorwf	i1___ftadd@f2+1,f
  7618     021D  30FF               	movlw	255
  7619     021E  06FD               	xorwf	i1___ftadd@f2+2,f
  7620     021F  3001               	movlw	1
  7621     0220  07FB               	addwf	i1___ftadd@f2,f
  7622     0221  3000               	movlw	0
  7623     0222  1803               	skipnc
  7624     0223  3001               	movlw	1
  7625     0224  07FC               	addwf	i1___ftadd@f2+1,f
  7626     0225  3000               	movlw	0
  7627     0226  1803               	skipnc
  7628     0227  3001               	movlw	1
  7629     0228  07FD               	addwf	i1___ftadd@f2+2,f
  7630     0229                     i1l2165:
  7631     0229  01A3               	clrf	i1___ftadd@sign
  7632     022A                     i1l2167:
  7633     022A  0878               	movf	i1___ftadd@f1,w
  7634     022B  07FB               	addwf	i1___ftadd@f2,f
  7635     022C  0879               	movf	i1___ftadd@f1+1,w
  7636     022D  3DFC               	addwfc	i1___ftadd@f2+1,f
  7637     022E  087A               	movf	i1___ftadd@f1+2,w
  7638     022F  3DFD               	addwfc	i1___ftadd@f2+2,f
  7639     0230                     i1l2169:
  7640     0230  1FFD               	btfss	i1___ftadd@f2+2,7
  7641     0231  2A33               	goto	u193_21
  7642     0232  2A34               	goto	u193_20
  7643     0233                     u193_21:
  7644     0233  2A46               	goto	i1l2175
  7645     0234                     u193_20:
  7646     0234                     i1l2171:
  7647     0234  30FF               	movlw	255
  7648     0235  06FB               	xorwf	i1___ftadd@f2,f
  7649     0236  30FF               	movlw	255
  7650     0237  06FC               	xorwf	i1___ftadd@f2+1,f
  7651     0238  30FF               	movlw	255
  7652     0239  06FD               	xorwf	i1___ftadd@f2+2,f
  7653     023A  3001               	movlw	1
  7654     023B  07FB               	addwf	i1___ftadd@f2,f
  7655     023C  3000               	movlw	0
  7656     023D  1803               	skipnc
  7657     023E  3001               	movlw	1
  7658     023F  07FC               	addwf	i1___ftadd@f2+1,f
  7659     0240  3000               	movlw	0
  7660     0241  1803               	skipnc
  7661     0242  3001               	movlw	1
  7662     0243  07FD               	addwf	i1___ftadd@f2+2,f
  7663     0244                     i1l2173:
  7664     0244  01A3               	clrf	i1___ftadd@sign
  7665     0245  0AA3               	incf	i1___ftadd@sign,f
  7666     0246                     i1l2175:
  7667     0246  087B               	movf	i1___ftadd@f2,w
  7668     0247  00F0               	movwf	i1___ftpack@arg
  7669     0248  087C               	movf	i1___ftadd@f2+1,w
  7670     0249  00F1               	movwf	i1___ftpack@arg+1
  7671     024A  087D               	movf	i1___ftadd@f2+2,w
  7672     024B  00F2               	movwf	i1___ftpack@arg+2
  7673     024C  0825               	movf	i1___ftadd@exp1,w
  7674     024D  00F3               	movwf	i1___ftpack@exp
  7675     024E  0823               	movf	i1___ftadd@sign,w
  7676     024F  00F4               	movwf	i1___ftpack@sign
  7677     0250  3185  251F  3181   	fcall	i1___ftpack
  7678     0253  0870               	movf	?i1___ftpack,w
  7679     0254  00F8               	movwf	?i1___ftadd
  7680     0255  0871               	movf	?i1___ftpack+1,w
  7681     0256  00F9               	movwf	?i1___ftadd+1
  7682     0257  0872               	movf	?i1___ftpack+2,w
  7683     0258  00FA               	movwf	?i1___ftadd+2
  7684     0259                     i1l869:
  7685     0259  0008               	return
  7686     025A                     __end_ofi1___ftadd:
  7687                           
  7688                           	psect	text45
  7689     051F                     __ptext45:	
  7690 ;; *************** function i1___ftpack *****************
  7691 ;; Defined at:
  7692 ;;		line 62 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/float.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;  arg             3    0[COMMON] unsigned um
  7695 ;;  exp             1    3[COMMON] unsigned char 
  7696 ;;  sign            1    4[COMMON] unsigned char 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  3    0[COMMON] float 
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7708 ;;      Params:         5       0       0       0       0       0
  7709 ;;      Locals:         0       0       0       0       0       0
  7710 ;;      Temps:          3       0       0       0       0       0
  7711 ;;      Totals:         8       0       0       0       0       0
  7712 ;;Total ram usage:        8 bytes
  7713 ;; Hardware stack levels used: 1
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		___altoft
  7718 ;;		i1___ftadd
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722     051F                     i1___ftpack:	
  7723                           ;psect for function i1___ftpack
  7724                           
  7725     051F                     i1l1993:	
  7726                           ;incstack = 0
  7727                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  7728                           
  7729     051F  0873               	movf	i1___ftpack@exp,w
  7730     0520  1903               	btfsc	3,2
  7731     0521  2D23               	goto	u143_21
  7732     0522  2D24               	goto	u143_20
  7733     0523                     u143_21:
  7734     0523  2D2B               	goto	i1l1997
  7735     0524                     u143_20:
  7736     0524                     i1l1995:
  7737     0524  0872               	movf	i1___ftpack@arg+2,w
  7738     0525  0471               	iorwf	i1___ftpack@arg+1,w
  7739     0526  0470               	iorwf	i1___ftpack@arg,w
  7740     0527  1D03               	skipz
  7741     0528  2D2A               	goto	u144_21
  7742     0529  2D2B               	goto	u144_20
  7743     052A                     u144_21:
  7744     052A  2D3C               	goto	i1l2003
  7745     052B                     u144_20:
  7746     052B                     i1l1997:
  7747     052B  3000               	movlw	0
  7748     052C  00F0               	movwf	?i1___ftpack
  7749     052D  3000               	movlw	0
  7750     052E  00F1               	movwf	?i1___ftpack+1
  7751     052F  3000               	movlw	0
  7752     0530  00F2               	movwf	?i1___ftpack+2
  7753     0531  2D92               	goto	i1l848
  7754     0532                     i1l2001:
  7755     0532  3001               	movlw	1
  7756     0533  00F5               	movwf	??i1___ftpack
  7757     0534  0875               	movf	??i1___ftpack,w
  7758     0535  07F3               	addwf	i1___ftpack@exp,f
  7759     0536  3001               	movlw	1
  7760     0537                     u145_25:
  7761     0537  36F2               	lsrf	i1___ftpack@arg+2,f
  7762     0538  0CF1               	rrf	i1___ftpack@arg+1,f
  7763     0539  0CF0               	rrf	i1___ftpack@arg,f
  7764     053A  0B89               	decfsz	9,f
  7765     053B  2D37               	goto	u145_25
  7766     053C                     i1l2003:
  7767     053C  30FE               	movlw	254
  7768     053D  0572               	andwf	i1___ftpack@arg+2,w
  7769     053E  1D03               	btfss	3,2
  7770     053F  2D41               	goto	u146_21
  7771     0540  2D42               	goto	u146_20
  7772     0541                     u146_21:
  7773     0541  2D32               	goto	i1l2001
  7774     0542                     u146_20:
  7775     0542  2D57               	goto	i1l852
  7776     0543                     i1l2005:
  7777     0543  3001               	movlw	1
  7778     0544  00F5               	movwf	??i1___ftpack
  7779     0545  0875               	movf	??i1___ftpack,w
  7780     0546  07F3               	addwf	i1___ftpack@exp,f
  7781     0547                     i1l2007:
  7782     0547  3001               	movlw	1
  7783     0548  07F0               	addwf	i1___ftpack@arg,f
  7784     0549  3000               	movlw	0
  7785     054A  1803               	skipnc
  7786     054B  3001               	movlw	1
  7787     054C  07F1               	addwf	i1___ftpack@arg+1,f
  7788     054D  3000               	movlw	0
  7789     054E  1803               	skipnc
  7790     054F  3001               	movlw	1
  7791     0550  07F2               	addwf	i1___ftpack@arg+2,f
  7792     0551                     i1l2009:
  7793     0551  3001               	movlw	1
  7794     0552                     u147_25:
  7795     0552  36F2               	lsrf	i1___ftpack@arg+2,f
  7796     0553  0CF1               	rrf	i1___ftpack@arg+1,f
  7797     0554  0CF0               	rrf	i1___ftpack@arg,f
  7798     0555  0B89               	decfsz	9,f
  7799     0556  2D52               	goto	u147_25
  7800     0557                     i1l852:
  7801     0557  30FF               	movlw	255
  7802     0558  0572               	andwf	i1___ftpack@arg+2,w
  7803     0559  1D03               	btfss	3,2
  7804     055A  2D5C               	goto	u148_21
  7805     055B  2D5D               	goto	u148_20
  7806     055C                     u148_21:
  7807     055C  2D43               	goto	i1l2005
  7808     055D                     u148_20:
  7809     055D  2D66               	goto	i1l2013
  7810     055E                     i1l2011:
  7811     055E  3001               	movlw	1
  7812     055F  02F3               	subwf	i1___ftpack@exp,f
  7813     0560  3001               	movlw	1
  7814     0561                     u149_25:
  7815     0561  35F0               	lslf	i1___ftpack@arg,f
  7816     0562  0DF1               	rlf	i1___ftpack@arg+1,f
  7817     0563  0DF2               	rlf	i1___ftpack@arg+2,f
  7818     0564  0B89               	decfsz	9,f
  7819     0565  2D61               	goto	u149_25
  7820     0566                     i1l2013:
  7821     0566  1BF1               	btfsc	i1___ftpack@arg+1,7
  7822     0567  2D69               	goto	u150_21
  7823     0568  2D6A               	goto	u150_20
  7824     0569                     u150_21:
  7825     0569  2D70               	goto	i1l859
  7826     056A                     u150_20:
  7827     056A                     i1l2015:
  7828     056A  3002               	movlw	2
  7829     056B  0273               	subwf	i1___ftpack@exp,w
  7830     056C  1803               	skipnc
  7831     056D  2D6F               	goto	u151_21
  7832     056E  2D70               	goto	u151_20
  7833     056F                     u151_21:
  7834     056F  2D5E               	goto	i1l2011
  7835     0570                     u151_20:
  7836     0570                     i1l859:
  7837     0570  1873               	btfsc	i1___ftpack@exp,0
  7838     0571  2D73               	goto	u152_21
  7839     0572  2D74               	goto	u152_20
  7840     0573                     u152_21:
  7841     0573  2D7A               	goto	i1l860
  7842     0574                     u152_20:
  7843     0574                     i1l2017:
  7844     0574  30FF               	movlw	255
  7845     0575  05F0               	andwf	i1___ftpack@arg,f
  7846     0576  307F               	movlw	127
  7847     0577  05F1               	andwf	i1___ftpack@arg+1,f
  7848     0578  30FF               	movlw	255
  7849     0579  05F2               	andwf	i1___ftpack@arg+2,f
  7850     057A                     i1l860:
  7851     057A  1003               	clrc
  7852     057B  0CF3               	rrf	i1___ftpack@exp,f
  7853     057C                     i1l2019:
  7854     057C  0873               	movf	i1___ftpack@exp,w
  7855     057D  00F5               	movwf	??i1___ftpack
  7856     057E  01F6               	clrf	??i1___ftpack+1
  7857     057F  01F7               	clrf	??i1___ftpack+2
  7858     0580  3010               	movlw	16
  7859     0581                     u153_25:
  7860     0581  35F5               	lslf	??i1___ftpack,f
  7861     0582  0DF6               	rlf	??i1___ftpack+1,f
  7862     0583  0DF7               	rlf	??i1___ftpack+2,f
  7863     0584                     u153_20:
  7864     0584  0B89               	decfsz	9,f
  7865     0585  2D81               	goto	u153_25
  7866     0586  0875               	movf	??i1___ftpack,w
  7867     0587  04F0               	iorwf	i1___ftpack@arg,f
  7868     0588  0876               	movf	??i1___ftpack+1,w
  7869     0589  04F1               	iorwf	i1___ftpack@arg+1,f
  7870     058A  0877               	movf	??i1___ftpack+2,w
  7871     058B  04F2               	iorwf	i1___ftpack@arg+2,f
  7872     058C                     i1l2021:
  7873     058C  0874               	movf	i1___ftpack@sign,w
  7874     058D  1903               	btfsc	3,2
  7875     058E  2D90               	goto	u154_21
  7876     058F  2D91               	goto	u154_20
  7877     0590                     u154_21:
  7878     0590  2D92               	goto	i1l861
  7879     0591                     u154_20:
  7880     0591                     i1l2023:
  7881     0591  17F2               	bsf	i1___ftpack@arg+2,7
  7882     0592                     i1l861:
  7883     0592                     i1l848:
  7884     0592  0008               	return
  7885     0593                     __end_ofi1___ftpack:
  7886                           
  7887                           	psect	text46
  7888     0D6A                     __ptext46:	
  7889 ;; *************** function ___ftneg *****************
  7890 ;; Defined at:
  7891 ;;		line 15 in file "/opt/microchip/xc8/v2.46/pic/sources/c90/common/ftneg.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  f1              3    0[COMMON] float 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  3    0[COMMON] float 
  7898 ;; Registers used:
  7899 ;;		wreg
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7905 ;;      Params:         3       0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0
  7908 ;;      Totals:         3       0       0       0       0       0
  7909 ;;Total ram usage:        3 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_positionCalc
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918     0D6A                     ___ftneg:	
  7919                           ;psect for function ___ftneg
  7920                           
  7921     0D6A                     i1l2235:	
  7922                           ;incstack = 0
  7923                           ; Regs used in ___ftneg: [wreg]
  7924                           
  7925     0D6A  0872               	movf	___ftneg@f1+2,w
  7926     0D6B  0471               	iorwf	___ftneg@f1+1,w
  7927     0D6C  0470               	iorwf	___ftneg@f1,w
  7928     0D6D  1903               	skipnz
  7929     0D6E  2D70               	goto	u198_21
  7930     0D6F  2D71               	goto	u198_20
  7931     0D70                     u198_21:
  7932     0D70  2D73               	goto	i1l2239
  7933     0D71                     u198_20:
  7934     0D71                     i1l2237:
  7935     0D71  3080               	movlw	128
  7936     0D72  06F2               	xorwf	___ftneg@f1+2,f
  7937     0D73                     i1l2239:
  7938     0D73                     i1l926:
  7939     0D73  0008               	return
  7940     0D74                     __end_of___ftneg:
  7941                           
  7942                           	psect	text47
  7943     0DFF                     __ptext47:	
  7944 ;; *************** function _Ext_Write *****************
  7945 ;; Defined at:
  7946 ;;		line 202 in file "main.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  addressLow      1    wreg     unsigned char 
  7949 ;;  addressHigh     1    9[COMMON] unsigned char 
  7950 ;;  x               1   10[COMMON] unsigned char 
  7951 ;;  y               1   11[COMMON] unsigned char 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  addressLow      1    0[BANK0 ] unsigned char 
  7954 ;;  data            5    1[BANK0 ] unsigned char [5]
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      void 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7964 ;;      Params:         3       0       0       0       0       0
  7965 ;;      Locals:         0       6       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0
  7967 ;;      Totals:         3       6       0       0       0       0
  7968 ;;Total ram usage:        9 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 2
  7971 ;; This function calls:
  7972 ;;		i1_txSpi
  7973 ;; This function is called by:
  7974 ;;		_positionCalc
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978     0DFF                     _Ext_Write:	
  7979                           ;psect for function _Ext_Write
  7980                           
  7981                           
  7982                           ;incstack = 0
  7983                           ; Regs used in _Ext_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7984                           ;Ext_Write@addressLow stored from wreg
  7985     0DFF  0020               	movlb	0	; select bank0
  7986     0E00  00A0               	movwf	Ext_Write@addressLow
  7987     0E01                     i1l2841:
  7988                           
  7989                           ;main.c: 203: uint8_t data[5];;main.c: 204: data[0] = 0x02;
  7990     0E01  3002               	movlw	2
  7991     0E02  00A1               	movwf	Ext_Write@data
  7992                           
  7993                           ;main.c: 205: data[1] = addressLow;
  7994     0E03  0820               	movf	Ext_Write@addressLow,w
  7995     0E04  00A2               	movwf	Ext_Write@data+1
  7996                           
  7997                           ;main.c: 206: data[2] = addressHigh;
  7998     0E05  0879               	movf	Ext_Write@addressHigh,w
  7999     0E06  00A3               	movwf	Ext_Write@data+2
  8000                           
  8001                           ;main.c: 207: data[3] = x;
  8002     0E07  087A               	movf	Ext_Write@x,w
  8003     0E08  00A4               	movwf	Ext_Write@data+3
  8004                           
  8005                           ;main.c: 208: data[4] = y;
  8006     0E09  087B               	movf	Ext_Write@y,w
  8007     0E0A  00A5               	movwf	Ext_Write@data+4
  8008     0E0B                     i1l2843:
  8009                           
  8010                           ;main.c: 209: txSpi(spiCS2, data, 5);
  8011     0E0B  3021               	movlw	(low (Ext_Write@data| 0))& (0+255)
  8012     0E0C  00F5               	movwf	i1txSpi@data
  8013     0E0D  3005               	movlw	5
  8014     0E0E  00F6               	movwf	i1txSpi@dataSize
  8015     0E0F  3000               	movlw	0
  8016     0E10  00F7               	movwf	i1txSpi@dataSize+1
  8017     0E11  3001               	movlw	1
  8018     0E12  318F  272B  318D   	fcall	i1_txSpi
  8019     0E15                     i1l467:
  8020     0E15  0008               	return
  8021     0E16                     __end_of_Ext_Write:
  8022                           
  8023                           	psect	text48
  8024     0F2B                     __ptext48:	
  8025 ;; *************** function i1_txSpi *****************
  8026 ;; Defined at:
  8027 ;;		line 129 in file "main.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  cs              1    wreg     enum E2499
  8030 ;;  data            1    5[COMMON] PTR unsigned char 
  8031 ;;		 -> i1matrixClear@data(4), Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), 
  8032 ;;		 -> matrixClear@data(4), 
  8033 ;;  dataSize        2    6[COMMON] unsigned int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  cs              1    8[COMMON] enum E2499
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8045 ;;      Params:         3       0       0       0       0       0
  8046 ;;      Locals:         1       0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0
  8048 ;;      Totals:         4       0       0       0       0       0
  8049 ;;Total ram usage:        4 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 1
  8052 ;; This function calls:
  8053 ;;		i1_SPI1_ExchangeBlock
  8054 ;; This function is called by:
  8055 ;;		_positionUpdate
  8056 ;;		_Ext_Write
  8057 ;;		i1_matrixClear
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061     0F2B                     i1_txSpi:	
  8062                           ;psect for function i1_txSpi
  8063                           
  8064                           
  8065                           ;incstack = 0
  8066                           ; Regs used in i1_txSpi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8067                           ;i1txSpi@cs stored from wreg
  8068     0F2B  00F8               	movwf	i1txSpi@cs
  8069     0F2C                     i1l2823:
  8070                           
  8071                           ;main.c: 130: switch(cs){
  8072     0F2C  2F33               	goto	i1l2827
  8073     0F2D                     i1l412:	
  8074                           ;main.c: 132: do { LATBbits.LATB3 = 0; } while(0);
  8075                           
  8076     0F2D  0022               	movlb	2	; select bank2
  8077     0F2E  118D               	bcf	13,3	;volatile
  8078     0F2F  2F3B               	goto	i1l2829
  8079     0F30                     i1l416:	
  8080                           ;main.c: 135: do { LATAbits.LATA4 = 0; } while(0);
  8081                           
  8082     0F30  0022               	movlb	2	; select bank2
  8083     0F31  120C               	bcf	12,4	;volatile
  8084     0F32  2F3B               	goto	i1l2829
  8085     0F33                     i1l2827:
  8086     0F33  0878               	movf	i1txSpi@cs,w
  8087                           
  8088                           ; Switch size 1, requested type "simple"
  8089                           ; Number of cases is 2, Range of values is 0 to 1
  8090                           ; switch strategies available:
  8091                           ; Name         Instructions Cycles
  8092                           ; simple_byte            7     4 (average)
  8093                           ; direct_byte           10     6 (fixed)
  8094                           ; jumptable            260     6 (fixed)
  8095                           ;	Chosen strategy is simple_byte
  8096     0F34  3A00               	xorlw	0	; case 0
  8097     0F35  1903               	skipnz
  8098     0F36  2F2D               	goto	i1l412
  8099     0F37  3A01               	xorlw	1	; case 1
  8100     0F38  1903               	skipnz
  8101     0F39  2F30               	goto	i1l416
  8102     0F3A  2F3B               	goto	i1l2829
  8103     0F3B                     i1l2829:
  8104                           
  8105                           ;main.c: 138: SPI1_ExchangeBlock(data,dataSize);
  8106     0F3B  0877               	movf	i1txSpi@dataSize+1,w
  8107     0F3C  00F1               	movwf	i1SPI1_ExchangeBlock@blockSize+1
  8108     0F3D  0876               	movf	i1txSpi@dataSize,w
  8109     0F3E  00F0               	movwf	i1SPI1_ExchangeBlock@blockSize
  8110     0F3F  0875               	movf	i1txSpi@data,w
  8111     0F40  318F  2704  318F   	fcall	i1_SPI1_ExchangeBlock
  8112                           
  8113                           ;main.c: 139: switch(cs){
  8114     0F43  2F4A               	goto	i1l2833
  8115     0F44                     i1l420:	
  8116                           ;main.c: 141: do { LATBbits.LATB3 = 1; } while(0);
  8117                           
  8118     0F44  0022               	movlb	2	; select bank2
  8119     0F45  158D               	bsf	13,3	;volatile
  8120     0F46  2F52               	goto	i1l426
  8121     0F47                     i1l424:	
  8122                           ;main.c: 144: do { LATAbits.LATA4 = 1; } while(0);
  8123                           
  8124     0F47  0022               	movlb	2	; select bank2
  8125     0F48  160C               	bsf	12,4	;volatile
  8126     0F49  2F52               	goto	i1l426
  8127     0F4A                     i1l2833:
  8128     0F4A  0878               	movf	i1txSpi@cs,w
  8129                           
  8130                           ; Switch size 1, requested type "simple"
  8131                           ; Number of cases is 2, Range of values is 0 to 1
  8132                           ; switch strategies available:
  8133                           ; Name         Instructions Cycles
  8134                           ; simple_byte            7     4 (average)
  8135                           ; direct_byte           10     6 (fixed)
  8136                           ; jumptable            260     6 (fixed)
  8137                           ;	Chosen strategy is simple_byte
  8138     0F4B  3A00               	xorlw	0	; case 0
  8139     0F4C  1903               	skipnz
  8140     0F4D  2F44               	goto	i1l420
  8141     0F4E  3A01               	xorlw	1	; case 1
  8142     0F4F  1903               	skipnz
  8143     0F50  2F47               	goto	i1l424
  8144     0F51  2F52               	goto	i1l426
  8145     0F52                     i1l426:
  8146     0F52  0008               	return
  8147     0F53                     __end_ofi1_txSpi:
  8148                           
  8149                           	psect	text49
  8150     0F04                     __ptext49:	
  8151 ;; *************** function i1_SPI1_ExchangeBlock *****************
  8152 ;; Defined at:
  8153 ;;		line 100 in file "mcc_generated_files/spi1.c"
  8154 ;; Parameters:    Size  Location     Type
  8155 ;;  block           1    wreg     PTR void 
  8156 ;;		 -> i1matrixClear@data(4), Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), 
  8157 ;;		 -> matrixClear@data(4), 
  8158 ;;  blockSize       2    0[COMMON] unsigned int 
  8159 ;; Auto vars:     Size  Location     Type
  8160 ;;  block           1    3[COMMON] PTR void 
  8161 ;;		 -> i1matrixClear@data(4), Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), 
  8162 ;;		 -> matrixClear@data(4), 
  8163 ;;  data            1    4[COMMON] PTR unsigned char 
  8164 ;;		 -> i1matrixClear@data(4), Ext_Write@data(5), positionUpdate@data(4), initMatrix@data(4), 
  8165 ;;		 -> matrixClear@data(4), 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8175 ;;      Params:         2       0       0       0       0       0
  8176 ;;      Locals:         2       0       0       0       0       0
  8177 ;;      Temps:          1       0       0       0       0       0
  8178 ;;      Totals:         5       0       0       0       0       0
  8179 ;;Total ram usage:        5 bytes
  8180 ;; Hardware stack levels used: 1
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		i1_txSpi
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188     0F04                     i1_SPI1_ExchangeBlock:	
  8189                           ;psect for function i1_SPI1_ExchangeBlock
  8190                           
  8191                           
  8192                           ;incstack = 0
  8193                           ; Regs used in i1_SPI1_ExchangeBlock: [wreg+fsr1l+fsr1h+status,2+status,0]
  8194                           ;i1SPI1_ExchangeBlock@block stored from wreg
  8195     0F04  00F3               	movwf	i1SPI1_ExchangeBlock@block
  8196     0F05                     i1l2813:
  8197                           
  8198                           ;spi1.c: 102: uint8_t *data = block;
  8199     0F05  0873               	movf	i1SPI1_ExchangeBlock@block,w
  8200     0F06  00F4               	movwf	i1SPI1_ExchangeBlock@data
  8201                           
  8202                           ;spi1.c: 103: while(blockSize--)
  8203     0F07  2F1E               	goto	i1l2821
  8204     0F08                     i1l2815:
  8205                           
  8206                           ;spi1.c: 104: {;spi1.c: 105: SSP1BUF = *data;
  8207     0F08  0874               	movf	i1SPI1_ExchangeBlock@data,w
  8208     0F09  0086               	movwf	6
  8209     0F0A  0187               	clrf	7
  8210     0F0B  0801               	movf	1,w
  8211     0F0C  0024               	movlb	4	; select bank4
  8212     0F0D  0091               	movwf	17	;volatile
  8213     0F0E                     i1l39:	
  8214                           ;spi1.c: 106: while(!PIR1bits.SSP1IF);
  8215                           
  8216     0F0E  0020               	movlb	0	; select bank0
  8217     0F0F  1D91               	btfss	17,3	;volatile
  8218     0F10  2F12               	goto	u283_21
  8219     0F11  2F13               	goto	u283_20
  8220     0F12                     u283_21:
  8221     0F12  2F0E               	goto	i1l39
  8222     0F13                     u283_20:
  8223     0F13                     i1l41:
  8224                           
  8225                           ;spi1.c: 107: PIR1bits.SSP1IF = 0;
  8226     0F13  1191               	bcf	17,3	;volatile
  8227     0F14                     i1l2817:
  8228                           
  8229                           ;spi1.c: 108: *data++ = SSP1BUF;
  8230     0F14  0874               	movf	i1SPI1_ExchangeBlock@data,w
  8231     0F15  0086               	movwf	6
  8232     0F16  0187               	clrf	7
  8233     0F17  0024               	movlb	4	; select bank4
  8234     0F18  0811               	movf	17,w	;volatile
  8235     0F19  0081               	movwf	1
  8236     0F1A                     i1l2819:
  8237     0F1A  3001               	movlw	1
  8238     0F1B  00F2               	movwf	??i1_SPI1_ExchangeBlock
  8239     0F1C  0872               	movf	??i1_SPI1_ExchangeBlock,w
  8240     0F1D  07F4               	addwf	i1SPI1_ExchangeBlock@data,f
  8241     0F1E                     i1l2821:
  8242     0F1E  3001               	movlw	1
  8243     0F1F  02F0               	subwf	i1SPI1_ExchangeBlock@blockSize,f
  8244     0F20  3000               	movlw	0
  8245     0F21  3BF1               	subwfb	i1SPI1_ExchangeBlock@blockSize+1,f
  8246     0F22  0A70               	incf	i1SPI1_ExchangeBlock@blockSize,w
  8247     0F23  1D03               	skipz
  8248     0F24  2F29               	goto	u284_21
  8249     0F25  0A71               	incf	i1SPI1_ExchangeBlock@blockSize+1,w
  8250     0F26  1D03               	btfss	3,2
  8251     0F27  2F29               	goto	u284_21
  8252     0F28  2F2A               	goto	u284_20
  8253     0F29                     u284_21:
  8254     0F29  2F08               	goto	i1l2815
  8255     0F2A                     u284_20:
  8256     0F2A                     i1l43:
  8257     0F2A  0008               	return
  8258     0F2B                     __end_ofi1_SPI1_ExchangeBlock:
  8259     007E                     btemp	set	126	;btemp
  8260     007E                     int$flags	set	126
  8261     007E                     wtemp0	set	126
  8262                           
  8263                           	psect	config
  8264                           
  8265                           ;Config register CONFIG1 @ 0x8007
  8266                           ;	Oscillator Selection
  8267                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8268                           ;	Watchdog Timer Enable
  8269                           ;	WDTE = OFF, WDT disabled
  8270                           ;	Power-up Timer Enable
  8271                           ;	PWRTE = OFF, PWRT disabled
  8272                           ;	MCLR Pin Function Select
  8273                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8274                           ;	Flash Program Memory Code Protection
  8275                           ;	CP = OFF, Program memory code protection is disabled
  8276                           ;	Data Memory Code Protection
  8277                           ;	CPD = OFF, Data memory code protection is disabled
  8278                           ;	Brown-out Reset Enable
  8279                           ;	BOREN = ON, Brown-out Reset enabled
  8280                           ;	Clock Out Enable
  8281                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8282                           ;	Internal/External Switchover
  8283                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8284                           ;	Fail-Safe Clock Monitor Enable
  8285                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8286     8007                     	org	32775
  8287     8007  3FE4               	dw	16356
  8288                           
  8289                           ;Config register CONFIG2 @ 0x8008
  8290                           ;	Flash Memory Self-Write Protection
  8291                           ;	WRT = OFF, Write protection off
  8292                           ;	PLL Enable
  8293                           ;	PLLEN = OFF, 4x PLL disabled
  8294                           ;	Stack Overflow/Underflow Reset Enable
  8295                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8296                           ;	Brown-out Reset Voltage Selection
  8297                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8298                           ;	In-Circuit Debugger Mode
  8299                           ;	DEBUG = 0x1, unprogrammed default
  8300                           ;	Low-Voltage Programming Enable
  8301                           ;	LVP = ON, Low-voltage programming enabled
  8302     8008                     	org	32776
  8303     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         35
    Persistent  41
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      62
    BANK1            80     42      55
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    rxSpi@block	PTR void  size(1) Largest target is 4
		 -> Ext_Read@data(BANK1[4]), 

    SPI1_ExchangeBlock@block	PTR void  size(1) Largest target is 5
		 -> Ext_Write@data(BANK0[5]), initMatrix@data(BANK1[4]), matrixClear@data(BANK1[4]), positionUpdate@data(BANK0[4]), 

    SPI1_ExchangeBlock@data	PTR unsigned char  size(1) Largest target is 5
		 -> Ext_Write@data(BANK0[5]), initMatrix@data(BANK1[4]), matrixClear@data(BANK1[4]), positionUpdate@data(BANK0[4]), 

    SPI1_ReadBlock@block	PTR void  size(1) Largest target is 4
		 -> Ext_Read@data(BANK1[4]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(1) Largest target is 4
		 -> Ext_Read@data(BANK1[4]), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> decrementaT(), TMR2_DefaultInterruptHandler(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> decrementaT(), TMR2_DefaultInterruptHandler(), 

    txSpi@data	PTR unsigned char  size(1) Largest target is 5
		 -> Ext_Write@data(BANK0[5]), initMatrix@data(BANK1[4]), matrixClear@data(BANK1[4]), positionUpdate@data(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _executaTudo->i1_matrixClear
    i1_matrixClear->i1_txSpi
    _positionUpdate->i1_txSpi
    _positionCalc->i1___ftadd
    _round->i1___ftadd
    _trunc->___altoft
    ___altoft->___fttol
    ___ftsub->i1___ftadd
    i1___ftadd->i1___ftpack
    _Ext_Write->i1_txSpi
    i1_txSpi->i1_SPI1_ExchangeBlock

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR2_ISR->_decrementaT
    _executaTudo->_positionCalc
    _positionCalc->_round
    _round->___ftsub
    _trunc->___altoft
    ___ftsub->_trunc

Critical Paths under _main in BANK1

    _main->___ftadd
    _initMatrix->_matrixClear
    _matrixClear->_txSpi
    _txSpi->_SPI1_ExchangeBlock
    _analisaRx->___ftadd
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _Ext_Read->_rxSpi
    _rxSpi->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   25989
                                             39 BANK1      3     3      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                          _SPI1_Open
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                            ___ftadd
                            ___ftmul
                           ___lwtoft
                          _analisaRx
                         _initMatrix
 ---------------------------------------------------------------------------------
 (1) _initMatrix                                           9     9      0    2455
                                             14 BANK1      9     9      0
                        _matrixClear
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _matrixClear                                          5     5      0    1133
                                              9 BANK1      5     5      0
                              _txSpi
 ---------------------------------------------------------------------------------
 (2) _txSpi                                                4     1      3     840
                                              5 BANK1      4     1      3
                 _SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeBlock                                   5     3      2     240
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _analisaRx                                            0     0      0   11813
                           _Ext_Read
                            ___ftadd
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2886
                                              8 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3497
                                             11 BANK1     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4486
                                             27 BANK1     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2701
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _Ext_Read                                             6     5      1     944
                                             11 BANK1      6     5      1
                       _EUSART_Write
                              _rxSpi
 ---------------------------------------------------------------------------------
 (3) _rxSpi                                                5     3      2     518
                                              6 BANK1      5     3      2
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (4) _SPI1_ReadBlock                                       5     3      2     240
                                              1 BANK1      5     3      2
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI1_ExchangeByte                                    1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     509
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     185
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     185
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     324
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            4     4      0     124
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    9613
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0    9613
                                NULL *
       _TMR2_DefaultInterruptHandler *
                        _decrementaT *
 ---------------------------------------------------------------------------------
 (8) _decrementaT                                          2     2      0    9613
                                             29 BANK0      2     2      0
                        _executaTudo
 ---------------------------------------------------------------------------------
 (9) _executaTudo                                          0     0      0    9613
                       _positionCalc
                     _positionUpdate
                      i1_matrixClear
 ---------------------------------------------------------------------------------
 (10) i1_matrixClear                                       5     5      0     783
                                              9 COMMON     5     5      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (10) _positionUpdate                                      9     8      1    1073
                                              9 COMMON     4     3      1
                                              0 BANK0      5     5      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (10) _positionCalc                                        3     3      0    7757
                                             26 BANK0      3     3      0
                          _Ext_Write
                            ___ftneg
                            ___fttol
                              _round
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (11) _round                                               6     3      3    4733
                                             20 BANK0      6     3      3
                            ___ftsub
                              _trunc
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (12) _trunc                                               8     5      3    1596
                                              6 BANK0      8     5      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (13) _frexp                                               6     2      4     336
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) ___fttol                                            13     9      4     380
                                              0 COMMON    13     9      4
 ---------------------------------------------------------------------------------
 (13) ___altoft                                            7     3      4     589
                                             13 COMMON     1     1      0
                                              0 BANK0      6     2      4
                            ___fttol (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (12) ___ftsub                                             6     0      6    1578
                                             14 BANK0      6     0      6
                              _trunc (ARG)
                          i1___ftadd
 ---------------------------------------------------------------------------------
 (11) i1___ftadd                                          12     6      6    1383
                                              8 COMMON     6     0      6
                                              0 BANK0      6     6      0
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (12) i1___ftpack                                          8     3      5     387
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (11) ___ftneg                                             3     0      3     173
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (11) _Ext_Write                                           9     6      3    1054
                                              9 COMMON     3     0      3
                                              0 BANK0      6     6      0
                            i1_txSpi
 ---------------------------------------------------------------------------------
 (11) i1_txSpi                                             4     1      3     499
                                              5 COMMON     4     1      3
               i1_SPI1_ExchangeBlock
 ---------------------------------------------------------------------------------
 (12) i1_SPI1_ExchangeBlock                                5     3      2     165
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _SPI1_Open
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR2_SetInterruptHandler
   ___ftadd
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
   ___ftmul
   ___lwtoft
   _analisaRx
     _Ext_Read
       _EUSART_Write
       _rxSpi
         _SPI1_ReadBlock
           _SPI1_ExchangeByte
     ___ftadd
     ___ftmul
     ___lwtoft
   _initMatrix
     _matrixClear
       _txSpi
         _SPI1_ExchangeBlock
     _txSpi

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *
     _decrementaT *
       _executaTudo
         _positionCalc
           _Ext_Write
             i1_txSpi
               i1_SPI1_ExchangeBlock
           ___ftneg
           ___fttol
           _round
             ___ftsub
               _trunc (ARG)
                 ___altoft
                   ___fttol (ARG)
                   i1___ftpack (ARG)
                 ___fttol
                 _frexp
               i1___ftadd (ARG)
                 i1___ftpack
             _trunc
             i1___ftadd
           i1___ftadd
         _positionUpdate
           i1_txSpi
         i1_matrixClear
           i1_txSpi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      83       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      3E       6       77.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2A      37       8       68.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      83      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Aug 19 17:56:10 2024

                            _SPI1_ExchangeByte 0DA6                                   ___altoft@exp 0024  
             __end_of_TMR2_SetInterruptHandler 0D6A                                              _T 005D  
                                            _a 0056                                              _x 005C  
                                            _y 005B                             _SPI1_ExchangeBlock 0F7D  
                                   i1___ftpack 051F                                  ___altoft@sign 0025  
                                           l21 0D7F                                             l31 0DAB  
                                           l25 06B5                                             l33 0DB0  
                                           l41 0F8D                                             l34 0DB3  
                                           l43 0FA6                                             l55 0E9C  
                                           l39 0F88                                             l92 0D33  
                                           l86 0DFE                                             l89 0D45  
                           ?_SPI1_ExchangeByte 0070                                   ___ftadd@exp1 00C6  
                                 ___ftadd@exp2 00C5                         __end_of_positionUpdate 0743  
                                 ___ftadd@sign 00C4                                            l202 0D57  
                                          l205 0D60                                            l117 0E2D  
                                          l208 0D4E                                            l313 0D69  
                                          l171 0D38                                            l163 0F03  
                                          l227 0D8B                                            l180 0DB4  
                                          l420 0FC2                                            l412 0FAA  
                                          l190 0D97                                            l431 0FD5  
                                          l184 0DC2                                            l424 0FC5  
                                          l416 0FAD                                            l426 0FD1  
                                          l291 0DD4                                            l187 0D8E  
                                          l443 0FF3                                            l435 0FD8  
                                          l445 0FFF                                            l453 0605  
                                          l470 0EDE                                            l439 0FF0  
                                          l383 0E7D                                            l391 065D  
                                          l915 030C                                            l860 0506  
                                          l852 04E3                                            l861 051E  
                                          l848 051E                                            l872 0075  
                                          l873 007D                                   i1___ftadd@f1 0078  
                                          l874 0082                                   i1___ftadd@f2 007B  
                                          l859 04FC                                            l883 00EB  
                                          l869 0144                                            _PR2 001B  
                          ?_SPI1_ExchangeBlock 00A0                                _timer1ReloadVal 004A  
               ?_EUSART_SetFramingErrorHandler 00A0                            ??_SPI1_ExchangeByte 00A0  
                              _TMR2_Initialize 0DC3                                            wreg 0009  
                      SPI1_ExchangeBlock@block 00A3                                   ?_EUSART_Read 0070  
                                         l1063 0DE8                                           l3001 04D3  
                                         l3011 0500                                           l3003 04DD  
                                         l3021 0D7B                                           l3101 0EC6  
                                         l3013 0508                                           l3005 04EA  
                                         l3031 0E1E                                           l3023 0D7D  
                                         l3111 0EDA                                           l3103 0EC7  
                                         l3015 0518                                           l3007 04F2  
                                         l3041 0D3F                                           l3033 0E21  
                                         l3025 0E16                                           l3105 0EC8  
                                         l3017 051D                                           l3009 04F6  
                                         l3121 002F                                           l3043 0D42  
                                         l3035 0E26                                           l3027 0E19  
                                         l3019 0D74                                           l3051 0DC6  
                                         l3107 0ED0                                           l3131 0060  
                                         l3123 0049                                           l3211 02B6  
                                         l3203 0287                                           l3045 0D43  
                                         l3037 0E28                                           l3029 0E1C  
                                         l3061 0D80                                           l3053 0DC7  
                                         l3109 0ED5                                           l3141 007C  
                                         l3133 0065                                           l3125 004F  
                                         l3221 02CE                                           l3213 02BC  
                                         l3205 02AE                                           l3301 0629  
                                         l3071 0EE8                                           l3039 0E2B  
                                         l3063 0D84                                           l3055 0DC8  
                                         l3047 0D30                                           l3151 009E  
                                         l3143 0081                                           l3135 006B  
                                         l3127 0059                                           l3231 02E6  
                                         l3223 02D4                                           l3215 02BE  
                                         l3207 02AF                                           l3311 0646  
                                         l3303 062C                                           l3073 0EE9  
                                         l3065 0D85                                           l3057 0DCA  
                                         l3049 0DC3                                           l3161 00C4  
                                         l3153 00A4                                           l3145 0083  
                                         l3137 0076                                           l3233 02EC  
                                         l3225 02DA                                           l3217 02C2  
                                         l3209 02B0                                           l3241 0DD5  
                                         l3321 059E                                           l3081 0E62  
                                         l3313 0652                                           l3305 0632  
                                         l3251 068A                                           l3075 0EF1  
                                         l3067 0D89                                           l3059 0DD1  
                                         l3171 00EF                                           l3163 00CC  
                                         l3155 00AD                                           l3147 0089  
                                         l3139 0078                                           l3235 02F2  
                                         l3227 02DC                                           l3219 02C8  
                                         l3331 05E4                                           l3323 05A0  
                                         l3091 0E68                                           l3315 0657  
                                         l3307 0635                                           l3261 0D34  
                                         l3253 069C                                           l3245 0660  
                                         l3077 0EF9                                           l3069 0EDF  
                                         l3181 011A                                           l3173 00FF  
                                         l3165 00D2                                           l3157 00B7  
                                         l3149 0096                                           l3237 02F8  
                                         l3229 02E0                                           l3341 05FB  
                                         l3333 05E9                                           l3325 05DA  
                                         l3317 0593                                           l3093 0E6B  
                                         l3309 063F                                           l3271 0DBF  
                                         l3255 06B3                                           l3247 0665  
                                         l3079 0F01                                           l3183 011E  
                                         l3175 0103                                           l3167 00DB  
                                         l3159 00BE                                           l3191 025A  
                                         l3335 05EB                                           l3327 05DD  
                                         l3319 059A                                           l3095 0E75  
                                         l3087 0E65                                           l3273 0DC1  
                                         l3265 0DB4                                           l3249 0689  
                                         l3185 012E                                           l3177 0113  
                                         l3169 00E5                                           l3193 026A  
                                         l3337 05EE                                           l3329 05E1  
                                         l3097 0E78                                           l3089 0E67  
                                         l3361 03A5                                           l3267 0DB9  
                                         l3259 0DE9                                           l3099 0EC0  
                                         l3187 0130                                           l3179 0114  
                                         l3339 05F6                                           l3283 0606  
                                         l3371 03E9                                           l3363 03A7  
                                         l3269 0DBA                                           l3197 0271  
                                         l3293 060D                                           l3285 0608  
                                         l3381 03FE                                           l3373 03EE  
                                         l3365 03AA                                           l3199 0280  
                                         l3287 060B                                           l3391 0414  
                                         l3383 0402                                           l3375 03F0  
                                         l3367 03E3                                           l3359 03A0  
                                         l3393 041C                                           l3385 0405  
                                         l3377 03FB                                           l3369 03E6  
                                         l2835 0DA8                                           l2851 0F95  
                                         l3299 060E                                           l3395 0421  
                                         l3387 0412                                           l3379 03FD  
                                         l2941 0D4F                                           l2837 0DB1  
                                         l2861 0E90                                           l2853 0F9A  
                                         l2845 0F7F                                           l3397 0424  
                                         l3389 0413                                           l2943 0D58  
                                         l2951 0D61                                           l2855 0E80  
                                         l2847 0F82                                           l2945 0D46  
                                         l2857 0E83                                           l2849 0F8E  
                                         l2953 0FA9                                           l2947 0D8E  
                                         l2859 0E8B                                           l2971 0FE3  
                                         l2963 0FC8                                           l2949 0D93  
                                         l2965 0FD4                                           l2957 0FB0  
                                         l2975 0FF6                                           l2991 04B7  
                                         l2959 0FB8                                           l2969 0FDB  
                                         l2995 04BE                                           l2987 04AA  
                                         l2997 04C8                                           l2989 04B0  
                                         l2999 04CF                                           _LATA 010C  
                                         u3110 04F6                                           _LATB 010D  
                                         u3111 04F5                                           u3120 04FC  
                                         u3040 04B0                                           u3200 0059  
                                         u3121 04FB                                           u3105 04ED  
                                         u3041 04AF                                           u3201 0058  
                                         u3130 0500                                           u3050 04B7  
                                         u3210 0065                                           u3131 04FF  
                                         u3051 04B6                                           u3211 0064  
                                         u3140 0510                                           u3220 006B  
                                         u3221 006A                                           u3150 051D  
                                         u3070 04CE                                           u3310 00BD  
                                         u3230 0075                                           u3151 051C  
                                         u3071 04CD                                           u3311 00BC  
                                         u3231 0074                                           u3400 011E  
                                         u3320 00C4                                           u3240 007C  
                                         u3160 0E7D                                           u3145 050D  
                                         u3065 04C3                                           u3401 011D  
                                         u3321 00C3                                           u3305 00AE  
                                         u3241 007B                                           u3161 0E7C  
                                         u3090 04E9                                           u3250 0081  
                                         u3410 026A                                           u3091 04E8  
                                         u3251 0080                                           u3411 0269  
                                         u3340 00D2                                           u3260 0096  
                                         u3180 0049                                           u3420 0280  
                                         u3085 04DE                                           u3341 00D1  
                                         u3261 0095                                           u3181 0048  
                                         u3421 027F                                           u3350 00DA  
                                         u3190 004F                                           u3430 0296  
                                         u3351 00D9                                           u3335 00C5  
                                         u3191 004E                                           u3280 00A4  
                                         u3520 02F8                                           u3440 02A4  
                                         u3600 059A                                           u3281 00A3  
                                         u3521 02F7                                           u3505 02E7  
                                         u3601 0599                                           u3530 0665  
                                         u3370 00EB                                           u3290 00AC  
                                         u3450 02C2                                           u3610 05E9  
                                         u3531 0664                                           u3371 00EA  
                                         u3291 00AB                                           u3275 0097  
                                         u3515 02ED                                           u3451 02C1  
                                         u3435 0293                                           u3611 05E8  
                                         u3540 0DB9                                           u3380 00EF  
                                         u3620 0605                                           u3541 0DB8  
                                         u3381 00EE                                           u3365 00DC  
                                         u3445 02A1                                           u3621 0604  
                                         u3550 0DBF                                           u3390 0103  
                                         u3551 0DBE                                           u3391 0102  
                                         u3480 02DA                                           u3481 02D9  
                                         u3465 02C9                                           u3625 0601  
                                         u2850 0DB0                                           u3490 02E0  
                                         u3570 0632                                           u2851 0DAF  
                                         u3491 02DF                                           u3475 02CF  
                                         u3707 064C                                           u3571 0631  
                                         u2860 0F8D                                           u3580 0646  
                                         u2861 0F8C                                           u3581 0645  
                                         u2870 0FA6                                           u3590 065D  
                                         u3670 03EE                                           u2871 0FA5  
                                         u3591 065C                                           u3671 03ED  
                                         u2880 0E9C                                           u3680 041C  
                                         i1l41 0F13                                           u2881 0E9B  
                                         u3681 041B                                           i1l43 0F2A  
                                         u2990 0D93                                           i1l39 0F0E  
                                         u2991 0D92                                           u3697 040B  
                                         _TMR1 0016                                           _TMR2 001A  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 03A0                                           _incx 00D6  
                                 ___ftpack@arg 00A0                                   ___ftpack@exp 00A3  
                                         _show 0052                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                         ??_SPI1_ExchangeBlock 00A2                      i1SPI1_ExchangeBlock@block 0073  
                                         start 0019                      __end_of_SPI1_ExchangeByte 0DB4  
                              __end_ofi1_txSpi 0F53                                   ___ftmul@cntr 00B9  
                                 ___ftmul@sign 00BA                                   ___fttol@exp1 007C  
                                 ___fttol@lval 0078                                   ?_executaTudo 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0D46  
                                   Ext_Write@x 007A                                     Ext_Write@y 007B  
                                        ?_main 0070                                __end_of___ftadd 0145  
             SPI1_Open@spi1UniqueConfiguration 00A3                                __end_of___ftneg 0D74  
                              ?_positionUpdate 0079                                __end_of___ftmul 030D  
                                        _T1CON 0018                                __end_of___ftsub 0EBE  
                              __end_of___fttol 04AA                                          _T2CON 001C  
                                        i1l310 0DA5                                          i1l401 039F  
                                        i1l420 0F44                                          i1l412 0F2D  
                                        i1l316 0003                                          i1l270 0017  
                                        i1l407 0742                                          i1l424 0F47  
                                        i1l416 0F30                                          i1l426 0F52  
                                        i1l462 0F6D                                          i1l383 0E47  
                                        i1l464 0F7C                                          i1l467 0E15  
                                        i1l459 0F6A                                          i1l476 0E61  
                                        i1l743 07C3                                          i1l860 057A  
                                        i1l852 0557                                          i1l932 0EBD  
                                        i1l861 0592                                          i1l926 0D73  
                                        i1l943 048C                                          i1l848 0592  
                                        i1l872 018B                                          i1l936 04A9  
                                        i1l873 0193                                          i1l874 0198  
                                        i1l859 0570                                          i1l883 0201  
                                        i1l869 0259                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                 i1___ftadd@exp1 0025  
                               i1___ftadd@exp2 0024                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                               i1___ftadd@sign 0023                                          _TXSTA 019E  
                                 ?_matrixClear 0070                               __end_of_TMR2_ISR 0DA6  
                               _WDT_Initialize 0D30                                          _frexp 07C4  
                                        _errno 00D4                                  ___ftpack@sign 00A4  
                                        _rxSpi 0FD2                                          _txSpi 0FA7  
                                        _round 06B6                                          _trunc 0743  
                      __end_of_TMR1_Initialize 0D8C                                          pclath 000A  
                         Ext_Write@addressHigh 0079                                          status 0003  
                                        wtemp0 007E                                  txSpi@dataSize 00A6  
                               i1___ftpack@arg 0070                                 i1___ftpack@exp 0073  
                              __initialization 001B                                   __end_of_main 042A  
                                  ?i1___ftpack 0070                                 ??_EUSART_Write 00A0  
                             __end_of_Ext_Read 0EDF                        __end_of_TMR2_Initialize 0DD5  
                  ?_INTERRUPT_InterruptManager 0070                       _TMR2_SetInterruptHandler 0D61  
                                       ??_main 00C7                                  ___fttol@sign1 0077  
                       __end_of_WDT_Initialize 0D34              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 004E                                         ?_frexp 0070  
                             __end_of___altoft 07C4                                         ?_rxSpi 00A6  
                                       ?_txSpi 00A5                                         _ANSELA 018C  
                                       _ANSELB 018D                               __end_of___ftpack 051F  
                                       ?_round 0034                     __end_of_EUSART_is_rx_ready 0D39  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       ?_trunc 0026                                         i1l2001 0532  
                                       i1l2011 055E                                         i1l2003 053C  
                                       i1l2021 058C                                         i1l2013 0566  
                                       i1l2005 0543                                         i1l2023 0591  
                                       i1l2015 056A                                         i1l2007 0547  
                                       i1l2111 015F                                         i1l2031 0790  
                                       i1l2017 0574                                         i1l2009 0551  
                                       i1l2121 017B                                         i1l2113 0165  
                                       i1l2033 079E                                         i1l2025 0788  
                                       i1l2041 042A                                         i1l1081 07FA  
                                       i1l2201 0781                                         i1l1074 0787  
                                       i1l2019 057C                                         i1l2131 0197  
                                       i1l2123 0181                                         i1l2115 016F  
                                       i1l2035 07A9                                         i1l2027 078A  
                                       i1l2051 0451                                         i1l2043 0439  
                                       i1l1068 06FD                                         i1l2141 01BA  
                                       i1l2133 0199                                         i1l2125 018C  
                                       i1l2109 0145                                         i1l2037 07AF  
                                       i1l2029 078C                                         i1l2053 0457  
                                       i1l2151 01E2                                         i1l2143 01C3  
                                       i1l2135 019F                                         i1l2127 018E  
                                       i1l2119 0176                                         i1l2055 045E  
                                       i1l2047 0442                                         i1l2223 06B6  
                                       i1l2161 0215                                         i1l2153 01E8  
                                       i1l2145 01CD                                         i1l2137 01AC  
                                       i1l2129 0192                                         i1l2073 0483  
                                       i1l2065 046C                                         i1l2057 0460  
                                       i1l2049 0450                                         i1l2225 06D7  
                                       i1l3113 0E48                                         i1l2235 0D6A  
                                       i1l2171 0234                                         i1l2163 0219  
                                       i1l2155 01F1                                         i1l2139 01B4  
                                       i1l2147 01D4                                         i1l2075 0491  
                                       i1l2059 0464                                         i1l2067 047C  
                                       i1l2091 07EC                                         i1l2083 07C4  
                                       i1l2227 06ED                                         i1l3115 0E4A  
                                       i1l2237 0D71                                         i1l2173 0244  
                                       i1l2165 0229                                         i1l2157 01FB  
                                       i1l2149 01DA                                         i1l2181 0EA5  
                                       i1l2077 0496                                         i1l2093 07F5  
                                       i1l2085 07CB                                         i1l3117 0E5B  
                                       i1l2239 0D73                                         i1l2175 0246  
                                       i1l2167 022A                                         i1l2159 0205  
                                       i1l2183 0EA7                                         i1l2079 04A1  
                                       i1l2095 07F9                                         i1l2191 0754  
                                       i1l3119 0E5E                                         i1l2169 0230  
                                       i1l2089 07D2                                         i1l2179 0E9D  
                                       i1l2195 075B                                         i1l2187 0743  
                                       i1l2197 0764                                         i1l2189 074F  
                                       i1l2199 0765                                         i1l3351 0006  
                                       i1l3281 0DA0                                         i1l3353 000A  
                                       i1l3355 000F                                         i1l2821 0F1E  
                                       i1l2813 0F05                                         i1l2901 0706  
                                       i1l3277 0D98                                         i1l3357 0014  
                                       i1l2815 0F08                                         i1l2823 0F2C  
                                       i1l2911 0721                                         i1l2903 0708  
                                       i1l3279 0D9A                                         i1l2817 0F14  
                                       i1l2833 0F4A                                         i1l2841 0E01  
                                       i1l2913 0724                                         i1l2921 0738  
                                       i1l2905 0709                                         i1l2819 0F1A  
                                       i1l2827 0F33                                         i1l2843 0E0B  
                                       i1l2915 0726                                         i1l2907 070B  
                                       i1l2931 0E32                                         i1l2923 0E2E  
                                       i1l2829 0F3B                                         i1l2917 0735  
                                       i1l2909 071B                                         i1l2933 0E33  
                                       i1l2871 0345                                         i1l2863 030D  
                                       i1l2919 0737                                         i1l2935 0E36  
                                       u300_20 0F5A                                         i1l1993 051F  
                                       i1l2881 035D                                         i1l2873 034A  
                                       i1l2865 0324                                         i1l2937 0E40  
                                       i1l2929 0E30                                         u300_21 0F59  
                                       i1l1995 0524                                         i1l2891 0386  
                                       i1l2883 035E                                         i1l2875 034D  
                                       i1l2867 0334                                         i1l2939 0E42  
                                       i1l1997 052B                                         i1l2893 038E  
                                       i1l2885 036E                                         i1l2877 0354  
                                       i1l2869 0340                                         i1l2981 0F5F  
                                       i1l2895 0390                                         i1l2887 0374  
                                       i1l2879 0357                                         i1l2983 0F65  
                                       u301_20 0F5F                                         i1l2897 039A  
                                       i1l2889 0376                                         i1l2985 0F6F  
                                       u301_21 0F5E                                         i1l2977 0F53  
                                       i1l2899 0700                                         i1l2979 0F5A  
                                       u150_20 056A                                         u302_20 0F65  
                                       u150_21 0569                                         u302_21 0F64  
                                       u151_20 0570                                         u143_20 0524  
                                       u303_20 0F6A                                         u151_21 056F  
                                       u143_21 0523                                         u303_21 0F69  
                                       u152_20 0574                                         u144_20 052B  
                                       u160_20 0464                                         u152_21 0573  
                                       u144_21 052A                                         u160_21 0463  
                                  initMatrix@i 00B5                                    initMatrix@j 00B6  
                                       u153_20 0584                                         u161_20 046B  
                                  initMatrix@k 00B4                                         u161_21 046A  
                                       u153_25 0581                                         u145_25 0537  
                                       u154_20 0591                                         u146_20 0542  
                                       u154_21 0590                                         u146_21 0541  
                                       u162_25 046D                                         u171_20 015F  
                                       u155_20 0790                                         u163_20 047B  
                                       u171_21 015E                                         u155_21 078F  
                                       u163_21 047A                                         u147_25 0552  
                                       u148_20 055D                                         u172_20 0165  
                                       u164_20 0482                                         u148_21 055C  
                                       u172_21 0164                                         u164_21 0481  
                                       u180_25 01AD                                         u156_25 079F  
                                       u181_20 01BA                                         u173_20 016F  
                                       u157_20 07AF                                         u317_20 0E5B  
                                       u181_21 01B9                                         u173_21 016E  
                                       u157_21 07AE                                         u317_21 0E5A  
                                       u149_25 0561                                         u165_25 0484  
                                       u317_25 0E57                                         u190_20 0201  
                                       u182_20 01C2                                         u174_20 017B  
                                       u166_20 0491                                         u158_20 0439  
                                       u190_21 0200                                         u182_21 01C1  
                                       u174_21 017A                                         u166_21 0490  
                                       u158_21 0438                                         u191_20 0205  
                                       u175_20 0181                                         u167_20 0496  
                                       u159_20 044C                                         u191_21 0204  
                                       u175_21 0180                                         u167_21 0495  
                                       u183_25 01C4                                         u159_25 0449  
                                       u192_20 0219                                         u184_20 01D3  
                                       u176_20 018B                                         u168_20 07CB  
                                       u192_21 0218                                         u184_21 01D2  
                                       u176_21 018A                                         u168_21 07CA  
                                       u193_20 0234                                         u185_20 01DA  
                                       u177_20 0192                                         u193_21 0233  
                                       u185_21 01D9                                         u177_21 0191  
                                       u178_20 0197                                         u194_20 0EA5  
                                       u290_20 0354                                         u178_21 0196  
                                       u194_21 0EA4                                         u290_21 0353  
                             __end_of___lwtoft 0DE9                                         u186_25 01DB  
                                       u283_20 0F13                                         u187_20 01E8  
                                       u179_20 01AC                                         u195_20 0754  
                                       u291_20 035D                                         u283_21 0F12  
                                       u187_21 01E7                                         u179_21 01AB  
                                       u195_21 0753                                         u291_21 035C  
                                       u284_20 0F2A                                         u188_20 01F0  
                                       u196_20 0764                                         u292_20 0374  
                                       u356_20 0DA0                                         u364_20 000A  
                                       u284_21 0F29                                         u188_21 01EF  
                                       u196_21 0763                                         u292_21 0373  
                                       u356_21 0D9F                                         u364_21 0009  
                                       u293_20 038E                                         u365_20 000F  
                                       u293_21 038D                                         u365_21 000E  
                                       u189_25 01F2                                         u198_20 0D71  
                                       u294_20 0706                                         u366_20 0014  
                                       u198_21 0D70                                         u294_21 0705  
                                       u366_21 0013                                         u295_24 0715  
                                       u295_25 0712                                         u296_20 0721  
                                       u296_21 0720                                         u289_20 034A  
                                       u289_21 0349                                         u297_24 0730  
                                       u297_25 072D                                         u298_20 0E47  
                                       _OSCCON 0099                                         u298_21 0E46  
                                    ??i1_txSpi 0078                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                 _address_read 0044                              __end_of_SPI1_Open 06B6  
                                    ??___ftadd 00C1                                      ??___ftneg 0073  
                                    ??___ftmul 00B1                                      ??___ftsub 007E  
                                    ??___fttol 0074                                         _random 0059  
                        ___ftmul@f3_as_product 00B6                              __end_ofi1___ftadd 025A  
                              ?_WDT_Initialize 0070                       i1SPI1_ExchangeBlock@data 0074  
                                       round@f 0037                                         round@x 0034  
     TMR2_SetInterruptHandler@InterruptHandler 00A0                                         trunc@i 0029  
                                       trunc@x 0026                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0DE9                        __end_of__initialization 002B  
                                   ___altoft@c 0020                                 _SPI1_ReadBlock 0E7E  
                                   ___ftadd@f1 00BB                                     ___ftadd@f2 00BE  
                              i1___ftpack@sign 0074                             ?_SYSTEM_Initialize 0070  
                                   ___ftneg@f1 0070                                   Ext_Read@data 00AD  
                                   ___ftmul@f1 00AB                                     ___ftmul@f2 00AE  
                                  i1txSpi@data 0075                                     ___ftsub@f1 0031  
                                   ___ftsub@f2 002E                                     ___fttol@f1 0070  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 00A2  
                              i1txSpi@dataSize 0076                                      ?_TMR2_ISR 0070  
                                __end_of_frexp 07FB                              ??_SPI1_Initialize 00A0  
                                __end_of_rxSpi 1000                                  __end_of_txSpi 0FD2  
                                __end_of_round 06FE                                  __end_of_trunc 0788  
                             ?_TMR2_Initialize 0070                          SPI1_ExchangeByte@data 00A0  
                                   ___lwtoft@c 00A8                             _spi1_configuration 0807  
                               _OPTION_REGbits 0095                              __end_of_Ext_Write 0E16  
              ??_EUSART_SetOverrunErrorHandler 00A2                                        ??_frexp 0074  
                    __end_of_SYSTEM_Initialize 0DFF                                        ??_rxSpi 00A8  
                                      ??_txSpi 00A8                                        ??_round 007E  
                                      ??_trunc 007E                         __end_of_SPI1_ReadBlock 0E9D  
                                   __pbssBANK0 003F                                     __pbssBANK1 00CA  
                         __end_of_EUSART_Write 0D98                       decrementaT@CountCallBack 0042  
                                    ?_Ext_Read 00AB                                     __pmaintext 03A0  
                             ??_positionUpdate 007A                                     ??_TMR2_ISR 007E  
                                   __pintentry 0004                                      ?___altoft 0020  
                                      _BAUDCON 019F                                      ?___ftpack 00A0  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                    ?___lwtoft 00A8                              i1matrixClear@data 0079  
                                      _OSCTUNE 0098                                        _SSP1ADD 0212  
                                      _SSP1BUF 0211                                  i1_matrixClear 0E2E  
                     ??_EUSART_SetErrorHandler 00A2                                  _address_write 0046  
                              ?_SPI1_ReadBlock 00A1                              __end_of_analisaRx 0606  
                                      i1_txSpi 0F2B                                     ??_Ext_Read 00AC  
                   ??_TMR2_SetInterruptHandler 00A2                                     _initMatrix 0606  
                                 ??i1___ftpack 0075                                        ___ftadd 002F  
                                      ___ftneg 0D6A                                        ___ftmul 025A  
                                      ___ftsub 0E9D                                        ___fttol 042A  
                                   ??___altoft 007D                                     ??___ftpack 00A5  
                                      __ptext1 0606                                        __ptext2 0E62  
                                      __ptext3 0FA7                                        __ptext4 0F7D  
                                      __ptext5 0593                                        __ptext6 0DD5  
                                      __ptext7 025A                                        __ptext8 002F  
                                      __ptext9 04AA                                     ??___lwtoft 00AB  
                                    _T1CONbits 0018                                        _countRx 0053  
                        _OSCILLATOR_Initialize 0D3F                                      _T2CONbits 001C  
                           positionUpdate@data 0020                       ??_PIN_MANAGER_Initialize 00A0  
                               ?i1_matrixClear 0070                                 positionCalc@yi 003F  
                                      clrloop0 0D3A                                  ??_decrementaT 003D  
                         end_of_initialization 002B                                 initMatrix@data 00B0  
        __end_of_EUSART_SetOverrunErrorHandler 0D61                  _EUSART_SetOverrunErrorHandler 0D58  
                           __end_ofi1___ftpack 0593                              _EUSART_Initialize 0EDF  
                                      rxSpi@cs 00AA                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0D34  
                                      txSpi@cs 00A8                                   matrixClear@i 00AD  
                                    _SPI1_Open 065E                            ??_EUSART_Initialize 00A2  
                             ??_WDT_Initialize 00A0                            ?_EUSART_is_rx_ready 0070  
                          SPI1_ReadBlock@block 00A4                                      _TRISBbits 008D  
                                    i1___ftadd 0145                            Ext_Read@addressHigh 00AB  
                       SPI1_ExchangeBlock@data 00A4                      __end_of_EUSART_Initialize 0F04  
                         ??_EUSART_is_rx_ready 00A0                                  ?_positionCalc 0070  
                              _SPI1_Initialize 0D74                                      _TXSTAbits 019E  
                                   main@rxChar 00C9                            __end_of_decrementaT 0E62  
                                  ___ftmul@exp 00B5                                    ?_initMatrix 0070  
         __end_of_TMR2_DefaultInterruptHandler 0004                   _TMR2_DefaultInterruptHandler 0003  
                                   ?_SPI1_Open 0070                     _EUSART_DefaultErrorHandler 0000  
                               i1matrixClear@i 007D                                   _EUSART_Write 0D8C  
                       ?_OSCILLATOR_Initialize 0070                            Ext_Write@addressLow 0020  
                              ??i1_matrixClear 0079                            start_initialization 001B  
                                    i1txSpi@cs 0078                              _positionCalc$1591 003A  
                 __end_ofi1_SPI1_ExchangeBlock 0F2B                                     ?i1___ftadd 0078  
                                ??_EUSART_Read 00A0                                      _Ext_Write 0DFF  
                               ??_positionCalc 007E                                     frexp@value 0070  
               ?_EUSART_SetOverrunErrorHandler 00A0                     _EUSART_FramingErrorHandler 0050  
                       _EUSART_SetErrorHandler 0D46                                  ??_executaTudo 007E  
                ?_TMR2_DefaultInterruptHandler 0070                                      ___latbits 0001  
                             ??_SPI1_ReadBlock 00A3                                  ??_matrixClear 00A9  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                      __end_of_SPI1_Initialize 0D80                                     ?_Ext_Write 0079  
                                  _decrementaT 0E48                                       ?i1_txSpi 0075  
                          __end_of_EUSART_Read 0DC3                                      __pnvBANK0 0056  
                                    __pnvBANK1 00D6                                      _analisaRx 0593  
                       _PIN_MANAGER_Initialize 0E16                                  Ext_Write@data 0021  
                                     ?___ftadd 00BB                                       ?___ftneg 0070  
                                     ?___ftmul 00AB                                       ?___ftsub 002E  
                                     ?___fttol 0070                                    ??_SPI1_Open 00A0  
                 ??_INTERRUPT_InterruptManager 007E                            __end_of_executaTudo 0F7D  
                                  ??i1___ftadd 0020                     __end_of_SPI1_ExchangeBlock 0FA7  
                          __end_of_matrixClear 0E7E                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00A0                                       _LATBbits 010D  
                               rxSpi@blockSize 00A7                            __end_of_matrix_conf 0807  
                                    clear_ram0 0D39                                       _PIE1bits 0091  
                            _eusartRxLastError 0055                                     ?_analisaRx 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00A2  
                                   rxSpi@block 00A6                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216                           i1_SPI1_ExchangeBlock 0F04  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR2_ISR 0D98  
                                     _SSP1STAT 0214                             SPI1_ReadBlock@data 00A5  
                            ??_TMR1_Initialize 00A0                           __end_of_positionCalc 03A0  
                           Ext_Read@addressLow 00AC                 ??_TMR2_DefaultInterruptHandler 0070  
                    ?_TMR2_SetInterruptHandler 00A0                                    _EUSART_Read 0DB4  
                             ?_SPI1_Initialize 0070                                matrixClear@data 00A9  
                                  ??_Ext_Write 007C                              ??_TMR2_Initialize 00A2  
                                     _Ext_Read 0EBE                                      frexp@eptr 0073  
                                 ??_initMatrix 00AE                          ?i1_SPI1_ExchangeBlock 0070  
                      ??_OSCILLATOR_Initialize 00A0                            _EUSART_ErrorHandler 004C  
                                     ___altoft 0788                                    _executaTudo 0F53  
                                     ___ftpack 04AA                                       ___lwtoft 0DD5  
                                     _eeNumber 00CA                                    _matrixClear 0E62  
                                     __ptext10 0EBE                                       __ptext11 0FD2  
                                     __ptext20 0D74                                       __ptext12 0E7E  
                                     __ptext21 0E16                                       __ptext13 0DA6  
                                   _T1GCONbits 0019                                       __ptext22 0D3F  
                                     __ptext14 0D8C                                       __ptext31 0D98  
                                     __ptext23 0EDF                                       __ptext15 0DE9  
                                     __ptext40 07C4                                       __ptext32 0003  
                                     __ptext24 0D58                                       __ptext16 0D30  
                                     __ptext41 042A                                       __ptext33 0E48  
                                     __ptext25 0D4F                                       __ptext17 0DC3  
                                     __ptext42 0788                                       __ptext34 0F53  
                                     __ptext26 0D46                                       __ptext18 0D61  
                                     __ptext43 0E9D                                       __ptext35 0E2E  
                                     __ptext27 065E                                       __ptext19 0D80  
                                     __ptext44 0145                                       __ptext36 06FE  
                                     __ptext28 0D34                                       __ptext45 051F  
                                     __ptext37 030D                                       __ptext29 0DB4  
                                     __ptext46 0D6A                                       __ptext38 06B6  
                                     __ptext47 0DFF                                       __ptext39 0743  
                                     __ptext48 0F2B                                       __ptext49 0F04  
                                 _SSP1CON1bits 0215                                       _bufferRx 0054  
                                  _matrix_conf 07FB                             __end_of_initMatrix 065E  
                                   trunc@expon 002C                            positionUpdate@cordX 0024  
                          positionUpdate@cordY 0079                        ?_EUSART_SetErrorHandler 00A0  
                                  ??_analisaRx 00C7                  i1SPI1_ExchangeBlock@blockSize 0070  
EUSART_SetOverrunErrorHandler@interruptHandler 00A0                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0D58                  _EUSART_SetFramingErrorHandler 0D4F  
                                    txSpi@data 00A5                    SPI1_ExchangeBlock@blockSize 00A0  
                                   _INTCONbits 000B                          __end_ofi1_matrixClear 0E48  
                                 ?_decrementaT 0070                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0D4F  
                       ??i1_SPI1_ExchangeBlock 0072  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                                __pstringtext1 07FB                                  __pstringtext2 0807  
                               _positionUpdate 06FE                             EUSART_Write@txData 00A0  
               __end_of_PIN_MANAGER_Initialize 0E2E                        SPI1_ReadBlock@blockSize 00A1  
                                 _positionCalc 030D                          _TMR2_InterruptHandler 0048  
                              _TMR1_Initialize 0D80                     __end_of_spi1_configuration 080B  
