

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 13:12:59 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 07/09/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1827 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000D                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     0111                     	;# 
   127     0112                     	;# 
   128     0113                     	;# 
   129     0114                     	;# 
   130     0115                     	;# 
   131     0116                     	;# 
   132     0117                     	;# 
   133     0118                     	;# 
   134     0119                     	;# 
   135     011A                     	;# 
   136     011B                     	;# 
   137     011D                     	;# 
   138     011E                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0191                     	;# 
   142     0191                     	;# 
   143     0192                     	;# 
   144     0193                     	;# 
   145     0193                     	;# 
   146     0193                     	;# 
   147     0194                     	;# 
   148     0195                     	;# 
   149     0196                     	;# 
   150     0199                     	;# 
   151     019A                     	;# 
   152     019B                     	;# 
   153     019B                     	;# 
   154     019B                     	;# 
   155     019B                     	;# 
   156     019C                     	;# 
   157     019C                     	;# 
   158     019D                     	;# 
   159     019E                     	;# 
   160     019F                     	;# 
   161     020C                     	;# 
   162     020D                     	;# 
   163     0211                     	;# 
   164     0211                     	;# 
   165     0212                     	;# 
   166     0212                     	;# 
   167     0213                     	;# 
   168     0213                     	;# 
   169     0214                     	;# 
   170     0214                     	;# 
   171     0215                     	;# 
   172     0215                     	;# 
   173     0215                     	;# 
   174     0216                     	;# 
   175     0216                     	;# 
   176     0217                     	;# 
   177     0217                     	;# 
   178     0219                     	;# 
   179     021A                     	;# 
   180     021B                     	;# 
   181     021C                     	;# 
   182     021D                     	;# 
   183     021E                     	;# 
   184     021F                     	;# 
   185     0291                     	;# 
   186     0291                     	;# 
   187     0292                     	;# 
   188     0293                     	;# 
   189     0294                     	;# 
   190     0295                     	;# 
   191     0295                     	;# 
   192     0296                     	;# 
   193     0298                     	;# 
   194     0298                     	;# 
   195     0299                     	;# 
   196     029A                     	;# 
   197     029B                     	;# 
   198     029C                     	;# 
   199     029C                     	;# 
   200     029D                     	;# 
   201     029E                     	;# 
   202     029E                     	;# 
   203     0311                     	;# 
   204     0311                     	;# 
   205     0312                     	;# 
   206     0313                     	;# 
   207     0318                     	;# 
   208     0318                     	;# 
   209     0319                     	;# 
   210     031A                     	;# 
   211     0394                     	;# 
   212     0395                     	;# 
   213     0396                     	;# 
   214     039A                     	;# 
   215     039C                     	;# 
   216     039D                     	;# 
   217     039E                     	;# 
   218     039F                     	;# 
   219     0415                     	;# 
   220     0416                     	;# 
   221     0417                     	;# 
   222     041C                     	;# 
   223     041D                     	;# 
   224     041E                     	;# 
   225     0FE4                     	;# 
   226     0FE5                     	;# 
   227     0FE6                     	;# 
   228     0FE7                     	;# 
   229     0FE8                     	;# 
   230     0FE9                     	;# 
   231     0FEA                     	;# 
   232     0FEB                     	;# 
   233     0FED                     	;# 
   234     0FEE                     	;# 
   235     0FEF                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     008C                     	;# 
   266     008D                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0095                     	;# 
   272     0096                     	;# 
   273     0097                     	;# 
   274     0098                     	;# 
   275     0099                     	;# 
   276     009A                     	;# 
   277     009B                     	;# 
   278     009B                     	;# 
   279     009C                     	;# 
   280     009D                     	;# 
   281     009E                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     0111                     	;# 
   285     0112                     	;# 
   286     0113                     	;# 
   287     0114                     	;# 
   288     0115                     	;# 
   289     0116                     	;# 
   290     0117                     	;# 
   291     0118                     	;# 
   292     0119                     	;# 
   293     011A                     	;# 
   294     011B                     	;# 
   295     011D                     	;# 
   296     011E                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0191                     	;# 
   300     0191                     	;# 
   301     0192                     	;# 
   302     0193                     	;# 
   303     0193                     	;# 
   304     0193                     	;# 
   305     0194                     	;# 
   306     0195                     	;# 
   307     0196                     	;# 
   308     0199                     	;# 
   309     019A                     	;# 
   310     019B                     	;# 
   311     019B                     	;# 
   312     019B                     	;# 
   313     019B                     	;# 
   314     019C                     	;# 
   315     019C                     	;# 
   316     019D                     	;# 
   317     019E                     	;# 
   318     019F                     	;# 
   319     020C                     	;# 
   320     020D                     	;# 
   321     0211                     	;# 
   322     0211                     	;# 
   323     0212                     	;# 
   324     0212                     	;# 
   325     0213                     	;# 
   326     0213                     	;# 
   327     0214                     	;# 
   328     0214                     	;# 
   329     0215                     	;# 
   330     0215                     	;# 
   331     0215                     	;# 
   332     0216                     	;# 
   333     0216                     	;# 
   334     0217                     	;# 
   335     0217                     	;# 
   336     0219                     	;# 
   337     021A                     	;# 
   338     021B                     	;# 
   339     021C                     	;# 
   340     021D                     	;# 
   341     021E                     	;# 
   342     021F                     	;# 
   343     0291                     	;# 
   344     0291                     	;# 
   345     0292                     	;# 
   346     0293                     	;# 
   347     0294                     	;# 
   348     0295                     	;# 
   349     0295                     	;# 
   350     0296                     	;# 
   351     0298                     	;# 
   352     0298                     	;# 
   353     0299                     	;# 
   354     029A                     	;# 
   355     029B                     	;# 
   356     029C                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     0394                     	;# 
   370     0395                     	;# 
   371     0396                     	;# 
   372     039A                     	;# 
   373     039C                     	;# 
   374     039D                     	;# 
   375     039E                     	;# 
   376     039F                     	;# 
   377     0415                     	;# 
   378     0416                     	;# 
   379     0417                     	;# 
   380     041C                     	;# 
   381     041D                     	;# 
   382     041E                     	;# 
   383     0FE4                     	;# 
   384     0FE5                     	;# 
   385     0FE6                     	;# 
   386     0FE7                     	;# 
   387     0FE8                     	;# 
   388     0FE9                     	;# 
   389     0FEA                     	;# 
   390     0FEB                     	;# 
   391     0FED                     	;# 
   392     0FEE                     	;# 
   393     0FEF                     	;# 
   394     0000                     	;# 
   395     0001                     	;# 
   396     0002                     	;# 
   397     0003                     	;# 
   398     0004                     	;# 
   399     0005                     	;# 
   400     0006                     	;# 
   401     0007                     	;# 
   402     0008                     	;# 
   403     0009                     	;# 
   404     000A                     	;# 
   405     000B                     	;# 
   406     000C                     	;# 
   407     000D                     	;# 
   408     0011                     	;# 
   409     0012                     	;# 
   410     0013                     	;# 
   411     0014                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0016                     	;# 
   415     0017                     	;# 
   416     0018                     	;# 
   417     0019                     	;# 
   418     001A                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001E                     	;# 
   422     001F                     	;# 
   423     008C                     	;# 
   424     008D                     	;# 
   425     0091                     	;# 
   426     0092                     	;# 
   427     0093                     	;# 
   428     0094                     	;# 
   429     0095                     	;# 
   430     0096                     	;# 
   431     0097                     	;# 
   432     0098                     	;# 
   433     0099                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     010C                     	;# 
   441     010D                     	;# 
   442     0111                     	;# 
   443     0112                     	;# 
   444     0113                     	;# 
   445     0114                     	;# 
   446     0115                     	;# 
   447     0116                     	;# 
   448     0117                     	;# 
   449     0118                     	;# 
   450     0119                     	;# 
   451     011A                     	;# 
   452     011B                     	;# 
   453     011D                     	;# 
   454     011E                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457     0191                     	;# 
   458     0191                     	;# 
   459     0192                     	;# 
   460     0193                     	;# 
   461     0193                     	;# 
   462     0193                     	;# 
   463     0194                     	;# 
   464     0195                     	;# 
   465     0196                     	;# 
   466     0199                     	;# 
   467     019A                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019B                     	;# 
   472     019C                     	;# 
   473     019C                     	;# 
   474     019D                     	;# 
   475     019E                     	;# 
   476     019F                     	;# 
   477     020C                     	;# 
   478     020D                     	;# 
   479     0211                     	;# 
   480     0211                     	;# 
   481     0212                     	;# 
   482     0212                     	;# 
   483     0213                     	;# 
   484     0213                     	;# 
   485     0214                     	;# 
   486     0214                     	;# 
   487     0215                     	;# 
   488     0215                     	;# 
   489     0215                     	;# 
   490     0216                     	;# 
   491     0216                     	;# 
   492     0217                     	;# 
   493     0217                     	;# 
   494     0219                     	;# 
   495     021A                     	;# 
   496     021B                     	;# 
   497     021C                     	;# 
   498     021D                     	;# 
   499     021E                     	;# 
   500     021F                     	;# 
   501     0291                     	;# 
   502     0291                     	;# 
   503     0292                     	;# 
   504     0293                     	;# 
   505     0294                     	;# 
   506     0295                     	;# 
   507     0295                     	;# 
   508     0296                     	;# 
   509     0298                     	;# 
   510     0298                     	;# 
   511     0299                     	;# 
   512     029A                     	;# 
   513     029B                     	;# 
   514     029C                     	;# 
   515     029C                     	;# 
   516     029D                     	;# 
   517     029E                     	;# 
   518     029E                     	;# 
   519     0311                     	;# 
   520     0311                     	;# 
   521     0312                     	;# 
   522     0313                     	;# 
   523     0318                     	;# 
   524     0318                     	;# 
   525     0319                     	;# 
   526     031A                     	;# 
   527     0394                     	;# 
   528     0395                     	;# 
   529     0396                     	;# 
   530     039A                     	;# 
   531     039C                     	;# 
   532     039D                     	;# 
   533     039E                     	;# 
   534     039F                     	;# 
   535     0415                     	;# 
   536     0416                     	;# 
   537     0417                     	;# 
   538     041C                     	;# 
   539     041D                     	;# 
   540     041E                     	;# 
   541     0FE4                     	;# 
   542     0FE5                     	;# 
   543     0FE6                     	;# 
   544     0FE7                     	;# 
   545     0FE8                     	;# 
   546     0FE9                     	;# 
   547     0FEA                     	;# 
   548     0FEB                     	;# 
   549     0FED                     	;# 
   550     0FEE                     	;# 
   551     0FEF                     	;# 
   552     0000                     	;# 
   553     0001                     	;# 
   554     0002                     	;# 
   555     0003                     	;# 
   556     0004                     	;# 
   557     0005                     	;# 
   558     0006                     	;# 
   559     0007                     	;# 
   560     0008                     	;# 
   561     0009                     	;# 
   562     000A                     	;# 
   563     000B                     	;# 
   564     000C                     	;# 
   565     000D                     	;# 
   566     0011                     	;# 
   567     0012                     	;# 
   568     0013                     	;# 
   569     0014                     	;# 
   570     0015                     	;# 
   571     0016                     	;# 
   572     0016                     	;# 
   573     0017                     	;# 
   574     0018                     	;# 
   575     0019                     	;# 
   576     001A                     	;# 
   577     001B                     	;# 
   578     001C                     	;# 
   579     001E                     	;# 
   580     001F                     	;# 
   581     008C                     	;# 
   582     008D                     	;# 
   583     0091                     	;# 
   584     0092                     	;# 
   585     0093                     	;# 
   586     0094                     	;# 
   587     0095                     	;# 
   588     0096                     	;# 
   589     0097                     	;# 
   590     0098                     	;# 
   591     0099                     	;# 
   592     009A                     	;# 
   593     009B                     	;# 
   594     009B                     	;# 
   595     009C                     	;# 
   596     009D                     	;# 
   597     009E                     	;# 
   598     010C                     	;# 
   599     010D                     	;# 
   600     0111                     	;# 
   601     0112                     	;# 
   602     0113                     	;# 
   603     0114                     	;# 
   604     0115                     	;# 
   605     0116                     	;# 
   606     0117                     	;# 
   607     0118                     	;# 
   608     0119                     	;# 
   609     011A                     	;# 
   610     011B                     	;# 
   611     011D                     	;# 
   612     011E                     	;# 
   613     018C                     	;# 
   614     018D                     	;# 
   615     0191                     	;# 
   616     0191                     	;# 
   617     0192                     	;# 
   618     0193                     	;# 
   619     0193                     	;# 
   620     0193                     	;# 
   621     0194                     	;# 
   622     0195                     	;# 
   623     0196                     	;# 
   624     0199                     	;# 
   625     019A                     	;# 
   626     019B                     	;# 
   627     019B                     	;# 
   628     019B                     	;# 
   629     019B                     	;# 
   630     019C                     	;# 
   631     019C                     	;# 
   632     019D                     	;# 
   633     019E                     	;# 
   634     019F                     	;# 
   635     020C                     	;# 
   636     020D                     	;# 
   637     0211                     	;# 
   638     0211                     	;# 
   639     0212                     	;# 
   640     0212                     	;# 
   641     0213                     	;# 
   642     0213                     	;# 
   643     0214                     	;# 
   644     0214                     	;# 
   645     0215                     	;# 
   646     0215                     	;# 
   647     0215                     	;# 
   648     0216                     	;# 
   649     0216                     	;# 
   650     0217                     	;# 
   651     0217                     	;# 
   652     0219                     	;# 
   653     021A                     	;# 
   654     021B                     	;# 
   655     021C                     	;# 
   656     021D                     	;# 
   657     021E                     	;# 
   658     021F                     	;# 
   659     0291                     	;# 
   660     0291                     	;# 
   661     0292                     	;# 
   662     0293                     	;# 
   663     0294                     	;# 
   664     0295                     	;# 
   665     0295                     	;# 
   666     0296                     	;# 
   667     0298                     	;# 
   668     0298                     	;# 
   669     0299                     	;# 
   670     029A                     	;# 
   671     029B                     	;# 
   672     029C                     	;# 
   673     029C                     	;# 
   674     029D                     	;# 
   675     029E                     	;# 
   676     029E                     	;# 
   677     0311                     	;# 
   678     0311                     	;# 
   679     0312                     	;# 
   680     0313                     	;# 
   681     0318                     	;# 
   682     0318                     	;# 
   683     0319                     	;# 
   684     031A                     	;# 
   685     0394                     	;# 
   686     0395                     	;# 
   687     0396                     	;# 
   688     039A                     	;# 
   689     039C                     	;# 
   690     039D                     	;# 
   691     039E                     	;# 
   692     039F                     	;# 
   693     0415                     	;# 
   694     0416                     	;# 
   695     0417                     	;# 
   696     041C                     	;# 
   697     041D                     	;# 
   698     041E                     	;# 
   699     0FE4                     	;# 
   700     0FE5                     	;# 
   701     0FE6                     	;# 
   702     0FE7                     	;# 
   703     0FE8                     	;# 
   704     0FE9                     	;# 
   705     0FEA                     	;# 
   706     0FEB                     	;# 
   707     0FED                     	;# 
   708     0FEE                     	;# 
   709     0FEF                     	;# 
   710     0000                     	;# 
   711     0001                     	;# 
   712     0002                     	;# 
   713     0003                     	;# 
   714     0004                     	;# 
   715     0005                     	;# 
   716     0006                     	;# 
   717     0007                     	;# 
   718     0008                     	;# 
   719     0009                     	;# 
   720     000A                     	;# 
   721     000B                     	;# 
   722     000C                     	;# 
   723     000D                     	;# 
   724     0011                     	;# 
   725     0012                     	;# 
   726     0013                     	;# 
   727     0014                     	;# 
   728     0015                     	;# 
   729     0016                     	;# 
   730     0016                     	;# 
   731     0017                     	;# 
   732     0018                     	;# 
   733     0019                     	;# 
   734     001A                     	;# 
   735     001B                     	;# 
   736     001C                     	;# 
   737     001E                     	;# 
   738     001F                     	;# 
   739     008C                     	;# 
   740     008D                     	;# 
   741     0091                     	;# 
   742     0092                     	;# 
   743     0093                     	;# 
   744     0094                     	;# 
   745     0095                     	;# 
   746     0096                     	;# 
   747     0097                     	;# 
   748     0098                     	;# 
   749     0099                     	;# 
   750     009A                     	;# 
   751     009B                     	;# 
   752     009B                     	;# 
   753     009C                     	;# 
   754     009D                     	;# 
   755     009E                     	;# 
   756     010C                     	;# 
   757     010D                     	;# 
   758     0111                     	;# 
   759     0112                     	;# 
   760     0113                     	;# 
   761     0114                     	;# 
   762     0115                     	;# 
   763     0116                     	;# 
   764     0117                     	;# 
   765     0118                     	;# 
   766     0119                     	;# 
   767     011A                     	;# 
   768     011B                     	;# 
   769     011D                     	;# 
   770     011E                     	;# 
   771     018C                     	;# 
   772     018D                     	;# 
   773     0191                     	;# 
   774     0191                     	;# 
   775     0192                     	;# 
   776     0193                     	;# 
   777     0193                     	;# 
   778     0193                     	;# 
   779     0194                     	;# 
   780     0195                     	;# 
   781     0196                     	;# 
   782     0199                     	;# 
   783     019A                     	;# 
   784     019B                     	;# 
   785     019B                     	;# 
   786     019B                     	;# 
   787     019B                     	;# 
   788     019C                     	;# 
   789     019C                     	;# 
   790     019D                     	;# 
   791     019E                     	;# 
   792     019F                     	;# 
   793     020C                     	;# 
   794     020D                     	;# 
   795     0211                     	;# 
   796     0211                     	;# 
   797     0212                     	;# 
   798     0212                     	;# 
   799     0213                     	;# 
   800     0213                     	;# 
   801     0214                     	;# 
   802     0214                     	;# 
   803     0215                     	;# 
   804     0215                     	;# 
   805     0215                     	;# 
   806     0216                     	;# 
   807     0216                     	;# 
   808     0217                     	;# 
   809     0217                     	;# 
   810     0219                     	;# 
   811     021A                     	;# 
   812     021B                     	;# 
   813     021C                     	;# 
   814     021D                     	;# 
   815     021E                     	;# 
   816     021F                     	;# 
   817     0291                     	;# 
   818     0291                     	;# 
   819     0292                     	;# 
   820     0293                     	;# 
   821     0294                     	;# 
   822     0295                     	;# 
   823     0295                     	;# 
   824     0296                     	;# 
   825     0298                     	;# 
   826     0298                     	;# 
   827     0299                     	;# 
   828     029A                     	;# 
   829     029B                     	;# 
   830     029C                     	;# 
   831     029C                     	;# 
   832     029D                     	;# 
   833     029E                     	;# 
   834     029E                     	;# 
   835     0311                     	;# 
   836     0311                     	;# 
   837     0312                     	;# 
   838     0313                     	;# 
   839     0318                     	;# 
   840     0318                     	;# 
   841     0319                     	;# 
   842     031A                     	;# 
   843     0394                     	;# 
   844     0395                     	;# 
   845     0396                     	;# 
   846     039A                     	;# 
   847     039C                     	;# 
   848     039D                     	;# 
   849     039E                     	;# 
   850     039F                     	;# 
   851     0415                     	;# 
   852     0416                     	;# 
   853     0417                     	;# 
   854     041C                     	;# 
   855     041D                     	;# 
   856     041E                     	;# 
   857     0FE4                     	;# 
   858     0FE5                     	;# 
   859     0FE6                     	;# 
   860     0FE7                     	;# 
   861     0FE8                     	;# 
   862     0FE9                     	;# 
   863     0FEA                     	;# 
   864     0FEB                     	;# 
   865     0FED                     	;# 
   866     0FEE                     	;# 
   867     0FEF                     	;# 
   868     0000                     	;# 
   869     0001                     	;# 
   870     0002                     	;# 
   871     0003                     	;# 
   872     0004                     	;# 
   873     0005                     	;# 
   874     0006                     	;# 
   875     0007                     	;# 
   876     0008                     	;# 
   877     0009                     	;# 
   878     000A                     	;# 
   879     000B                     	;# 
   880     000C                     	;# 
   881     000D                     	;# 
   882     0011                     	;# 
   883     0012                     	;# 
   884     0013                     	;# 
   885     0014                     	;# 
   886     0015                     	;# 
   887     0016                     	;# 
   888     0016                     	;# 
   889     0017                     	;# 
   890     0018                     	;# 
   891     0019                     	;# 
   892     001A                     	;# 
   893     001B                     	;# 
   894     001C                     	;# 
   895     001E                     	;# 
   896     001F                     	;# 
   897     008C                     	;# 
   898     008D                     	;# 
   899     0091                     	;# 
   900     0092                     	;# 
   901     0093                     	;# 
   902     0094                     	;# 
   903     0095                     	;# 
   904     0096                     	;# 
   905     0097                     	;# 
   906     0098                     	;# 
   907     0099                     	;# 
   908     009A                     	;# 
   909     009B                     	;# 
   910     009B                     	;# 
   911     009C                     	;# 
   912     009D                     	;# 
   913     009E                     	;# 
   914     010C                     	;# 
   915     010D                     	;# 
   916     0111                     	;# 
   917     0112                     	;# 
   918     0113                     	;# 
   919     0114                     	;# 
   920     0115                     	;# 
   921     0116                     	;# 
   922     0117                     	;# 
   923     0118                     	;# 
   924     0119                     	;# 
   925     011A                     	;# 
   926     011B                     	;# 
   927     011D                     	;# 
   928     011E                     	;# 
   929     018C                     	;# 
   930     018D                     	;# 
   931     0191                     	;# 
   932     0191                     	;# 
   933     0192                     	;# 
   934     0193                     	;# 
   935     0193                     	;# 
   936     0193                     	;# 
   937     0194                     	;# 
   938     0195                     	;# 
   939     0196                     	;# 
   940     0199                     	;# 
   941     019A                     	;# 
   942     019B                     	;# 
   943     019B                     	;# 
   944     019B                     	;# 
   945     019B                     	;# 
   946     019C                     	;# 
   947     019C                     	;# 
   948     019D                     	;# 
   949     019E                     	;# 
   950     019F                     	;# 
   951     020C                     	;# 
   952     020D                     	;# 
   953     0211                     	;# 
   954     0211                     	;# 
   955     0212                     	;# 
   956     0212                     	;# 
   957     0213                     	;# 
   958     0213                     	;# 
   959     0214                     	;# 
   960     0214                     	;# 
   961     0215                     	;# 
   962     0215                     	;# 
   963     0215                     	;# 
   964     0216                     	;# 
   965     0216                     	;# 
   966     0217                     	;# 
   967     0217                     	;# 
   968     0219                     	;# 
   969     021A                     	;# 
   970     021B                     	;# 
   971     021C                     	;# 
   972     021D                     	;# 
   973     021E                     	;# 
   974     021F                     	;# 
   975     0291                     	;# 
   976     0291                     	;# 
   977     0292                     	;# 
   978     0293                     	;# 
   979     0294                     	;# 
   980     0295                     	;# 
   981     0295                     	;# 
   982     0296                     	;# 
   983     0298                     	;# 
   984     0298                     	;# 
   985     0299                     	;# 
   986     029A                     	;# 
   987     029B                     	;# 
   988     029C                     	;# 
   989     029C                     	;# 
   990     029D                     	;# 
   991     029E                     	;# 
   992     029E                     	;# 
   993     0311                     	;# 
   994     0311                     	;# 
   995     0312                     	;# 
   996     0313                     	;# 
   997     0318                     	;# 
   998     0318                     	;# 
   999     0319                     	;# 
  1000     031A                     	;# 
  1001     0394                     	;# 
  1002     0395                     	;# 
  1003     0396                     	;# 
  1004     039A                     	;# 
  1005     039C                     	;# 
  1006     039D                     	;# 
  1007     039E                     	;# 
  1008     039F                     	;# 
  1009     0415                     	;# 
  1010     0416                     	;# 
  1011     0417                     	;# 
  1012     041C                     	;# 
  1013     041D                     	;# 
  1014     041E                     	;# 
  1015     0FE4                     	;# 
  1016     0FE5                     	;# 
  1017     0FE6                     	;# 
  1018     0FE7                     	;# 
  1019     0FE8                     	;# 
  1020     0FE9                     	;# 
  1021     0FEA                     	;# 
  1022     0FEB                     	;# 
  1023     0FED                     	;# 
  1024     0FEE                     	;# 
  1025     0FEF                     	;# 
  1026     0000                     	;# 
  1027     0001                     	;# 
  1028     0002                     	;# 
  1029     0003                     	;# 
  1030     0004                     	;# 
  1031     0005                     	;# 
  1032     0006                     	;# 
  1033     0007                     	;# 
  1034     0008                     	;# 
  1035     0009                     	;# 
  1036     000A                     	;# 
  1037     000B                     	;# 
  1038     000C                     	;# 
  1039     000D                     	;# 
  1040     0011                     	;# 
  1041     0012                     	;# 
  1042     0013                     	;# 
  1043     0014                     	;# 
  1044     0015                     	;# 
  1045     0016                     	;# 
  1046     0016                     	;# 
  1047     0017                     	;# 
  1048     0018                     	;# 
  1049     0019                     	;# 
  1050     001A                     	;# 
  1051     001B                     	;# 
  1052     001C                     	;# 
  1053     001E                     	;# 
  1054     001F                     	;# 
  1055     008C                     	;# 
  1056     008D                     	;# 
  1057     0091                     	;# 
  1058     0092                     	;# 
  1059     0093                     	;# 
  1060     0094                     	;# 
  1061     0095                     	;# 
  1062     0096                     	;# 
  1063     0097                     	;# 
  1064     0098                     	;# 
  1065     0099                     	;# 
  1066     009A                     	;# 
  1067     009B                     	;# 
  1068     009B                     	;# 
  1069     009C                     	;# 
  1070     009D                     	;# 
  1071     009E                     	;# 
  1072     010C                     	;# 
  1073     010D                     	;# 
  1074     0111                     	;# 
  1075     0112                     	;# 
  1076     0113                     	;# 
  1077     0114                     	;# 
  1078     0115                     	;# 
  1079     0116                     	;# 
  1080     0117                     	;# 
  1081     0118                     	;# 
  1082     0119                     	;# 
  1083     011A                     	;# 
  1084     011B                     	;# 
  1085     011D                     	;# 
  1086     011E                     	;# 
  1087     018C                     	;# 
  1088     018D                     	;# 
  1089     0191                     	;# 
  1090     0191                     	;# 
  1091     0192                     	;# 
  1092     0193                     	;# 
  1093     0193                     	;# 
  1094     0193                     	;# 
  1095     0194                     	;# 
  1096     0195                     	;# 
  1097     0196                     	;# 
  1098     0199                     	;# 
  1099     019A                     	;# 
  1100     019B                     	;# 
  1101     019B                     	;# 
  1102     019B                     	;# 
  1103     019B                     	;# 
  1104     019C                     	;# 
  1105     019C                     	;# 
  1106     019D                     	;# 
  1107     019E                     	;# 
  1108     019F                     	;# 
  1109     020C                     	;# 
  1110     020D                     	;# 
  1111     0211                     	;# 
  1112     0211                     	;# 
  1113     0212                     	;# 
  1114     0212                     	;# 
  1115     0213                     	;# 
  1116     0213                     	;# 
  1117     0214                     	;# 
  1118     0214                     	;# 
  1119     0215                     	;# 
  1120     0215                     	;# 
  1121     0215                     	;# 
  1122     0216                     	;# 
  1123     0216                     	;# 
  1124     0217                     	;# 
  1125     0217                     	;# 
  1126     0219                     	;# 
  1127     021A                     	;# 
  1128     021B                     	;# 
  1129     021C                     	;# 
  1130     021D                     	;# 
  1131     021E                     	;# 
  1132     021F                     	;# 
  1133     0291                     	;# 
  1134     0291                     	;# 
  1135     0292                     	;# 
  1136     0293                     	;# 
  1137     0294                     	;# 
  1138     0295                     	;# 
  1139     0295                     	;# 
  1140     0296                     	;# 
  1141     0298                     	;# 
  1142     0298                     	;# 
  1143     0299                     	;# 
  1144     029A                     	;# 
  1145     029B                     	;# 
  1146     029C                     	;# 
  1147     029C                     	;# 
  1148     029D                     	;# 
  1149     029E                     	;# 
  1150     029E                     	;# 
  1151     0311                     	;# 
  1152     0311                     	;# 
  1153     0312                     	;# 
  1154     0313                     	;# 
  1155     0318                     	;# 
  1156     0318                     	;# 
  1157     0319                     	;# 
  1158     031A                     	;# 
  1159     0394                     	;# 
  1160     0395                     	;# 
  1161     0396                     	;# 
  1162     039A                     	;# 
  1163     039C                     	;# 
  1164     039D                     	;# 
  1165     039E                     	;# 
  1166     039F                     	;# 
  1167     0415                     	;# 
  1168     0416                     	;# 
  1169     0417                     	;# 
  1170     041C                     	;# 
  1171     041D                     	;# 
  1172     041E                     	;# 
  1173     0FE4                     	;# 
  1174     0FE5                     	;# 
  1175     0FE6                     	;# 
  1176     0FE7                     	;# 
  1177     0FE8                     	;# 
  1178     0FE9                     	;# 
  1179     0FEA                     	;# 
  1180     0FEB                     	;# 
  1181     0FED                     	;# 
  1182     0FEE                     	;# 
  1183     0FEF                     	;# 
  1184     0000                     	;# 
  1185     0001                     	;# 
  1186     0002                     	;# 
  1187     0003                     	;# 
  1188     0004                     	;# 
  1189     0005                     	;# 
  1190     0006                     	;# 
  1191     0007                     	;# 
  1192     0008                     	;# 
  1193     0009                     	;# 
  1194     000A                     	;# 
  1195     000B                     	;# 
  1196     000C                     	;# 
  1197     000D                     	;# 
  1198     0011                     	;# 
  1199     0012                     	;# 
  1200     0013                     	;# 
  1201     0014                     	;# 
  1202     0015                     	;# 
  1203     0016                     	;# 
  1204     0016                     	;# 
  1205     0017                     	;# 
  1206     0018                     	;# 
  1207     0019                     	;# 
  1208     001A                     	;# 
  1209     001B                     	;# 
  1210     001C                     	;# 
  1211     001E                     	;# 
  1212     001F                     	;# 
  1213     008C                     	;# 
  1214     008D                     	;# 
  1215     0091                     	;# 
  1216     0092                     	;# 
  1217     0093                     	;# 
  1218     0094                     	;# 
  1219     0095                     	;# 
  1220     0096                     	;# 
  1221     0097                     	;# 
  1222     0098                     	;# 
  1223     0099                     	;# 
  1224     009A                     	;# 
  1225     009B                     	;# 
  1226     009B                     	;# 
  1227     009C                     	;# 
  1228     009D                     	;# 
  1229     009E                     	;# 
  1230     010C                     	;# 
  1231     010D                     	;# 
  1232     0111                     	;# 
  1233     0112                     	;# 
  1234     0113                     	;# 
  1235     0114                     	;# 
  1236     0115                     	;# 
  1237     0116                     	;# 
  1238     0117                     	;# 
  1239     0118                     	;# 
  1240     0119                     	;# 
  1241     011A                     	;# 
  1242     011B                     	;# 
  1243     011D                     	;# 
  1244     011E                     	;# 
  1245     018C                     	;# 
  1246     018D                     	;# 
  1247     0191                     	;# 
  1248     0191                     	;# 
  1249     0192                     	;# 
  1250     0193                     	;# 
  1251     0193                     	;# 
  1252     0193                     	;# 
  1253     0194                     	;# 
  1254     0195                     	;# 
  1255     0196                     	;# 
  1256     0199                     	;# 
  1257     019A                     	;# 
  1258     019B                     	;# 
  1259     019B                     	;# 
  1260     019B                     	;# 
  1261     019B                     	;# 
  1262     019C                     	;# 
  1263     019C                     	;# 
  1264     019D                     	;# 
  1265     019E                     	;# 
  1266     019F                     	;# 
  1267     020C                     	;# 
  1268     020D                     	;# 
  1269     0211                     	;# 
  1270     0211                     	;# 
  1271     0212                     	;# 
  1272     0212                     	;# 
  1273     0213                     	;# 
  1274     0213                     	;# 
  1275     0214                     	;# 
  1276     0214                     	;# 
  1277     0215                     	;# 
  1278     0215                     	;# 
  1279     0215                     	;# 
  1280     0216                     	;# 
  1281     0216                     	;# 
  1282     0217                     	;# 
  1283     0217                     	;# 
  1284     0219                     	;# 
  1285     021A                     	;# 
  1286     021B                     	;# 
  1287     021C                     	;# 
  1288     021D                     	;# 
  1289     021E                     	;# 
  1290     021F                     	;# 
  1291     0291                     	;# 
  1292     0291                     	;# 
  1293     0292                     	;# 
  1294     0293                     	;# 
  1295     0294                     	;# 
  1296     0295                     	;# 
  1297     0295                     	;# 
  1298     0296                     	;# 
  1299     0298                     	;# 
  1300     0298                     	;# 
  1301     0299                     	;# 
  1302     029A                     	;# 
  1303     029B                     	;# 
  1304     029C                     	;# 
  1305     029C                     	;# 
  1306     029D                     	;# 
  1307     029E                     	;# 
  1308     029E                     	;# 
  1309     0311                     	;# 
  1310     0311                     	;# 
  1311     0312                     	;# 
  1312     0313                     	;# 
  1313     0318                     	;# 
  1314     0318                     	;# 
  1315     0319                     	;# 
  1316     031A                     	;# 
  1317     0394                     	;# 
  1318     0395                     	;# 
  1319     0396                     	;# 
  1320     039A                     	;# 
  1321     039C                     	;# 
  1322     039D                     	;# 
  1323     039E                     	;# 
  1324     039F                     	;# 
  1325     0415                     	;# 
  1326     0416                     	;# 
  1327     0417                     	;# 
  1328     041C                     	;# 
  1329     041D                     	;# 
  1330     041E                     	;# 
  1331     0FE4                     	;# 
  1332     0FE5                     	;# 
  1333     0FE6                     	;# 
  1334     0FE7                     	;# 
  1335     0FE8                     	;# 
  1336     0FE9                     	;# 
  1337     0FEA                     	;# 
  1338     0FEB                     	;# 
  1339     0FED                     	;# 
  1340     0FEE                     	;# 
  1341     0FEF                     	;# 
  1342     0000                     	;# 
  1343     0001                     	;# 
  1344     0002                     	;# 
  1345     0003                     	;# 
  1346     0004                     	;# 
  1347     0005                     	;# 
  1348     0006                     	;# 
  1349     0007                     	;# 
  1350     0008                     	;# 
  1351     0009                     	;# 
  1352     000A                     	;# 
  1353     000B                     	;# 
  1354     000C                     	;# 
  1355     000D                     	;# 
  1356     0011                     	;# 
  1357     0012                     	;# 
  1358     0013                     	;# 
  1359     0014                     	;# 
  1360     0015                     	;# 
  1361     0016                     	;# 
  1362     0016                     	;# 
  1363     0017                     	;# 
  1364     0018                     	;# 
  1365     0019                     	;# 
  1366     001A                     	;# 
  1367     001B                     	;# 
  1368     001C                     	;# 
  1369     001E                     	;# 
  1370     001F                     	;# 
  1371     008C                     	;# 
  1372     008D                     	;# 
  1373     0091                     	;# 
  1374     0092                     	;# 
  1375     0093                     	;# 
  1376     0094                     	;# 
  1377     0095                     	;# 
  1378     0096                     	;# 
  1379     0097                     	;# 
  1380     0098                     	;# 
  1381     0099                     	;# 
  1382     009A                     	;# 
  1383     009B                     	;# 
  1384     009B                     	;# 
  1385     009C                     	;# 
  1386     009D                     	;# 
  1387     009E                     	;# 
  1388     010C                     	;# 
  1389     010D                     	;# 
  1390     0111                     	;# 
  1391     0112                     	;# 
  1392     0113                     	;# 
  1393     0114                     	;# 
  1394     0115                     	;# 
  1395     0116                     	;# 
  1396     0117                     	;# 
  1397     0118                     	;# 
  1398     0119                     	;# 
  1399     011A                     	;# 
  1400     011B                     	;# 
  1401     011D                     	;# 
  1402     011E                     	;# 
  1403     018C                     	;# 
  1404     018D                     	;# 
  1405     0191                     	;# 
  1406     0191                     	;# 
  1407     0192                     	;# 
  1408     0193                     	;# 
  1409     0193                     	;# 
  1410     0193                     	;# 
  1411     0194                     	;# 
  1412     0195                     	;# 
  1413     0196                     	;# 
  1414     0199                     	;# 
  1415     019A                     	;# 
  1416     019B                     	;# 
  1417     019B                     	;# 
  1418     019B                     	;# 
  1419     019B                     	;# 
  1420     019C                     	;# 
  1421     019C                     	;# 
  1422     019D                     	;# 
  1423     019E                     	;# 
  1424     019F                     	;# 
  1425     020C                     	;# 
  1426     020D                     	;# 
  1427     0211                     	;# 
  1428     0211                     	;# 
  1429     0212                     	;# 
  1430     0212                     	;# 
  1431     0213                     	;# 
  1432     0213                     	;# 
  1433     0214                     	;# 
  1434     0214                     	;# 
  1435     0215                     	;# 
  1436     0215                     	;# 
  1437     0215                     	;# 
  1438     0216                     	;# 
  1439     0216                     	;# 
  1440     0217                     	;# 
  1441     0217                     	;# 
  1442     0219                     	;# 
  1443     021A                     	;# 
  1444     021B                     	;# 
  1445     021C                     	;# 
  1446     021D                     	;# 
  1447     021E                     	;# 
  1448     021F                     	;# 
  1449     0291                     	;# 
  1450     0291                     	;# 
  1451     0292                     	;# 
  1452     0293                     	;# 
  1453     0294                     	;# 
  1454     0295                     	;# 
  1455     0295                     	;# 
  1456     0296                     	;# 
  1457     0298                     	;# 
  1458     0298                     	;# 
  1459     0299                     	;# 
  1460     029A                     	;# 
  1461     029B                     	;# 
  1462     029C                     	;# 
  1463     029C                     	;# 
  1464     029D                     	;# 
  1465     029E                     	;# 
  1466     029E                     	;# 
  1467     0311                     	;# 
  1468     0311                     	;# 
  1469     0312                     	;# 
  1470     0313                     	;# 
  1471     0318                     	;# 
  1472     0318                     	;# 
  1473     0319                     	;# 
  1474     031A                     	;# 
  1475     0394                     	;# 
  1476     0395                     	;# 
  1477     0396                     	;# 
  1478     039A                     	;# 
  1479     039C                     	;# 
  1480     039D                     	;# 
  1481     039E                     	;# 
  1482     039F                     	;# 
  1483     0415                     	;# 
  1484     0416                     	;# 
  1485     0417                     	;# 
  1486     041C                     	;# 
  1487     041D                     	;# 
  1488     041E                     	;# 
  1489     0FE4                     	;# 
  1490     0FE5                     	;# 
  1491     0FE6                     	;# 
  1492     0FE7                     	;# 
  1493     0FE8                     	;# 
  1494     0FE9                     	;# 
  1495     0FEA                     	;# 
  1496     0FEB                     	;# 
  1497     0FED                     	;# 
  1498     0FEE                     	;# 
  1499     0FEF                     	;# 
  1500     0000                     	;# 
  1501     0001                     	;# 
  1502     0002                     	;# 
  1503     0003                     	;# 
  1504     0004                     	;# 
  1505     0005                     	;# 
  1506     0006                     	;# 
  1507     0007                     	;# 
  1508     0008                     	;# 
  1509     0009                     	;# 
  1510     000A                     	;# 
  1511     000B                     	;# 
  1512     000C                     	;# 
  1513     000D                     	;# 
  1514     0011                     	;# 
  1515     0012                     	;# 
  1516     0013                     	;# 
  1517     0014                     	;# 
  1518     0015                     	;# 
  1519     0016                     	;# 
  1520     0016                     	;# 
  1521     0017                     	;# 
  1522     0018                     	;# 
  1523     0019                     	;# 
  1524     001A                     	;# 
  1525     001B                     	;# 
  1526     001C                     	;# 
  1527     001E                     	;# 
  1528     001F                     	;# 
  1529     008C                     	;# 
  1530     008D                     	;# 
  1531     0091                     	;# 
  1532     0092                     	;# 
  1533     0093                     	;# 
  1534     0094                     	;# 
  1535     0095                     	;# 
  1536     0096                     	;# 
  1537     0097                     	;# 
  1538     0098                     	;# 
  1539     0099                     	;# 
  1540     009A                     	;# 
  1541     009B                     	;# 
  1542     009B                     	;# 
  1543     009C                     	;# 
  1544     009D                     	;# 
  1545     009E                     	;# 
  1546     010C                     	;# 
  1547     010D                     	;# 
  1548     0111                     	;# 
  1549     0112                     	;# 
  1550     0113                     	;# 
  1551     0114                     	;# 
  1552     0115                     	;# 
  1553     0116                     	;# 
  1554     0117                     	;# 
  1555     0118                     	;# 
  1556     0119                     	;# 
  1557     011A                     	;# 
  1558     011B                     	;# 
  1559     011D                     	;# 
  1560     011E                     	;# 
  1561     018C                     	;# 
  1562     018D                     	;# 
  1563     0191                     	;# 
  1564     0191                     	;# 
  1565     0192                     	;# 
  1566     0193                     	;# 
  1567     0193                     	;# 
  1568     0193                     	;# 
  1569     0194                     	;# 
  1570     0195                     	;# 
  1571     0196                     	;# 
  1572     0199                     	;# 
  1573     019A                     	;# 
  1574     019B                     	;# 
  1575     019B                     	;# 
  1576     019B                     	;# 
  1577     019B                     	;# 
  1578     019C                     	;# 
  1579     019C                     	;# 
  1580     019D                     	;# 
  1581     019E                     	;# 
  1582     019F                     	;# 
  1583     020C                     	;# 
  1584     020D                     	;# 
  1585     0211                     	;# 
  1586     0211                     	;# 
  1587     0212                     	;# 
  1588     0212                     	;# 
  1589     0213                     	;# 
  1590     0213                     	;# 
  1591     0214                     	;# 
  1592     0214                     	;# 
  1593     0215                     	;# 
  1594     0215                     	;# 
  1595     0215                     	;# 
  1596     0216                     	;# 
  1597     0216                     	;# 
  1598     0217                     	;# 
  1599     0217                     	;# 
  1600     0219                     	;# 
  1601     021A                     	;# 
  1602     021B                     	;# 
  1603     021C                     	;# 
  1604     021D                     	;# 
  1605     021E                     	;# 
  1606     021F                     	;# 
  1607     0291                     	;# 
  1608     0291                     	;# 
  1609     0292                     	;# 
  1610     0293                     	;# 
  1611     0294                     	;# 
  1612     0295                     	;# 
  1613     0295                     	;# 
  1614     0296                     	;# 
  1615     0298                     	;# 
  1616     0298                     	;# 
  1617     0299                     	;# 
  1618     029A                     	;# 
  1619     029B                     	;# 
  1620     029C                     	;# 
  1621     029C                     	;# 
  1622     029D                     	;# 
  1623     029E                     	;# 
  1624     029E                     	;# 
  1625     0311                     	;# 
  1626     0311                     	;# 
  1627     0312                     	;# 
  1628     0313                     	;# 
  1629     0318                     	;# 
  1630     0318                     	;# 
  1631     0319                     	;# 
  1632     031A                     	;# 
  1633     0394                     	;# 
  1634     0395                     	;# 
  1635     0396                     	;# 
  1636     039A                     	;# 
  1637     039C                     	;# 
  1638     039D                     	;# 
  1639     039E                     	;# 
  1640     039F                     	;# 
  1641     0415                     	;# 
  1642     0416                     	;# 
  1643     0417                     	;# 
  1644     041C                     	;# 
  1645     041D                     	;# 
  1646     041E                     	;# 
  1647     0FE4                     	;# 
  1648     0FE5                     	;# 
  1649     0FE6                     	;# 
  1650     0FE7                     	;# 
  1651     0FE8                     	;# 
  1652     0FE9                     	;# 
  1653     0FEA                     	;# 
  1654     0FEB                     	;# 
  1655     0FED                     	;# 
  1656     0FEE                     	;# 
  1657     0FEF                     	;# 
  1658     0000                     	;# 
  1659     0001                     	;# 
  1660     0002                     	;# 
  1661     0003                     	;# 
  1662     0004                     	;# 
  1663     0005                     	;# 
  1664     0006                     	;# 
  1665     0007                     	;# 
  1666     0008                     	;# 
  1667     0009                     	;# 
  1668     000A                     	;# 
  1669     000B                     	;# 
  1670     000C                     	;# 
  1671     000D                     	;# 
  1672     0011                     	;# 
  1673     0012                     	;# 
  1674     0013                     	;# 
  1675     0014                     	;# 
  1676     0015                     	;# 
  1677     0016                     	;# 
  1678     0016                     	;# 
  1679     0017                     	;# 
  1680     0018                     	;# 
  1681     0019                     	;# 
  1682     001A                     	;# 
  1683     001B                     	;# 
  1684     001C                     	;# 
  1685     001E                     	;# 
  1686     001F                     	;# 
  1687     008C                     	;# 
  1688     008D                     	;# 
  1689     0091                     	;# 
  1690     0092                     	;# 
  1691     0093                     	;# 
  1692     0094                     	;# 
  1693     0095                     	;# 
  1694     0096                     	;# 
  1695     0097                     	;# 
  1696     0098                     	;# 
  1697     0099                     	;# 
  1698     009A                     	;# 
  1699     009B                     	;# 
  1700     009B                     	;# 
  1701     009C                     	;# 
  1702     009D                     	;# 
  1703     009E                     	;# 
  1704     010C                     	;# 
  1705     010D                     	;# 
  1706     0111                     	;# 
  1707     0112                     	;# 
  1708     0113                     	;# 
  1709     0114                     	;# 
  1710     0115                     	;# 
  1711     0116                     	;# 
  1712     0117                     	;# 
  1713     0118                     	;# 
  1714     0119                     	;# 
  1715     011A                     	;# 
  1716     011B                     	;# 
  1717     011D                     	;# 
  1718     011E                     	;# 
  1719     018C                     	;# 
  1720     018D                     	;# 
  1721     0191                     	;# 
  1722     0191                     	;# 
  1723     0192                     	;# 
  1724     0193                     	;# 
  1725     0193                     	;# 
  1726     0193                     	;# 
  1727     0194                     	;# 
  1728     0195                     	;# 
  1729     0196                     	;# 
  1730     0199                     	;# 
  1731     019A                     	;# 
  1732     019B                     	;# 
  1733     019B                     	;# 
  1734     019B                     	;# 
  1735     019B                     	;# 
  1736     019C                     	;# 
  1737     019C                     	;# 
  1738     019D                     	;# 
  1739     019E                     	;# 
  1740     019F                     	;# 
  1741     020C                     	;# 
  1742     020D                     	;# 
  1743     0211                     	;# 
  1744     0211                     	;# 
  1745     0212                     	;# 
  1746     0212                     	;# 
  1747     0213                     	;# 
  1748     0213                     	;# 
  1749     0214                     	;# 
  1750     0214                     	;# 
  1751     0215                     	;# 
  1752     0215                     	;# 
  1753     0215                     	;# 
  1754     0216                     	;# 
  1755     0216                     	;# 
  1756     0217                     	;# 
  1757     0217                     	;# 
  1758     0219                     	;# 
  1759     021A                     	;# 
  1760     021B                     	;# 
  1761     021C                     	;# 
  1762     021D                     	;# 
  1763     021E                     	;# 
  1764     021F                     	;# 
  1765     0291                     	;# 
  1766     0291                     	;# 
  1767     0292                     	;# 
  1768     0293                     	;# 
  1769     0294                     	;# 
  1770     0295                     	;# 
  1771     0295                     	;# 
  1772     0296                     	;# 
  1773     0298                     	;# 
  1774     0298                     	;# 
  1775     0299                     	;# 
  1776     029A                     	;# 
  1777     029B                     	;# 
  1778     029C                     	;# 
  1779     029C                     	;# 
  1780     029D                     	;# 
  1781     029E                     	;# 
  1782     029E                     	;# 
  1783     0311                     	;# 
  1784     0311                     	;# 
  1785     0312                     	;# 
  1786     0313                     	;# 
  1787     0318                     	;# 
  1788     0318                     	;# 
  1789     0319                     	;# 
  1790     031A                     	;# 
  1791     0394                     	;# 
  1792     0395                     	;# 
  1793     0396                     	;# 
  1794     039A                     	;# 
  1795     039C                     	;# 
  1796     039D                     	;# 
  1797     039E                     	;# 
  1798     039F                     	;# 
  1799     0415                     	;# 
  1800     0416                     	;# 
  1801     0417                     	;# 
  1802     041C                     	;# 
  1803     041D                     	;# 
  1804     041E                     	;# 
  1805     0FE4                     	;# 
  1806     0FE5                     	;# 
  1807     0FE6                     	;# 
  1808     0FE7                     	;# 
  1809     0FE8                     	;# 
  1810     0FE9                     	;# 
  1811     0FEA                     	;# 
  1812     0FEB                     	;# 
  1813     0FED                     	;# 
  1814     0FEE                     	;# 
  1815     0FEF                     	;# 
  1816                           
  1817 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1818     0000                     
  1819 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1820     0000                     
  1821 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1822     0000                     
  1823                           	psect	idataBANK0
  1824     025B                     __pidataBANK0:
  1825                           
  1826                           ;initializer for _TxActivate
  1827     025B  3401               	retlw	1
  1828                           
  1829                           	psect	nvBANK0
  1830     0033                     __pnvBANK0:
  1831     0033                     _TMR1_InterruptHandler:
  1832     0033                     	ds	2
  1833     0035                     _EUSART_ErrorHandler:
  1834     0035                     	ds	2
  1835     0037                     _EUSART_OverrunErrorHandler:
  1836     0037                     	ds	2
  1837     0039                     _EUSART_FramingErrorHandler:
  1838     0039                     	ds	2
  1839     000B                     _INTCONbits	set	11
  1840     0019                     _T1GCONbits	set	25
  1841     0018                     _T1CONbits	set	24
  1842     0018                     _T1CON	set	24
  1843     0016                     _TMR1L	set	22
  1844     0017                     _TMR1H	set	23
  1845     0019                     _T1GCON	set	25
  1846     001C                     _T2CONbits	set	28
  1847     001C                     _T2CON	set	28
  1848     0011                     _PIR1bits	set	17
  1849     001A                     _TMR2	set	26
  1850     001B                     _PR2	set	27
  1851     0091                     _PIE1bits	set	145
  1852     009D                     _ADCON0bits	set	157
  1853     009D                     _ADCON0	set	157
  1854     009C                     _ADRESH	set	156
  1855     009B                     _ADRESL	set	155
  1856     009E                     _ADCON1	set	158
  1857     0097                     _WDTCON	set	151
  1858     0098                     _OSCTUNE	set	152
  1859     0099                     _OSCCON	set	153
  1860     0095                     _OPTION_REGbits	set	149
  1861     008D                     _TRISB	set	141
  1862     008C                     _TRISA	set	140
  1863     0117                     _FVRCONbits	set	279
  1864     0117                     _FVRCON	set	279
  1865     0116                     _BORCON	set	278
  1866     011E                     _APFCON1	set	286
  1867     011D                     _APFCON0	set	285
  1868     010D                     _LATB	set	269
  1869     010C                     _LATA	set	268
  1870     019A                     _TXREG	set	410
  1871     0199                     _RCREG	set	409
  1872     019D                     _RCSTAbits	set	413
  1873     019E                     _TXSTAbits	set	414
  1874     019C                     _SPBRGH	set	412
  1875     019B                     _SPBRGL	set	411
  1876     019E                     _TXSTA	set	414
  1877     019D                     _RCSTA	set	413
  1878     019F                     _BAUDCON	set	415
  1879     018C                     _ANSELA	set	396
  1880     018D                     _ANSELB	set	397
  1881     020C                     _WPUA	set	524
  1882     020D                     _WPUB	set	525
  1883     029E                     _CCPTMRS0bits	set	670
  1884     0291                     _CCPR1L	set	657
  1885     0292                     _CCPR1H	set	658
  1886     0296                     _PSTR1CON	set	662
  1887     0294                     _PWM1CON	set	660
  1888     0295                     _ECCP1AS	set	661
  1889     0293                     _CCP1CON	set	659
  1890                           
  1891                           	psect	cinit
  1892     001B                     start_initialization:	
  1893                           ; #config settings
  1894                           
  1895     001B                     __initialization:
  1896                           
  1897                           ; Initialize objects allocated to BANK0
  1898     001B  3182  225B  3180   	fcall	__pidataBANK0	;fetch initializer
  1899     001E  00BE               	movwf	__pdataBANK0& (0+127)
  1900                           
  1901                           ; Clear objects allocated to COMMON
  1902     001F  01F9               	clrf	__pbssCOMMON& (0+127)
  1903     0020  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1904                           
  1905                           ; Clear objects allocated to BANK0
  1906     0021  3020               	movlw	low __pbssBANK0
  1907     0022  0084               	movwf	4
  1908     0023  3000               	movlw	high __pbssBANK0
  1909     0024  0085               	movwf	5
  1910     0025  3013               	movlw	19
  1911     0026  3182  2230  3180   	fcall	clear_ram0
  1912     0029                     end_of_initialization:	
  1913                           ;End of C runtime variable initialization code
  1914                           
  1915     0029                     __end_of__initialization:
  1916     0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1917     002A  0020               	movlb	0
  1918     002B  3180  282D         	ljmp	_main	;jump to C main() function
  1919                           
  1920                           	psect	bssCOMMON
  1921     0079                     __pbssCOMMON:
  1922     0079                     _timer1ReloadVal:
  1923     0079                     	ds	2
  1924                           
  1925                           	psect	bssBANK0
  1926     0020                     __pbssBANK0:
  1927     0020                     _bufferRx:
  1928     0020                     	ds	3
  1929     0023                     _dutyRx:
  1930     0023                     	ds	2
  1931     0025                     _gainTempRx:
  1932     0025                     	ds	2
  1933     0027                     _gainLumRx:
  1934     0027                     	ds	2
  1935     0029                     _LumTx:
  1936     0029                     	ds	2
  1937     002B                     _TempTx:
  1938     002B                     	ds	2
  1939     002D                     TMR1_ISR@CountCallBack:
  1940     002D                     	ds	2
  1941     002F                     _ADC_InterruptHandler:
  1942     002F                     	ds	2
  1943     0031                     _countRx:
  1944     0031                     	ds	1
  1945     0032                     _eusartRxLastError:
  1946     0032                     	ds	1
  1947                           
  1948                           	psect	dataBANK0
  1949     003E                     __pdataBANK0:
  1950     003E                     _TxActivate:
  1951     003E                     	ds	1
  1952                           
  1953                           	psect	clrtext
  1954     0230                     clear_ram0:	
  1955                           ;	Called with FSR0 containing the base address, and
  1956                           ;	WREG with the size to clear
  1957                           
  1958     0230  0064               	clrwdt	;clear the watchdog before getting into this loop
  1959     0231                     clrloop0:
  1960     0231  0180               	clrf	0	;clear RAM location pointed to by FSR
  1961     0232  3101               	addfsr 0,1
  1962     0233  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1963     0234  2A31               	goto	clrloop0	;have we reached the end yet?
  1964     0235  3400               	retlw	0	;all done for this memory range, return
  1965                           
  1966                           	psect	cstackCOMMON
  1967     0070                     __pcstackCOMMON:
  1968     0070                     ?_OSCILLATOR_Initialize:
  1969     0070                     ?_WDT_Initialize:	
  1970                           ; 1 bytes @ 0x0
  1971                           
  1972     0070                     ?_FVR_Initialize:	
  1973                           ; 1 bytes @ 0x0
  1974                           
  1975     0070                     ?_ADC_Initialize:	
  1976                           ; 1 bytes @ 0x0
  1977                           
  1978     0070                     ?_EPWM1_Initialize:	
  1979                           ; 1 bytes @ 0x0
  1980                           
  1981     0070                     ?_TMR2_Initialize:	
  1982                           ; 1 bytes @ 0x0
  1983                           
  1984     0070                     ?_TMR1_Initialize:	
  1985                           ; 1 bytes @ 0x0
  1986                           
  1987     0070                     ?_EUSART_Initialize:	
  1988                           ; 1 bytes @ 0x0
  1989                           
  1990     0070                     ?_TMR1_DefaultInterruptHandler:	
  1991                           ; 1 bytes @ 0x0
  1992                           
  1993     0070                     ??_TMR1_DefaultInterruptHandler:	
  1994                           ; 1 bytes @ 0x0
  1995                           
  1996     0070                     ?_TMR1_CallBack:	
  1997                           ; 1 bytes @ 0x0
  1998                           
  1999     0070                     ?_PIN_MANAGER_Initialize:	
  2000                           ; 1 bytes @ 0x0
  2001                           
  2002     0070                     ?_SYSTEM_Initialize:	
  2003                           ; 1 bytes @ 0x0
  2004                           
  2005     0070                     ?_EUSART_is_rx_ready:	
  2006                           ; 1 bytes @ 0x0
  2007                           
  2008     0070                     ?_EUSART_Read:	
  2009                           ; 1 bytes @ 0x0
  2010                           
  2011     0070                     ?_EUSART_Write:	
  2012                           ; 1 bytes @ 0x0
  2013                           
  2014     0070                     ??_EUSART_Write:	
  2015                           ; 1 bytes @ 0x0
  2016                           
  2017     0070                     ?_TMR1_WriteTimer:	
  2018                           ; 1 bytes @ 0x0
  2019                           
  2020     0070                     ?_TMR1_ISR:	
  2021                           ; 1 bytes @ 0x0
  2022                           
  2023     0070                     ?_INTERRUPT_InterruptManager:	
  2024                           ; 1 bytes @ 0x0
  2025                           
  2026     0070                     ?_analisaRx:	
  2027                           ; 1 bytes @ 0x0
  2028                           
  2029     0070                     ?_enviaTx:	
  2030                           ; 1 bytes @ 0x0
  2031                           
  2032     0070                     ?_main:	
  2033                           ; 1 bytes @ 0x0
  2034                           
  2035     0070                     EUSART_Write@txData:	
  2036                           ; 1 bytes @ 0x0
  2037                           
  2038     0070                     TMR1_WriteTimer@timerVal:	
  2039                           ; 1 bytes @ 0x0
  2040                           
  2041                           
  2042                           ; 2 bytes @ 0x0
  2043     0070                     	ds	1
  2044     0071                     ??_TMR1_CallBack:
  2045     0071                     ??_enviaTx:	
  2046                           ; 1 bytes @ 0x1
  2047                           
  2048                           
  2049                           ; 1 bytes @ 0x1
  2050     0071                     	ds	1
  2051     0072                     ??_OSCILLATOR_Initialize:
  2052     0072                     ??_WDT_Initialize:	
  2053                           ; 1 bytes @ 0x2
  2054                           
  2055     0072                     ??_FVR_Initialize:	
  2056                           ; 1 bytes @ 0x2
  2057                           
  2058     0072                     ??_ADC_Initialize:	
  2059                           ; 1 bytes @ 0x2
  2060                           
  2061     0072                     ??_EPWM1_Initialize:	
  2062                           ; 1 bytes @ 0x2
  2063                           
  2064     0072                     ??_TMR2_Initialize:	
  2065                           ; 1 bytes @ 0x2
  2066                           
  2067     0072                     ?_EUSART_SetFramingErrorHandler:	
  2068                           ; 1 bytes @ 0x2
  2069                           
  2070     0072                     ?_EUSART_SetOverrunErrorHandler:	
  2071                           ; 1 bytes @ 0x2
  2072                           
  2073     0072                     ?_EUSART_SetErrorHandler:	
  2074                           ; 1 bytes @ 0x2
  2075                           
  2076     0072                     ?_TMR1_SetInterruptHandler:	
  2077                           ; 1 bytes @ 0x2
  2078                           
  2079     0072                     ??_PIN_MANAGER_Initialize:	
  2080                           ; 1 bytes @ 0x2
  2081                           
  2082     0072                     ?_EPWM1_LoadDutyValue:	
  2083                           ; 1 bytes @ 0x2
  2084                           
  2085     0072                     ??_EUSART_is_rx_ready:	
  2086                           ; 1 bytes @ 0x2
  2087                           
  2088     0072                     ??_EUSART_Read:	
  2089                           ; 1 bytes @ 0x2
  2090                           
  2091     0072                     ??_TMR1_WriteTimer:	
  2092                           ; 1 bytes @ 0x2
  2093                           
  2094     0072                     ??_TMR1_ISR:	
  2095                           ; 1 bytes @ 0x2
  2096                           
  2097     0072                     ??_INTERRUPT_InterruptManager:	
  2098                           ; 1 bytes @ 0x2
  2099                           
  2100     0072                     ?_ADC_GetConversion:	
  2101                           ; 1 bytes @ 0x2
  2102                           
  2103     0072                     ?___wmul:	
  2104                           ; 2 bytes @ 0x2
  2105                           
  2106     0072                     EPWM1_LoadDutyValue@dutyValue:	
  2107                           ; 2 bytes @ 0x2
  2108                           
  2109     0072                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2110                           ; 2 bytes @ 0x2
  2111                           
  2112     0072                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2113                           ; 2 bytes @ 0x2
  2114                           
  2115     0072                     EUSART_SetErrorHandler@interruptHandler:	
  2116                           ; 2 bytes @ 0x2
  2117                           
  2118     0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  2119                           ; 2 bytes @ 0x2
  2120                           
  2121     0072                     ___wmul@multiplier:	
  2122                           ; 2 bytes @ 0x2
  2123                           
  2124                           
  2125                           ; 2 bytes @ 0x2
  2126     0072                     	ds	2
  2127     0074                     ??_TMR1_Initialize:
  2128     0074                     ??_EUSART_Initialize:	
  2129                           ; 1 bytes @ 0x4
  2130                           
  2131     0074                     ??_EUSART_SetFramingErrorHandler:	
  2132                           ; 1 bytes @ 0x4
  2133                           
  2134     0074                     ??_EUSART_SetOverrunErrorHandler:	
  2135                           ; 1 bytes @ 0x4
  2136                           
  2137     0074                     ??_EUSART_SetErrorHandler:	
  2138                           ; 1 bytes @ 0x4
  2139                           
  2140     0074                     ??_TMR1_SetInterruptHandler:	
  2141                           ; 1 bytes @ 0x4
  2142                           
  2143     0074                     ??_SYSTEM_Initialize:	
  2144                           ; 1 bytes @ 0x4
  2145                           
  2146     0074                     ??_EPWM1_LoadDutyValue:	
  2147                           ; 1 bytes @ 0x4
  2148                           
  2149     0074                     ??_ADC_GetConversion:	
  2150                           ; 1 bytes @ 0x4
  2151                           
  2152     0074                     ___wmul@multiplicand:	
  2153                           ; 1 bytes @ 0x4
  2154                           
  2155                           
  2156                           ; 2 bytes @ 0x4
  2157     0074                     	ds	1
  2158     0075                     ADC_GetConversion@channel:
  2159                           
  2160                           ; 1 bytes @ 0x5
  2161     0075                     	ds	1
  2162     0076                     ??_analisaRx:
  2163     0076                     ??___wmul:	
  2164                           ; 1 bytes @ 0x6
  2165                           
  2166     0076                     ___wmul@product:	
  2167                           ; 1 bytes @ 0x6
  2168                           
  2169                           
  2170                           ; 2 bytes @ 0x6
  2171     0076                     	ds	2
  2172     0078                     ??_main:
  2173                           
  2174                           ; 1 bytes @ 0x8
  2175     0078                     	ds	1
  2176                           
  2177                           	psect	cstackBANK0
  2178     003B                     __pcstackBANK0:
  2179     003B                     main@rxChar:
  2180                           
  2181                           ; 1 bytes @ 0x0
  2182     003B                     	ds	1
  2183     003C                     main@i:
  2184                           
  2185                           ; 2 bytes @ 0x1
  2186     003C                     	ds	2
  2187                           
  2188                           	psect	maintext
  2189     002D                     __pmaintext:	
  2190 ;;
  2191 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2192 ;;
  2193 ;; *************** function _main *****************
  2194 ;; Defined at:
  2195 ;;		line 138 in file "main.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  i               2    1[BANK0 ] int 
  2200 ;;  rxChar          1    0[BANK0 ] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : B1F/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2210 ;;      Params:         0       0       0       0       0       0
  2211 ;;      Locals:         0       3       0       0       0       0
  2212 ;;      Temps:          1       0       0       0       0       0
  2213 ;;      Totals:         1       3       0       0       0       0
  2214 ;;Total ram usage:        4 bytes
  2215 ;; Hardware stack levels required when called: 8
  2216 ;; This function calls:
  2217 ;;		_ADC_GetConversion
  2218 ;;		_EUSART_Read
  2219 ;;		_EUSART_is_rx_ready
  2220 ;;		_SYSTEM_Initialize
  2221 ;;		_TMR1_SetInterruptHandler
  2222 ;;		___wmul
  2223 ;;		_analisaRx
  2224 ;; This function is called by:
  2225 ;;		Startup code after reset
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229     002D                     _main:	
  2230                           ;psect for function _main
  2231                           
  2232     002D                     l1671:	
  2233                           ;incstack = 0
  2234                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2235                           
  2236                           
  2237                           ;main.c: 141:     SYSTEM_Initialize();
  2238     002D  3181  2158  3180   	fcall	_SYSTEM_Initialize
  2239     0030                     l1673:
  2240                           
  2241                           ;main.c: 147:     (INTCONbits.GIE = 1);
  2242     0030  178B               	bsf	11,7	;volatile
  2243     0031                     l1675:
  2244                           
  2245                           ;main.c: 150:     (INTCONbits.PEIE = 1);
  2246     0031  170B               	bsf	11,6	;volatile
  2247     0032                     l1677:
  2248                           
  2249                           ;main.c: 158:     gainTempRx.gainTemp = 2;
  2250     0032  3002               	movlw	2
  2251     0033  0020               	movlb	0	; select bank0
  2252     0034  00A5               	movwf	_gainTempRx
  2253     0035  3000               	movlw	0
  2254     0036  00A6               	movwf	_gainTempRx+1
  2255     0037                     l1679:
  2256                           
  2257                           ;main.c: 159:     gainLumRx.gainLum = 2;
  2258     0037  3002               	movlw	2
  2259     0038  00A7               	movwf	_gainLumRx
  2260     0039  3000               	movlw	0
  2261     003A  00A8               	movwf	_gainLumRx+1
  2262                           
  2263                           ;main.c: 160:     TMR1_SetInterruptHandler(enviaTx);
  2264     003B  301B               	movlw	low _enviaTx
  2265     003C  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2266     003D  3001               	movlw	high _enviaTx
  2267     003E  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2268     003F  3182  2236  3180   	fcall	_TMR1_SetInterruptHandler
  2269     0042                     l389:	
  2270                           ;main.c: 161:     while (1)
  2271                           
  2272                           
  2273                           ;main.c: 162:     {;main.c: 163:         LumTx.lum = ADC_GetConversion(0);
  2274     0042  3000               	movlw	0
  2275     0043  3181  2174  3180   	fcall	_ADC_GetConversion
  2276     0046  0873               	movf	?_ADC_GetConversion+1,w
  2277     0047  0020               	movlb	0	; select bank0
  2278     0048  00AA               	movwf	_LumTx+1
  2279     0049  0872               	movf	?_ADC_GetConversion,w
  2280     004A  00A9               	movwf	_LumTx
  2281                           
  2282                           ;main.c: 164:         LumTx.lum = LumTx.lum*gainLumRx.gainLum;
  2283     004B  082A               	movf	_LumTx+1,w
  2284     004C  00F3               	movwf	___wmul@multiplier+1
  2285     004D  0829               	movf	_LumTx,w
  2286     004E  00F2               	movwf	___wmul@multiplier
  2287     004F  0828               	movf	_gainLumRx+1,w
  2288     0050  00F5               	movwf	___wmul@multiplicand+1
  2289     0051  0827               	movf	_gainLumRx,w
  2290     0052  00F4               	movwf	___wmul@multiplicand
  2291     0053  3180  20FC  3180   	fcall	___wmul
  2292     0056  0873               	movf	?___wmul+1,w
  2293     0057  0020               	movlb	0	; select bank0
  2294     0058  00AA               	movwf	_LumTx+1
  2295     0059  0872               	movf	?___wmul,w
  2296     005A  00A9               	movwf	_LumTx
  2297                           
  2298                           ;main.c: 165:         TempTx.temp = ADC_GetConversion(1);
  2299     005B  3001               	movlw	1
  2300     005C  3181  2174  3180   	fcall	_ADC_GetConversion
  2301     005F  0873               	movf	?_ADC_GetConversion+1,w
  2302     0060  0020               	movlb	0	; select bank0
  2303     0061  00AC               	movwf	_TempTx+1
  2304     0062  0872               	movf	?_ADC_GetConversion,w
  2305     0063  00AB               	movwf	_TempTx
  2306                           
  2307                           ;main.c: 166:         TempTx.temp = TempTx.temp*gainTempRx.gainTemp;
  2308     0064  082C               	movf	_TempTx+1,w
  2309     0065  00F3               	movwf	___wmul@multiplier+1
  2310     0066  082B               	movf	_TempTx,w
  2311     0067  00F2               	movwf	___wmul@multiplier
  2312     0068  0826               	movf	_gainTempRx+1,w
  2313     0069  00F5               	movwf	___wmul@multiplicand+1
  2314     006A  0825               	movf	_gainTempRx,w
  2315     006B  00F4               	movwf	___wmul@multiplicand
  2316     006C  3180  20FC  3180   	fcall	___wmul
  2317     006F  0873               	movf	?___wmul+1,w
  2318     0070  0020               	movlb	0	; select bank0
  2319     0071  00AC               	movwf	_TempTx+1
  2320     0072  0872               	movf	?___wmul,w
  2321     0073  00AB               	movwf	_TempTx
  2322                           
  2323                           ;main.c: 178:         uint8_t rxChar;;main.c: 179:         if(EUSART_is_rx_ready()){
  2324     0074  3182  224E  3180   	fcall	_EUSART_is_rx_ready
  2325     0077  3A00               	xorlw	0
  2326     0078  1903               	skipnz
  2327     0079  287B               	goto	u631
  2328     007A  287C               	goto	u630
  2329     007B                     u631:
  2330     007B  2842               	goto	l389
  2331     007C                     u630:
  2332     007C                     l1681:
  2333                           
  2334                           ;main.c: 180:             for(int i = 0; i<3;i++) {
  2335     007C  0020               	movlb	0	; select bank0
  2336     007D  01BC               	clrf	main@i
  2337     007E  01BD               	clrf	main@i+1
  2338     007F                     l1687:
  2339                           
  2340                           ;main.c: 181:                 rxChar = EUSART_Read();
  2341     007F  3181  21E5  3180   	fcall	_EUSART_Read
  2342     0082  0020               	movlb	0	; select bank0
  2343     0083  00BB               	movwf	main@rxChar
  2344     0084                     l1689:
  2345                           
  2346                           ;main.c: 182:                 bufferRx[i] = rxChar;
  2347     0084  083C               	movf	main@i,w
  2348     0085  3E20               	addlw	(low (_bufferRx| 0))& (0+255)
  2349     0086  0086               	movwf	6
  2350     0087  0187               	clrf	7
  2351     0088  083B               	movf	main@rxChar,w
  2352     0089  0081               	movwf	1
  2353     008A                     l1691:
  2354                           
  2355                           ;main.c: 183:             }
  2356     008A  3001               	movlw	1
  2357     008B  07BC               	addwf	main@i,f
  2358     008C  3000               	movlw	0
  2359     008D  3DBD               	addwfc	main@i+1,f
  2360     008E                     l1693:
  2361     008E  083D               	movf	main@i+1,w
  2362     008F  3A80               	xorlw	128
  2363     0090  00F8               	movwf	??_main
  2364     0091  3080               	movlw	128
  2365     0092  0278               	subwf	??_main,w
  2366     0093  1D03               	skipz
  2367     0094  2897               	goto	u645
  2368     0095  3003               	movlw	3
  2369     0096  023C               	subwf	main@i,w
  2370     0097                     u645:
  2371     0097  1C03               	skipc
  2372     0098  289A               	goto	u641
  2373     0099  289B               	goto	u640
  2374     009A                     u641:
  2375     009A  287F               	goto	l1687
  2376     009B                     u640:
  2377     009B                     l1695:
  2378                           
  2379                           ;main.c: 184:             analisaRx();
  2380     009B  3180  20A1  3180   	fcall	_analisaRx
  2381     009E  2842               	goto	l389
  2382     009F  3180  2819         	ljmp	start
  2383     00A1                     __end_of_main:
  2384                           
  2385                           	psect	text1
  2386     00A1                     __ptext1:	
  2387 ;; *************** function _analisaRx *****************
  2388 ;; Defined at:
  2389 ;;		line 95 in file "main.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2403 ;;      Params:         0       0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 6
  2410 ;; This function calls:
  2411 ;;		_EPWM1_LoadDutyValue
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417     00A1                     _analisaRx:	
  2418                           ;psect for function _analisaRx
  2419                           
  2420     00A1                     l1635:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _analisaRx: [wreg+status,2+status,0+pclath+cstack]
  2423                           
  2424                           
  2425                           ;main.c: 96:     if (bufferRx[0]==0x80){
  2426     00A1  3080               	movlw	128
  2427     00A2  0020               	movlb	0	; select bank0
  2428     00A3  0620               	xorwf	_bufferRx,w
  2429     00A4  1D03               	btfss	3,2
  2430     00A5  28A7               	goto	u541
  2431     00A6  28A8               	goto	u540
  2432     00A7                     u541:
  2433     00A7  28B2               	goto	l1643
  2434     00A8                     u540:
  2435     00A8                     l1637:
  2436                           
  2437                           ;main.c: 97:         if (bufferRx[2]){
  2438     00A8  0822               	movf	_bufferRx+2,w
  2439     00A9  1903               	btfsc	3,2
  2440     00AA  28AC               	goto	u551
  2441     00AB  28AD               	goto	u550
  2442     00AC                     u551:
  2443     00AC  28B0               	goto	l1641
  2444     00AD                     u550:
  2445     00AD                     l1639:
  2446                           
  2447                           ;main.c: 98:             TxActivate = 1;
  2448     00AD  01BE               	clrf	_TxActivate
  2449     00AE  0ABE               	incf	_TxActivate,f
  2450                           
  2451                           ;main.c: 99:         }
  2452     00AF  28D9               	goto	l380
  2453     00B0                     l1641:
  2454                           
  2455                           ;main.c: 101:             TxActivate = 0;
  2456     00B0  01BE               	clrf	_TxActivate
  2457     00B1  28D9               	goto	l380
  2458     00B2                     l1643:
  2459     00B2  3081               	movlw	129
  2460     00B3  0620               	xorwf	_bufferRx,w
  2461     00B4  1D03               	btfss	3,2
  2462     00B5  28B7               	goto	u561
  2463     00B6  28B8               	goto	u560
  2464     00B7                     u561:
  2465     00B7  28C4               	goto	l1649
  2466     00B8                     u560:
  2467     00B8                     l1645:
  2468                           
  2469                           ;main.c: 105:         dutyRx.msb = bufferRx[1];
  2470     00B8  0821               	movf	_bufferRx+1,w
  2471     00B9  00A4               	movwf	_dutyRx+1
  2472                           
  2473                           ;main.c: 106:         dutyRx.lsb = bufferRx[2];
  2474     00BA  0822               	movf	_bufferRx+2,w
  2475     00BB  00A3               	movwf	_dutyRx
  2476     00BC                     l1647:
  2477                           
  2478                           ;main.c: 107:         EPWM1_LoadDutyValue(dutyRx.duty);
  2479     00BC  0824               	movf	_dutyRx+1,w
  2480     00BD  00F3               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  2481     00BE  0823               	movf	_dutyRx,w
  2482     00BF  00F2               	movwf	EPWM1_LoadDutyValue@dutyValue
  2483     00C0  3181  21A7  3180   	fcall	_EPWM1_LoadDutyValue
  2484                           
  2485                           ;main.c: 108:     }
  2486     00C3  28D9               	goto	l380
  2487     00C4                     l1649:
  2488     00C4  3082               	movlw	130
  2489     00C5  0620               	xorwf	_bufferRx,w
  2490     00C6  1D03               	btfss	3,2
  2491     00C7  28C9               	goto	u571
  2492     00C8  28CA               	goto	u570
  2493     00C9                     u571:
  2494     00C9  28CF               	goto	l1653
  2495     00CA                     u570:
  2496     00CA                     l1651:
  2497                           
  2498                           ;main.c: 110:         gainTempRx.msb = bufferRx[1];
  2499     00CA  0821               	movf	_bufferRx+1,w
  2500     00CB  00A6               	movwf	_gainTempRx+1
  2501                           
  2502                           ;main.c: 111:         gainTempRx.lsb = bufferRx[2];
  2503     00CC  0822               	movf	_bufferRx+2,w
  2504     00CD  00A5               	movwf	_gainTempRx
  2505                           
  2506                           ;main.c: 112:     }
  2507     00CE  28D9               	goto	l380
  2508     00CF                     l1653:
  2509     00CF  3083               	movlw	131
  2510     00D0  0620               	xorwf	_bufferRx,w
  2511     00D1  1D03               	btfss	3,2
  2512     00D2  28D4               	goto	u581
  2513     00D3  28D5               	goto	u580
  2514     00D4                     u581:
  2515     00D4  28D9               	goto	l380
  2516     00D5                     u580:
  2517     00D5                     l1655:
  2518                           
  2519                           ;main.c: 114:         gainLumRx.msb = bufferRx[1];
  2520     00D5  0821               	movf	_bufferRx+1,w
  2521     00D6  00A8               	movwf	_gainLumRx+1
  2522                           
  2523                           ;main.c: 115:         gainLumRx.lsb = bufferRx[2];
  2524     00D7  0822               	movf	_bufferRx+2,w
  2525     00D8  00A7               	movwf	_gainLumRx
  2526     00D9                     l380:
  2527     00D9  0008               	return
  2528     00DA                     __end_of_analisaRx:
  2529                           
  2530                           	psect	text2
  2531     01A7                     __ptext2:	
  2532 ;; *************** function _EPWM1_LoadDutyValue *****************
  2533 ;; Defined at:
  2534 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  dutyValue       2    2[COMMON] unsigned short 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2548 ;;      Params:         2       0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0       0
  2550 ;;      Temps:          2       0       0       0       0       0
  2551 ;;      Totals:         4       0       0       0       0       0
  2552 ;;Total ram usage:        4 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 5
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_analisaRx
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562     01A7                     _EPWM1_LoadDutyValue:	
  2563                           ;psect for function _EPWM1_LoadDutyValue
  2564                           
  2565     01A7                     l1603:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  2568                           
  2569                           
  2570                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  2571     01A7  0873               	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  2572     01A8  00F5               	movwf	??_EPWM1_LoadDutyValue+1
  2573     01A9  0872               	movf	EPWM1_LoadDutyValue@dutyValue,w
  2574     01AA  00F4               	movwf	??_EPWM1_LoadDutyValue
  2575     01AB  36F5               	lsrf	??_EPWM1_LoadDutyValue+1,f
  2576     01AC  0CF4               	rrf	??_EPWM1_LoadDutyValue,f
  2577     01AD  36F5               	lsrf	??_EPWM1_LoadDutyValue+1,f
  2578     01AE  0CF4               	rrf	??_EPWM1_LoadDutyValue,f
  2579     01AF  0874               	movf	??_EPWM1_LoadDutyValue,w
  2580     01B0  0025               	movlb	5	; select bank5
  2581     01B1  0091               	movwf	17	;volatile
  2582                           
  2583                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  2584     01B2  0872               	movf	EPWM1_LoadDutyValue@dutyValue,w
  2585     01B3  3903               	andlw	3
  2586     01B4  00F4               	movwf	??_EPWM1_LoadDutyValue
  2587     01B5  3004               	movlw	4
  2588     01B6                     u505:
  2589     01B6  35F4               	lslf	??_EPWM1_LoadDutyValue,f
  2590     01B7  0B89               	decfsz	9,f
  2591     01B8  29B6               	goto	u505
  2592     01B9  0813               	movf	19,w	;volatile
  2593     01BA  39CF               	andlw	207
  2594     01BB  0474               	iorwf	??_EPWM1_LoadDutyValue,w
  2595     01BC  0093               	movwf	19	;volatile
  2596     01BD                     l115:
  2597     01BD  0008               	return
  2598     01BE                     __end_of_EPWM1_LoadDutyValue:
  2599                           
  2600                           	psect	text3
  2601     00FC                     __ptext3:	
  2602 ;; *************** function ___wmul *****************
  2603 ;; Defined at:
  2604 ;;		line 15 in file "/opt/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  multiplier      2    2[COMMON] unsigned int 
  2607 ;;  multiplicand    2    4[COMMON] unsigned int 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  product         2    6[COMMON] unsigned int 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  2    2[COMMON] unsigned int 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2619 ;;      Params:         4       0       0       0       0       0
  2620 ;;      Locals:         2       0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0
  2622 ;;      Totals:         6       0       0       0       0       0
  2623 ;;Total ram usage:        6 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 5
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633     00FC                     ___wmul:	
  2634                           ;psect for function ___wmul
  2635                           
  2636     00FC                     l1657:	
  2637                           ;incstack = 0
  2638                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2639                           
  2640     00FC  01F6               	clrf	___wmul@product
  2641     00FD  01F7               	clrf	___wmul@product+1
  2642     00FE                     l1659:
  2643     00FE  1C72               	btfss	___wmul@multiplier,0
  2644     00FF  2901               	goto	u591
  2645     0100  2902               	goto	u590
  2646     0101                     u591:
  2647     0101  2906               	goto	l545
  2648     0102                     u590:
  2649     0102                     l1661:
  2650     0102  0874               	movf	___wmul@multiplicand,w
  2651     0103  07F6               	addwf	___wmul@product,f
  2652     0104  0875               	movf	___wmul@multiplicand+1,w
  2653     0105  3DF7               	addwfc	___wmul@product+1,f
  2654     0106                     l545:
  2655     0106  3001               	movlw	1
  2656     0107                     u605:
  2657     0107  35F4               	lslf	___wmul@multiplicand,f
  2658     0108  0DF5               	rlf	___wmul@multiplicand+1,f
  2659     0109  0B89               	decfsz	9,f
  2660     010A  2907               	goto	u605
  2661     010B                     l1663:
  2662     010B  3001               	movlw	1
  2663     010C                     u615:
  2664     010C  36F3               	lsrf	___wmul@multiplier+1,f
  2665     010D  0CF2               	rrf	___wmul@multiplier,f
  2666     010E  0B89               	decfsz	9,f
  2667     010F  290C               	goto	u615
  2668     0110                     l1665:
  2669     0110  0872               	movf	___wmul@multiplier,w
  2670     0111  0473               	iorwf	___wmul@multiplier+1,w
  2671     0112  1D03               	btfss	3,2
  2672     0113  2915               	goto	u621
  2673     0114  2916               	goto	u620
  2674     0115                     u621:
  2675     0115  28FE               	goto	l1659
  2676     0116                     u620:
  2677     0116                     l1667:
  2678     0116  0877               	movf	___wmul@product+1,w
  2679     0117  00F3               	movwf	?___wmul+1
  2680     0118  0876               	movf	___wmul@product,w
  2681     0119  00F2               	movwf	?___wmul
  2682     011A                     l547:
  2683     011A  0008               	return
  2684     011B                     __end_of___wmul:
  2685                           
  2686                           	psect	text4
  2687     0158                     __ptext4:	
  2688 ;; *************** function _SYSTEM_Initialize *****************
  2689 ;; Defined at:
  2690 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2704 ;;      Params:         0       0       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0
  2707 ;;      Totals:         0       0       0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 7
  2711 ;; This function calls:
  2712 ;;		_ADC_Initialize
  2713 ;;		_EPWM1_Initialize
  2714 ;;		_EUSART_Initialize
  2715 ;;		_FVR_Initialize
  2716 ;;		_OSCILLATOR_Initialize
  2717 ;;		_PIN_MANAGER_Initialize
  2718 ;;		_TMR1_Initialize
  2719 ;;		_TMR2_Initialize
  2720 ;;		_WDT_Initialize
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726     0158                     _SYSTEM_Initialize:	
  2727                           ;psect for function _SYSTEM_Initialize
  2728                           
  2729     0158                     l1605:	
  2730                           ;incstack = 0
  2731                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2732                           
  2733                           
  2734                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2735     0158  3181  218F  3181   	fcall	_PIN_MANAGER_Initialize
  2736                           
  2737                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2738     015B  3182  2229  3181   	fcall	_OSCILLATOR_Initialize
  2739                           
  2740                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2741     015E  3182  2253  3181   	fcall	_WDT_Initialize
  2742                           
  2743                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2744     0161  3182  2257  3181   	fcall	_FVR_Initialize
  2745                           
  2746                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2747     0164  3182  2221  3181   	fcall	_ADC_Initialize
  2748                           
  2749                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  2750     0167  3181  21F4  3181   	fcall	_EPWM1_Initialize
  2751                           
  2752                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  2753     016A  3182  2219  3181   	fcall	_TMR2_Initialize
  2754                           
  2755                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  2756     016D  3181  21BE  3181   	fcall	_TMR1_Initialize
  2757                           
  2758                           ;mcc_generated_files/mcc.c: 61:     EUSART_Initialize();
  2759     0170  3180  20DA  3181   	fcall	_EUSART_Initialize
  2760     0173                     l57:
  2761     0173  0008               	return
  2762     0174                     __end_of_SYSTEM_Initialize:
  2763                           
  2764                           	psect	text5
  2765     0253                     __ptext5:	
  2766 ;; *************** function _WDT_Initialize *****************
  2767 ;; Defined at:
  2768 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2782 ;;      Params:         0       0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0
  2785 ;;      Totals:         0       0       0       0       0       0
  2786 ;;Total ram usage:        0 bytes
  2787 ;; Hardware stack levels used: 1
  2788 ;; Hardware stack levels required when called: 5
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_SYSTEM_Initialize
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796     0253                     _WDT_Initialize:	
  2797                           ;psect for function _WDT_Initialize
  2798                           
  2799     0253                     l1549:	
  2800                           ;incstack = 0
  2801                           ; Regs used in _WDT_Initialize: [wreg]
  2802                           
  2803                           
  2804                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  2805     0253  3016               	movlw	22
  2806     0254  0021               	movlb	1	; select bank1
  2807     0255  0097               	movwf	23	;volatile
  2808     0256                     l63:
  2809     0256  0008               	return
  2810     0257                     __end_of_WDT_Initialize:
  2811                           
  2812                           	psect	text6
  2813     0219                     __ptext6:	
  2814 ;; *************** function _TMR2_Initialize *****************
  2815 ;; Defined at:
  2816 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2830 ;;      Params:         0       0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0
  2833 ;;      Totals:         0       0       0       0       0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 5
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_SYSTEM_Initialize
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844     0219                     _TMR2_Initialize:	
  2845                           ;psect for function _TMR2_Initialize
  2846                           
  2847     0219                     l1571:	
  2848                           ;incstack = 0
  2849                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  2850                           
  2851                           
  2852                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  2853     0219  30FF               	movlw	255
  2854     021A  0020               	movlb	0	; select bank0
  2855     021B  009B               	movwf	27	;volatile
  2856     021C                     l1573:
  2857                           
  2858                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  2859     021C  019A               	clrf	26	;volatile
  2860     021D                     l1575:
  2861                           
  2862                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  2863     021D  1091               	bcf	17,1	;volatile
  2864     021E                     l1577:
  2865                           
  2866                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  2867     021E  3004               	movlw	4
  2868     021F  009C               	movwf	28	;volatile
  2869     0220                     l76:
  2870     0220  0008               	return
  2871     0221                     __end_of_TMR2_Initialize:
  2872                           
  2873                           	psect	text7
  2874     01BE                     __ptext7:	
  2875 ;; *************** function _TMR1_Initialize *****************
  2876 ;; Defined at:
  2877 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2891 ;;      Params:         0       0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 6
  2898 ;; This function calls:
  2899 ;;		_TMR1_SetInterruptHandler
  2900 ;; This function is called by:
  2901 ;;		_SYSTEM_Initialize
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905     01BE                     _TMR1_Initialize:	
  2906                           ;psect for function _TMR1_Initialize
  2907                           
  2908     01BE                     l1579:	
  2909                           ;incstack = 0
  2910                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2911                           
  2912                           
  2913                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  2914     01BE  0020               	movlb	0	; select bank0
  2915     01BF  0199               	clrf	25	;volatile
  2916                           
  2917                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  2918     01C0  0197               	clrf	23	;volatile
  2919                           
  2920                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  2921     01C1  0196               	clrf	22	;volatile
  2922     01C2                     l1581:
  2923                           
  2924                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  2925     01C2  1011               	bcf	17,0	;volatile
  2926     01C3                     l1583:
  2927                           
  2928                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2929     01C3  0817               	movf	23,w	;volatile
  2930     01C4  00FA               	movwf	_timer1ReloadVal+1	;volatile
  2931     01C5  0816               	movf	22,w	;volatile
  2932     01C6  00F9               	movwf	_timer1ReloadVal	;volatile
  2933     01C7                     l1585:
  2934                           
  2935                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  2936     01C7  0021               	movlb	1	; select bank1
  2937     01C8  1411               	bsf	17,0	;volatile
  2938     01C9                     l1587:
  2939                           
  2940                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  2941     01C9  305C               	movlw	low _TMR1_DefaultInterruptHandler
  2942     01CA  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2943     01CB  3002               	movlw	high _TMR1_DefaultInterruptHandler
  2944     01CC  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2945     01CD  3182  2236  3181   	fcall	_TMR1_SetInterruptHandler
  2946     01D0                     l1589:
  2947                           
  2948                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  2949     01D0  3031               	movlw	49
  2950     01D1  0020               	movlb	0	; select bank0
  2951     01D2  0098               	movwf	24	;volatile
  2952     01D3                     l280:
  2953     01D3  0008               	return
  2954     01D4                     __end_of_TMR1_Initialize:
  2955                           
  2956                           	psect	text8
  2957     0236                     __ptext8:	
  2958 ;; *************** function _TMR1_SetInterruptHandler *****************
  2959 ;; Defined at:
  2960 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2963 ;;		 -> enviaTx(1), TMR1_DefaultInterruptHandler(1), 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2975 ;;      Params:         2       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0
  2978 ;;      Totals:         2       0       0       0       0       0
  2979 ;;Total ram usage:        2 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 5
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_TMR1_Initialize
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990     0236                     _TMR1_SetInterruptHandler:	
  2991                           ;psect for function _TMR1_SetInterruptHandler
  2992                           
  2993     0236                     l1525:	
  2994                           ;incstack = 0
  2995                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2996                           
  2997                           
  2998                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
  2999     0236  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  3000     0237  0020               	movlb	0	; select bank0
  3001     0238  00B4               	movwf	_TMR1_InterruptHandler+1
  3002     0239  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  3003     023A  00B3               	movwf	_TMR1_InterruptHandler
  3004     023B                     l316:
  3005     023B  0008               	return
  3006     023C                     __end_of_TMR1_SetInterruptHandler:
  3007                           
  3008                           	psect	text9
  3009     018F                     __ptext9:	
  3010 ;; *************** function _PIN_MANAGER_Initialize *****************
  3011 ;; Defined at:
  3012 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3026 ;;      Params:         0       0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0
  3029 ;;      Totals:         0       0       0       0       0       0
  3030 ;;Total ram usage:        0 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 5
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_SYSTEM_Initialize
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040     018F                     _PIN_MANAGER_Initialize:	
  3041                           ;psect for function _PIN_MANAGER_Initialize
  3042                           
  3043     018F                     l1527:	
  3044                           ;incstack = 0
  3045                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3046                           
  3047                           
  3048                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3049     018F  0022               	movlb	2	; select bank2
  3050     0190  018C               	clrf	12	;volatile
  3051                           
  3052                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3053     0191  018D               	clrf	13	;volatile
  3054     0192                     l1529:
  3055                           
  3056                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  3057     0192  30FF               	movlw	255
  3058     0193  0021               	movlb	1	; select bank1
  3059     0194  008C               	movwf	12	;volatile
  3060     0195                     l1531:
  3061                           
  3062                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  3063     0195  30F7               	movlw	247
  3064     0196  008D               	movwf	13	;volatile
  3065     0197                     l1533:
  3066                           
  3067                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xD2;
  3068     0197  30D2               	movlw	210
  3069     0198  0023               	movlb	3	; select bank3
  3070     0199  008D               	movwf	13	;volatile
  3071     019A                     l1535:
  3072                           
  3073                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  3074     019A  301F               	movlw	31
  3075     019B  008C               	movwf	12	;volatile
  3076                           
  3077                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3078     019C  0024               	movlb	4	; select bank4
  3079     019D  018D               	clrf	13	;volatile
  3080                           
  3081                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3082     019E  018C               	clrf	12	;volatile
  3083     019F                     l1537:
  3084                           
  3085                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3086     019F  0021               	movlb	1	; select bank1
  3087     01A0  1795               	bsf	21,7	;volatile
  3088     01A1                     l1539:
  3089                           
  3090                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x80;
  3091     01A1  3080               	movlw	128
  3092     01A2  0022               	movlb	2	; select bank2
  3093     01A3  009D               	movwf	29	;volatile
  3094     01A4                     l1541:
  3095                           
  3096                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  3097     01A4  3001               	movlw	1
  3098     01A5  009E               	movwf	30	;volatile
  3099     01A6                     l25:
  3100     01A6  0008               	return
  3101     01A7                     __end_of_PIN_MANAGER_Initialize:
  3102                           
  3103                           	psect	text10
  3104     0229                     __ptext10:	
  3105 ;; *************** function _OSCILLATOR_Initialize *****************
  3106 ;; Defined at:
  3107 ;;		line 64 in file "mcc_generated_files/mcc.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3121 ;;      Params:         0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 5
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_SYSTEM_Initialize
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135     0229                     _OSCILLATOR_Initialize:	
  3136                           ;psect for function _OSCILLATOR_Initialize
  3137                           
  3138     0229                     l1543:	
  3139                           ;incstack = 0
  3140                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3141                           
  3142                           
  3143                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  3144     0229  3070               	movlw	112
  3145     022A  0021               	movlb	1	; select bank1
  3146     022B  0099               	movwf	25	;volatile
  3147     022C                     l1545:
  3148                           
  3149                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  3150     022C  0198               	clrf	24	;volatile
  3151     022D                     l1547:
  3152                           
  3153                           ;mcc_generated_files/mcc.c: 71:     BORCON = 0x00;
  3154     022D  0022               	movlb	2	; select bank2
  3155     022E  0196               	clrf	22	;volatile
  3156     022F                     l60:
  3157     022F  0008               	return
  3158     0230                     __end_of_OSCILLATOR_Initialize:
  3159                           
  3160                           	psect	text11
  3161     0257                     __ptext11:	
  3162 ;; *************** function _FVR_Initialize *****************
  3163 ;; Defined at:
  3164 ;;		line 58 in file "mcc_generated_files/fvr.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3178 ;;      Params:         0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 5
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_SYSTEM_Initialize
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192     0257                     _FVR_Initialize:	
  3193                           ;psect for function _FVR_Initialize
  3194                           
  3195     0257                     l1551:	
  3196                           ;incstack = 0
  3197                           ; Regs used in _FVR_Initialize: [wreg]
  3198                           
  3199                           
  3200                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x8C;
  3201     0257  308C               	movlw	140
  3202     0258  0022               	movlb	2	; select bank2
  3203     0259  0097               	movwf	23	;volatile
  3204     025A                     l160:
  3205     025A  0008               	return
  3206     025B                     __end_of_FVR_Initialize:
  3207                           
  3208                           	psect	text12
  3209     00DA                     __ptext12:	
  3210 ;; *************** function _EUSART_Initialize *****************
  3211 ;; Defined at:
  3212 ;;		line 66 in file "mcc_generated_files/eusart.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3226 ;;      Params:         0       0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 6
  3233 ;; This function calls:
  3234 ;;		_EUSART_SetErrorHandler
  3235 ;;		_EUSART_SetFramingErrorHandler
  3236 ;;		_EUSART_SetOverrunErrorHandler
  3237 ;; This function is called by:
  3238 ;;		_SYSTEM_Initialize
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242     00DA                     _EUSART_Initialize:	
  3243                           ;psect for function _EUSART_Initialize
  3244                           
  3245     00DA                     l1591:	
  3246                           ;incstack = 0
  3247                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3248                           
  3249                           
  3250                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  3251     00DA  3008               	movlw	8
  3252     00DB  0023               	movlb	3	; select bank3
  3253     00DC  009F               	movwf	31	;volatile
  3254                           
  3255                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  3256     00DD  3090               	movlw	144
  3257     00DE  009D               	movwf	29	;volatile
  3258                           
  3259                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  3260     00DF  3024               	movlw	36
  3261     00E0  009E               	movwf	30	;volatile
  3262                           
  3263                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  3264     00E1  3067               	movlw	103
  3265     00E2  009B               	movwf	27	;volatile
  3266     00E3                     l1593:
  3267                           
  3268                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  3269     00E3  019C               	clrf	28	;volatile
  3270     00E4                     l1595:
  3271                           
  3272                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  3273     00E4  3000               	movlw	0
  3274     00E5  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3275     00E6  3000               	movlw	0
  3276     00E7  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3277     00E8  3182  2242  3180   	fcall	_EUSART_SetFramingErrorHandler
  3278     00EB                     l1597:
  3279                           
  3280                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  3281     00EB  3000               	movlw	0
  3282     00EC  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3283     00ED  3000               	movlw	0
  3284     00EE  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3285     00EF  3182  223C  3180   	fcall	_EUSART_SetOverrunErrorHandler
  3286     00F2                     l1599:
  3287                           
  3288                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  3289     00F2  3000               	movlw	0
  3290     00F3  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler
  3291     00F4  3000               	movlw	0
  3292     00F5  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3293     00F6  3182  2248  3180   	fcall	_EUSART_SetErrorHandler
  3294     00F9                     l1601:
  3295                           
  3296                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  3297     00F9  0020               	movlb	0	; select bank0
  3298     00FA  01B2               	clrf	_eusartRxLastError	;volatile
  3299     00FB                     l206:
  3300     00FB  0008               	return
  3301     00FC                     __end_of_EUSART_Initialize:
  3302                           
  3303                           	psect	text13
  3304     023C                     __ptext13:	
  3305 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3306 ;; Defined at:
  3307 ;;		line 161 in file "mcc_generated_files/eusart.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3310 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3322 ;;      Params:         2       0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0
  3325 ;;      Totals:         2       0       0       0       0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 5
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_EUSART_Initialize
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336     023C                     _EUSART_SetOverrunErrorHandler:	
  3337                           ;psect for function _EUSART_SetOverrunErrorHandler
  3338                           
  3339     023C                     l1521:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3342                           
  3343                           
  3344                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  3345     023C  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3346     023D  0020               	movlb	0	; select bank0
  3347     023E  00B8               	movwf	_EUSART_OverrunErrorHandler+1
  3348     023F  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3349     0240  00B7               	movwf	_EUSART_OverrunErrorHandler
  3350     0241                     l248:
  3351     0241  0008               	return
  3352     0242                     __end_of_EUSART_SetOverrunErrorHandler:
  3353                           
  3354                           	psect	text14
  3355     0242                     __ptext14:	
  3356 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3357 ;; Defined at:
  3358 ;;		line 157 in file "mcc_generated_files/eusart.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3361 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3373 ;;      Params:         2       0       0       0       0       0
  3374 ;;      Locals:         0       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0
  3376 ;;      Totals:         2       0       0       0       0       0
  3377 ;;Total ram usage:        2 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 5
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_EUSART_Initialize
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387     0242                     _EUSART_SetFramingErrorHandler:	
  3388                           ;psect for function _EUSART_SetFramingErrorHandler
  3389                           
  3390     0242                     l1519:	
  3391                           ;incstack = 0
  3392                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3393                           
  3394                           
  3395                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  3396     0242  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3397     0243  0020               	movlb	0	; select bank0
  3398     0244  00BA               	movwf	_EUSART_FramingErrorHandler+1
  3399     0245  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3400     0246  00B9               	movwf	_EUSART_FramingErrorHandler
  3401     0247                     l245:
  3402     0247  0008               	return
  3403     0248                     __end_of_EUSART_SetFramingErrorHandler:
  3404                           
  3405                           	psect	text15
  3406     0248                     __ptext15:	
  3407 ;; *************** function _EUSART_SetErrorHandler *****************
  3408 ;; Defined at:
  3409 ;;		line 165 in file "mcc_generated_files/eusart.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  3412 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3424 ;;      Params:         2       0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0
  3427 ;;      Totals:         2       0       0       0       0       0
  3428 ;;Total ram usage:        2 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 5
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_EUSART_Initialize
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     0248                     _EUSART_SetErrorHandler:	
  3439                           ;psect for function _EUSART_SetErrorHandler
  3440                           
  3441     0248                     l1523:	
  3442                           ;incstack = 0
  3443                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3444                           
  3445                           
  3446                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  3447     0248  0873               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3448     0249  0020               	movlb	0	; select bank0
  3449     024A  00B6               	movwf	_EUSART_ErrorHandler+1
  3450     024B  0872               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3451     024C  00B5               	movwf	_EUSART_ErrorHandler
  3452     024D                     l251:
  3453     024D  0008               	return
  3454     024E                     __end_of_EUSART_SetErrorHandler:
  3455                           
  3456                           	psect	text16
  3457     01F4                     __ptext16:	
  3458 ;; *************** function _EPWM1_Initialize *****************
  3459 ;; Defined at:
  3460 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3474 ;;      Params:         0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0
  3477 ;;      Totals:         0       0       0       0       0       0
  3478 ;;Total ram usage:        0 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; Hardware stack levels required when called: 5
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_SYSTEM_Initialize
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488     01F4                     _EPWM1_Initialize:	
  3489                           ;psect for function _EPWM1_Initialize
  3490                           
  3491     01F4                     l1559:	
  3492                           ;incstack = 0
  3493                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  3494                           
  3495                           
  3496                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  3497     01F4  303C               	movlw	60
  3498     01F5  0025               	movlb	5	; select bank5
  3499     01F6  0093               	movwf	19	;volatile
  3500     01F7                     l1561:
  3501                           
  3502                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  3503     01F7  0195               	clrf	21	;volatile
  3504     01F8                     l1563:
  3505                           
  3506                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  3507     01F8  3080               	movlw	128
  3508     01F9  0094               	movwf	20	;volatile
  3509     01FA                     l1565:
  3510                           
  3511                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  3512     01FA  3001               	movlw	1
  3513     01FB  0096               	movwf	22	;volatile
  3514     01FC                     l1567:
  3515                           
  3516                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  3517     01FC  0192               	clrf	18	;volatile
  3518                           
  3519                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  3520     01FD  307F               	movlw	127
  3521     01FE  0091               	movwf	17	;volatile
  3522     01FF                     l1569:
  3523                           
  3524                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  3525     01FF  30FC               	movlw	-4
  3526     0200  059E               	andwf	30,f	;volatile
  3527     0201                     l112:
  3528     0201  0008               	return
  3529     0202                     __end_of_EPWM1_Initialize:
  3530                           
  3531                           	psect	text17
  3532     0221                     __ptext17:	
  3533 ;; *************** function _ADC_Initialize *****************
  3534 ;; Defined at:
  3535 ;;		line 67 in file "mcc_generated_files/adc.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3549 ;;      Params:         0       0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0
  3552 ;;      Totals:         0       0       0       0       0       0
  3553 ;;Total ram usage:        0 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 5
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_SYSTEM_Initialize
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563     0221                     _ADC_Initialize:	
  3564                           ;psect for function _ADC_Initialize
  3565                           
  3566     0221                     l1553:	
  3567                           ;incstack = 0
  3568                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3569                           
  3570                           
  3571                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x03;
  3572     0221  3003               	movlw	3
  3573     0222  0021               	movlb	1	; select bank1
  3574     0223  009E               	movwf	30	;volatile
  3575     0224                     l1555:
  3576                           
  3577                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3578     0224  019B               	clrf	27	;volatile
  3579     0225                     l1557:
  3580                           
  3581                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3582     0225  019C               	clrf	28	;volatile
  3583                           
  3584                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  3585     0226  3001               	movlw	1
  3586     0227  009D               	movwf	29	;volatile
  3587     0228                     l132:
  3588     0228  0008               	return
  3589     0229                     __end_of_ADC_Initialize:
  3590                           
  3591                           	psect	text18
  3592     024E                     __ptext18:	
  3593 ;; *************** function _EUSART_is_rx_ready *****************
  3594 ;; Defined at:
  3595 ;;		line 99 in file "mcc_generated_files/eusart.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      _Bool 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3609 ;;      Params:         0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; Hardware stack levels required when called: 5
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623     024E                     _EUSART_is_rx_ready:	
  3624                           ;psect for function _EUSART_is_rx_ready
  3625                           
  3626     024E                     l1619:	
  3627                           ;incstack = 0
  3628                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3629                           
  3630                           
  3631                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  3632     024E  0020               	movlb	0	; select bank0
  3633     024F  0E11               	swapf	17,w	;volatile
  3634     0250  0C89               	rrf	9,f
  3635     0251  3901               	andlw	1
  3636     0252                     l214:
  3637     0252  0008               	return
  3638     0253                     __end_of_EUSART_is_rx_ready:
  3639                           
  3640                           	psect	text19
  3641     01E5                     __ptext19:	
  3642 ;; *************** function _EUSART_Read *****************
  3643 ;; Defined at:
  3644 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      unsigned char 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3658 ;;      Params:         0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 5
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_main
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672     01E5                     _EUSART_Read:	
  3673                           ;psect for function _EUSART_Read
  3674                           
  3675     01E5                     l1623:	
  3676                           ;incstack = 0
  3677                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3678                           
  3679     01E5                     l223:	
  3680                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  3681                           
  3682                           
  3683                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  3684     01E5  0020               	movlb	0	; select bank0
  3685     01E6  1E91               	btfss	17,5	;volatile
  3686     01E7  29E9               	goto	u521
  3687     01E8  29EA               	goto	u520
  3688     01E9                     u521:
  3689     01E9  29E5               	goto	l223
  3690     01EA                     u520:
  3691     01EA                     l1625:
  3692                           
  3693                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  3694     01EA  01B2               	clrf	_eusartRxLastError	;volatile
  3695     01EB                     l1627:
  3696                           
  3697                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  3698     01EB  0023               	movlb	3	; select bank3
  3699     01EC  1C9D               	btfss	29,1	;volatile
  3700     01ED  29EF               	goto	u531
  3701     01EE  29F0               	goto	u530
  3702     01EF                     u531:
  3703     01EF  29F2               	goto	l1631
  3704     01F0                     u530:
  3705     01F0                     l1629:
  3706                           
  3707                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  3708     01F0  121D               	bcf	29,4	;volatile
  3709                           
  3710                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  3711     01F1  161D               	bsf	29,4	;volatile
  3712     01F2                     l1631:
  3713                           
  3714                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  3715     01F2  0819               	movf	25,w	;volatile
  3716     01F3                     l227:
  3717     01F3  0008               	return
  3718     01F4                     __end_of_EUSART_Read:
  3719                           
  3720                           	psect	text20
  3721     0174                     __ptext20:	
  3722 ;; *************** function _ADC_GetConversion *****************
  3723 ;; Defined at:
  3724 ;;		line 112 in file "mcc_generated_files/adc.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  channel         1    wreg     enum E2495
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  channel         1    5[COMMON] enum E2495
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2    2[COMMON] unsigned short 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3738 ;;      Params:         2       0       0       0       0       0
  3739 ;;      Locals:         1       0       0       0       0       0
  3740 ;;      Temps:          1       0       0       0       0       0
  3741 ;;      Totals:         4       0       0       0       0       0
  3742 ;;Total ram usage:        4 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 5
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752     0174                     _ADC_GetConversion:	
  3753                           ;psect for function _ADC_GetConversion
  3754                           
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  3758                           ;ADC_GetConversion@channel stored from wreg
  3759     0174  00F5               	movwf	ADC_GetConversion@channel
  3760     0175                     l1607:
  3761                           
  3762                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  3763     0175  0875               	movf	ADC_GetConversion@channel,w
  3764     0176  00F4               	movwf	??_ADC_GetConversion
  3765     0177  0DF4               	rlf	??_ADC_GetConversion,f
  3766     0178  0DF4               	rlf	??_ADC_GetConversion,f
  3767     0179  0021               	movlb	1	; select bank1
  3768     017A  081D               	movf	29,w	;volatile
  3769     017B  0674               	xorwf	??_ADC_GetConversion,w
  3770     017C  3983               	andlw	-125
  3771     017D  0674               	xorwf	??_ADC_GetConversion,w
  3772     017E  009D               	movwf	29	;volatile
  3773     017F                     l1609:
  3774                           
  3775                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  3776     017F  141D               	bsf	29,0	;volatile
  3777     0180                     l1611:
  3778                           
  3779                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  3780     0180  3003               	movlw	3
  3781     0181                     u657:
  3782     0181  0B89               	decfsz	9,f
  3783     0182  2981               	goto	u657
  3784     0183  0000               	nop
  3785     0184                     l1613:
  3786                           
  3787                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  3788     0184  0021               	movlb	1	; select bank1
  3789     0185  149D               	bsf	29,1	;volatile
  3790     0186                     l147:	
  3791                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  3792                           
  3793                           
  3794                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  3795     0186  189D               	btfsc	29,1	;volatile
  3796     0187  2989               	goto	u511
  3797     0188  298A               	goto	u510
  3798     0189                     u511:
  3799     0189  2986               	goto	l147
  3800     018A                     u510:
  3801     018A                     l1615:
  3802                           
  3803                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3804     018A  081C               	movf	28,w	;volatile
  3805     018B  00F3               	movwf	?_ADC_GetConversion+1
  3806     018C  081B               	movf	27,w	;volatile
  3807     018D  00F2               	movwf	?_ADC_GetConversion
  3808     018E                     l150:
  3809     018E  0008               	return
  3810     018F                     __end_of_ADC_GetConversion:
  3811                           
  3812                           	psect	intentry
  3813     0004                     __pintentry:	
  3814 ;; *************** function _INTERRUPT_InterruptManager *****************
  3815 ;; Defined at:
  3816 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, pclath, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3830 ;;      Params:         0       0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0
  3833 ;;      Totals:         0       0       0       0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 4
  3837 ;; This function calls:
  3838 ;;		_TMR1_ISR
  3839 ;; This function is called by:
  3840 ;;		Interrupt level 1
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844     0004                     _INTERRUPT_InterruptManager:
  3845                           
  3846                           ;incstack = 0
  3847     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3848                           
  3849                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  3850     0005  3180               	pagesel	$
  3851     0006                     i1l1485:
  3852                           
  3853                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  3854     0006  1F0B               	btfss	11,6	;volatile
  3855     0007  2809               	goto	u45_21
  3856     0008  280A               	goto	u45_20
  3857     0009                     u45_21:
  3858     0009  2817               	goto	i1l336
  3859     000A                     u45_20:
  3860     000A                     i1l1487:
  3861                           
  3862                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  3863     000A  0021               	movlb	1	; select bank1
  3864     000B  1C11               	btfss	17,0	;volatile
  3865     000C  280E               	goto	u46_21
  3866     000D  280F               	goto	u46_20
  3867     000E                     u46_21:
  3868     000E  2817               	goto	i1l336
  3869     000F                     u46_20:
  3870     000F                     i1l1489:
  3871     000F  0020               	movlb	0	; select bank0
  3872     0010  1C11               	btfss	17,0	;volatile
  3873     0011  2813               	goto	u47_21
  3874     0012  2814               	goto	u47_20
  3875     0013                     u47_21:
  3876     0013  2817               	goto	i1l336
  3877     0014                     u47_20:
  3878     0014                     i1l1491:
  3879                           
  3880                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  3881     0014  3181  213A  3180   	fcall	_TMR1_ISR
  3882     0017                     i1l336:	
  3883                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  3884                           
  3885     0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3886     0018  0009               	retfie
  3887     0019                     __end_of_INTERRUPT_InterruptManager:
  3888                           
  3889                           	psect	text22
  3890     013A                     __ptext22:	
  3891 ;; *************** function _TMR1_ISR *****************
  3892 ;; Defined at:
  3893 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3907 ;;      Params:         0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 3
  3914 ;; This function calls:
  3915 ;;		_TMR1_CallBack
  3916 ;;		_TMR1_WriteTimer
  3917 ;; This function is called by:
  3918 ;;		_INTERRUPT_InterruptManager
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922     013A                     _TMR1_ISR:	
  3923                           ;psect for function _TMR1_ISR
  3924                           
  3925     013A                     i1l1437:	
  3926                           ;incstack = 0
  3927                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3928                           
  3929                           
  3930                           ;mcc_generated_files/tmr1.c: 159:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  3931     013A  0020               	movlb	0	; select bank0
  3932     013B  1011               	bcf	17,0	;volatile
  3933     013C                     i1l1439:
  3934                           
  3935                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  3936     013C  087A               	movf	_timer1ReloadVal+1,w	;volatile
  3937     013D  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  3938     013E  0879               	movf	_timer1ReloadVal,w	;volatile
  3939     013F  00F0               	movwf	TMR1_WriteTimer@timerVal
  3940     0140  3181  21D4  3181   	fcall	_TMR1_WriteTimer
  3941     0143                     i1l1441:
  3942                           
  3943                           ;mcc_generated_files/tmr1.c: 166:     if (++CountCallBack >= 4)
  3944     0143  3001               	movlw	1
  3945     0144  0020               	movlb	0	; select bank0
  3946     0145  07AD               	addwf	TMR1_ISR@CountCallBack,f	;volatile
  3947     0146  3000               	movlw	0
  3948     0147  3DAE               	addwfc	TMR1_ISR@CountCallBack+1,f	;volatile
  3949     0148  3000               	movlw	0
  3950     0149  022E               	subwf	TMR1_ISR@CountCallBack+1,w	;volatile
  3951     014A  3004               	movlw	4
  3952     014B  1903               	skipnz
  3953     014C  022D               	subwf	TMR1_ISR@CountCallBack,w	;volatile
  3954     014D  1C03               	skipc
  3955     014E  2950               	goto	u35_21
  3956     014F  2951               	goto	u35_20
  3957     0150                     u35_21:
  3958     0150  2957               	goto	i1l309
  3959     0151                     u35_20:
  3960     0151                     i1l1443:
  3961                           
  3962                           ;mcc_generated_files/tmr1.c: 167:     {;mcc_generated_files/tmr1.c: 169:         TMR1_Ca
      +                          llBack();
  3963     0151  3182  2202  3181   	fcall	_TMR1_CallBack
  3964     0154                     i1l1445:
  3965                           
  3966                           ;mcc_generated_files/tmr1.c: 172:         CountCallBack = 0;
  3967     0154  0020               	movlb	0	; select bank0
  3968     0155  01AD               	clrf	TMR1_ISR@CountCallBack	;volatile
  3969     0156  01AE               	clrf	TMR1_ISR@CountCallBack+1	;volatile
  3970     0157                     i1l309:
  3971     0157  0008               	return
  3972     0158                     __end_of_TMR1_ISR:
  3973                           
  3974                           	psect	text23
  3975     01D4                     __ptext23:	
  3976 ;; *************** function _TMR1_WriteTimer *****************
  3977 ;; Defined at:
  3978 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  timerVal        2    0[COMMON] unsigned short 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3992 ;;      Params:         2       0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0
  3995 ;;      Totals:         2       0       0       0       0       0
  3996 ;;Total ram usage:        2 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_TMR1_ISR
  4002 ;;		_TMR1_Reload
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006     01D4                     _TMR1_WriteTimer:	
  4007                           ;psect for function _TMR1_WriteTimer
  4008                           
  4009     01D4                     i1l1389:	
  4010                           ;incstack = 0
  4011                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  4012                           
  4013                           
  4014                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  4015     01D4  0020               	movlb	0	; select bank0
  4016     01D5  1D18               	btfss	24,2	;volatile
  4017     01D6  29D8               	goto	u30_21
  4018     01D7  29D9               	goto	u30_20
  4019     01D8                     u30_21:
  4020     01D8  29E0               	goto	i1l1399
  4021     01D9                     u30_20:
  4022     01D9                     i1l1391:
  4023                           
  4024                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4025     01D9  1018               	bcf	24,0	;volatile
  4026     01DA                     i1l1393:
  4027                           
  4028                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  4029     01DA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4030     01DB  0097               	movwf	23	;volatile
  4031     01DC                     i1l1395:
  4032                           
  4033                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4034     01DC  0870               	movf	TMR1_WriteTimer@timerVal,w
  4035     01DD  0096               	movwf	22	;volatile
  4036     01DE                     i1l1397:
  4037                           
  4038                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4039     01DE  1418               	bsf	24,0	;volatile
  4040                           
  4041                           ;mcc_generated_files/tmr1.c: 133:     }
  4042     01DF  29E4               	goto	i1l294
  4043     01E0                     i1l1399:
  4044                           
  4045                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4046     01E0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  4047     01E1  0097               	movwf	23	;volatile
  4048     01E2                     i1l1401:
  4049                           
  4050                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  4051     01E2  0870               	movf	TMR1_WriteTimer@timerVal,w
  4052     01E3  0096               	movwf	22	;volatile
  4053     01E4                     i1l294:
  4054     01E4  0008               	return
  4055     01E5                     __end_of_TMR1_WriteTimer:
  4056                           
  4057                           	psect	text24
  4058     0202                     __ptext24:	
  4059 ;; *************** function _TMR1_CallBack *****************
  4060 ;; Defined at:
  4061 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0, pclath, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4075 ;;      Params:         0       0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 2
  4082 ;; This function calls:
  4083 ;;		NULL
  4084 ;;		_TMR1_DefaultInterruptHandler
  4085 ;;		_enviaTx
  4086 ;; This function is called by:
  4087 ;;		_TMR1_ISR
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091     0202                     _TMR1_CallBack:	
  4092                           ;psect for function _TMR1_CallBack
  4093                           
  4094     0202                     i1l1403:	
  4095                           ;incstack = 0
  4096                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4097                           
  4098                           
  4099                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
  4100     0202  0020               	movlb	0	; select bank0
  4101     0203  0833               	movf	_TMR1_InterruptHandler,w
  4102     0204  0434               	iorwf	_TMR1_InterruptHandler+1,w
  4103     0205  1903               	btfsc	3,2
  4104     0206  2A08               	goto	u31_21
  4105     0207  2A09               	goto	u31_20
  4106     0208                     u31_21:
  4107     0208  2A0E               	goto	i1l313
  4108     0209                     u31_20:
  4109     0209                     i1l1405:
  4110                           
  4111                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
  4112     0209  0834               	movf	_TMR1_InterruptHandler+1,w
  4113     020A  008A               	movwf	10
  4114     020B  0833               	movf	_TMR1_InterruptHandler,w
  4115     020C  000A               	callw
  4116     020D  3182               	pagesel	$
  4117     020E                     i1l313:
  4118     020E  0008               	return
  4119     020F                     __end_of_TMR1_CallBack:
  4120                           
  4121                           	psect	text25
  4122     025C                     __ptext25:	
  4123 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4124 ;; Defined at:
  4125 ;;		line 189 in file "mcc_generated_files/tmr1.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		None
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4139 ;;      Params:         0       0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0
  4142 ;;      Totals:         0       0       0       0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used: 1
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_TMR1_Initialize
  4149 ;;		_TMR1_CallBack
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153     025C                     _TMR1_DefaultInterruptHandler:	
  4154                           ;psect for function _TMR1_DefaultInterruptHandler
  4155                           
  4156     025C                     i1l319:	
  4157                           ;incstack = 0
  4158                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4159                           
  4160     025C  0008               	return
  4161     025D                     __end_of_TMR1_DefaultInterruptHandler:
  4162                           
  4163                           	psect	text26
  4164     011B                     __ptext26:	
  4165 ;; *************** function _enviaTx *****************
  4166 ;; Defined at:
  4167 ;;		line 128 in file "main.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;		None
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  1    wreg      void 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0, pclath, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4181 ;;      Params:         0       0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0
  4184 ;;      Totals:         0       0       0       0       0       0
  4185 ;;Total ram usage:        0 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 1
  4188 ;; This function calls:
  4189 ;;		_EUSART_Write
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;;		_TMR1_CallBack
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196     011B                     _enviaTx:	
  4197                           ;psect for function _enviaTx
  4198                           
  4199     011B                     i1l1307:	
  4200                           ;incstack = 0
  4201                           ; Regs used in _enviaTx: [wreg+status,2+status,0+pclath+cstack]
  4202                           
  4203                           
  4204                           ;main.c: 129:     if(TxActivate){
  4205     011B  0020               	movlb	0	; select bank0
  4206     011C  083E               	movf	_TxActivate,w
  4207     011D  1903               	btfsc	3,2
  4208     011E  2920               	goto	u28_21
  4209     011F  2921               	goto	u28_20
  4210     0120                     u28_21:
  4211     0120  2939               	goto	i1l384
  4212     0121                     u28_20:
  4213     0121                     i1l1309:
  4214                           
  4215                           ;main.c: 130:         EUSART_Write(0x80);
  4216     0121  3080               	movlw	128
  4217     0122  3182  220F  3181   	fcall	_EUSART_Write
  4218                           
  4219                           ;main.c: 131:         EUSART_Write(TempTx.msb);
  4220     0125  0020               	movlb	0	; select bank0
  4221     0126  082C               	movf	_TempTx+1,w
  4222     0127  3182  220F  3181   	fcall	_EUSART_Write
  4223                           
  4224                           ;main.c: 132:         EUSART_Write(TempTx.lsb);
  4225     012A  0020               	movlb	0	; select bank0
  4226     012B  082B               	movf	_TempTx,w
  4227     012C  3182  220F  3181   	fcall	_EUSART_Write
  4228                           
  4229                           ;main.c: 133:         EUSART_Write(LumTx.msb);
  4230     012F  0020               	movlb	0	; select bank0
  4231     0130  082A               	movf	_LumTx+1,w
  4232     0131  3182  220F  3181   	fcall	_EUSART_Write
  4233                           
  4234                           ;main.c: 134:         EUSART_Write(LumTx.lsb);
  4235     0134  0020               	movlb	0	; select bank0
  4236     0135  0829               	movf	_LumTx,w
  4237     0136  3182  220F  3181   	fcall	_EUSART_Write
  4238     0139                     i1l384:
  4239     0139  0008               	return
  4240     013A                     __end_of_enviaTx:
  4241                           
  4242                           	psect	text27
  4243     020F                     __ptext27:	
  4244 ;; *************** function _EUSART_Write *****************
  4245 ;; Defined at:
  4246 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  txData          1    wreg     unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  txData          1    0[COMMON] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4260 ;;      Params:         0       0       0       0       0       0
  4261 ;;      Locals:         1       0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0
  4263 ;;      Totals:         1       0       0       0       0       0
  4264 ;;Total ram usage:        1 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_enviaTx
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273     020F                     _EUSART_Write:	
  4274                           ;psect for function _EUSART_Write
  4275                           
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _EUSART_Write: [wreg]
  4279                           ;EUSART_Write@txData stored from wreg
  4280     020F  00F0               	movwf	EUSART_Write@txData
  4281     0210                     i1l1295:
  4282     0210                     i1l230:	
  4283                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4284                           
  4285                           
  4286                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4287     0210  0020               	movlb	0	; select bank0
  4288     0211  1E11               	btfss	17,4	;volatile
  4289     0212  2A14               	goto	u27_21
  4290     0213  2A15               	goto	u27_20
  4291     0214                     u27_21:
  4292     0214  2A10               	goto	i1l230
  4293     0215                     u27_20:
  4294     0215                     i1l1297:
  4295                           
  4296                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4297     0215  0870               	movf	EUSART_Write@txData,w
  4298     0216  0023               	movlb	3	; select bank3
  4299     0217  009A               	movwf	26	;volatile
  4300     0218                     i1l233:
  4301     0218  0008               	return
  4302     0219                     __end_of_EUSART_Write:
  4303     007E                     btemp	set	126	;btemp
  4304     007E                     int$flags	set	126
  4305     007E                     wtemp0	set	126
  4306                           
  4307                           	psect	config
  4308                           
  4309                           ;Config register CONFIG1 @ 0x8007
  4310                           ;	Oscillator Selection
  4311                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4312                           ;	Watchdog Timer Enable
  4313                           ;	WDTE = OFF, WDT disabled
  4314                           ;	Power-up Timer Enable
  4315                           ;	PWRTE = OFF, PWRT disabled
  4316                           ;	MCLR Pin Function Select
  4317                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4318                           ;	Flash Program Memory Code Protection
  4319                           ;	CP = OFF, Program memory code protection is disabled
  4320                           ;	Data Memory Code Protection
  4321                           ;	CPD = OFF, Data memory code protection is disabled
  4322                           ;	Brown-out Reset Enable
  4323                           ;	BOREN = ON, Brown-out Reset enabled
  4324                           ;	Clock Out Enable
  4325                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4326                           ;	Internal/External Switchover
  4327                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4328                           ;	Fail-Safe Clock Monitor Enable
  4329                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4330     8007                     	org	32775
  4331     8007  3FE4               	dw	16356
  4332                           
  4333                           ;Config register CONFIG2 @ 0x8008
  4334                           ;	Flash Memory Self-Write Protection
  4335                           ;	WRT = OFF, Write protection off
  4336                           ;	PLL Enable
  4337                           ;	PLLEN = OFF, 4x PLL disabled
  4338                           ;	Stack Overflow/Underflow Reset Enable
  4339                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4340                           ;	Brown-out Reset Voltage Selection
  4341                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4342                           ;	In-Circuit Debugger Mode
  4343                           ;	DEBUG = 0x1, unprogrammed default
  4344                           ;	Low-Voltage Programming Enable
  4345                           ;	LVP = ON, Low-voltage programming enabled
  4346     8008                     	org	32776
  4347     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         21
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      3      31
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> enviaTx(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> enviaTx(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->___wmul
    _analisaRx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _enviaTx->_EUSART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1597
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                             ___wmul
                          _analisaRx
 ---------------------------------------------------------------------------------
 (1) _analisaRx                                            0     0      0     152
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _EPWM1_LoadDutyValue                                  4     2      2     152
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     496
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     262
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     262
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0      22
                                NULL *
       _TMR1_DefaultInterruptHandler *
                            _enviaTx *
 ---------------------------------------------------------------------------------
 (7) _enviaTx                                              0     0      0      22
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR1_SetInterruptHandler
   ___wmul
   _analisaRx
     _EPWM1_LoadDutyValue

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       _enviaTx *
         _EUSART_Write
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      3      1F       6       38.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      2A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 13:12:59 2024

                                           l25 01A6                                             l60 022F  
                                           l63 0256                                             l57 0173  
                                           l76 0220                         __end_of_FVR_Initialize 025B  
                          ___wmul@multiplicand 0074                                            l112 0201  
                                          l115 01BD                                            l132 0228  
                                          l150 018E                                            l214 0252  
                                          l206 00FB                                            l223 01E5  
                                          l160 025A                                            l147 0186  
                                          l227 01F3                                            l251 024D  
                                          l316 023B                                            l245 0247  
                                          l248 0241                                            l280 01D3  
                                          l380 00D9                                            l545 0106  
                                          l547 011A                                            l389 0042  
                                          u510 018A                                            _PR2 001B  
                                          u511 0189                                            u520 01EA  
                                          u521 01E9                                            u505 01B6  
                                          u530 01F0                                            u531 01EF  
                                          u620 0116                                            u540 00A8  
                                          u621 0115                                            u605 0107  
                                          u541 00A7                                            u550 00AD  
                                          u630 007C                                            u615 010C  
                                          u551 00AC                                            u631 007B  
                                          u560 00B8                                            u640 009B  
                                          u561 00B7                                            u641 009A  
                                          u570 00CA                                            u571 00C9  
                                          u580 00D5                                            u581 00D4  
                                          u645 0097                                            u590 0102  
                                          u591 0101                                            u657 0181  
                              _timer1ReloadVal 0079                 ?_EUSART_SetFramingErrorHandler 0072  
                              _TMR2_Initialize 0219                                            wreg 0009  
                                 ?_EUSART_Read 0070                                           l1521 023C  
                                         l1601 00F9                                           l1611 0180  
                                         l1523 0248                                           l1531 0195  
                                         l1603 01A7                                           l1613 0184  
                                         l1541 01A4                                           l1533 0197  
                                         l1525 0236                                           l1605 0158  
                                         l1615 018A                                           l1607 0175  
                                         l1631 01F2                                           l1623 01E5  
                                         l1519 0242                                           l1551 0257  
                                         l1543 0229                                           l1535 019A  
                                         l1527 018F                                           l1609 017F  
                                         l1625 01EA                                           l1553 0221  
                                         l1561 01F7                                           l1545 022C  
                                         l1537 019F                                           l1529 0192  
                                         l1641 00B0                                           l1627 01EB  
                                         l1619 024E                                           l1555 0224  
                                         l1563 01F8                                           l1547 022D  
                                         l1539 01A1                                           l1571 0219  
                                         l1651 00CA                                           l1643 00B2  
                                         l1635 00A1                                           l1629 01F0  
                                         l1557 0225                                           l1565 01FA  
                                         l1581 01C2                                           l1573 021C  
                                         l1549 0253                                           l1661 0102  
                                         l1653 00CF                                           l1645 00B8  
                                         l1637 00A8                                           l1567 01FC  
                                         l1559 01F4                                           l1591 00DA  
                                         l1583 01C3                                           l1575 021D  
                                         l1663 010B                                           l1655 00D5  
                                         l1647 00BC                                           l1639 00AD  
                                         l1671 002D                                           l1569 01FF  
                                         l1593 00E3                                           l1585 01C7  
                                         l1577 021E                                           l1665 0110  
                                         l1657 00FC                                           l1649 00C4  
                                         l1681 007C                                           l1673 0030  
                                         l1595 00E4                                           l1587 01C9  
                                         l1579 01BE                                           l1667 0116  
                                         l1659 00FE                                           l1691 008A  
                                         l1675 0031                                           l1597 00EB  
                                         l1589 01D0                                           l1693 008E  
                                         l1677 0032                                           l1599 00F2  
                                         l1695 009B                                           l1687 007F  
                                         l1679 0037                                           l1689 0084  
                                         _LATA 010C                                           _LATB 010D  
                                         _TMR2 001A                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 002D  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0019  
                        ??_EPWM1_LoadDutyValue 0074                     ??_TMR1_SetInterruptHandler 0074  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0230                                          ?_main 0070  
                                        _T1CON 0018                                          _T2CON 001C  
                                        i1l230 0210                                          i1l233 0218  
                                        i1l313 020E                                          i1l309 0157  
                                        i1l319 025C                                          i1l336 0017  
                                        i1l294 01E4                                          i1l384 0139  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        u30_20 01D9                                          u30_21 01D8  
                                        u31_20 0209                                          u31_21 0208  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        u27_20 0215                                          u35_20 0151  
                                        u27_21 0214                                          u35_21 0150  
                                        u28_20 0121                                          u28_21 0120  
                                        u45_20 000A                                          u45_21 0009  
                                        u46_20 000F                                          u46_21 000E  
                                        u47_20 0014                                          u47_21 0013  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                                        _LumTx 0029                               __end_of_TMR1_ISR 0158  
                              __end_of_enviaTx 013A                                 _WDT_Initialize 0253  
                                        main@i 003C                        __end_of_TMR1_Initialize 01D4  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                _TMR1_WriteTimer 01D4  
                              __initialization 001B                                   __end_of_main 00A1  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 0221  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 0078  
                       __end_of_WDT_Initialize 0257              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0037                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0253  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1401 01E2  
                                       i1l1307 011B                                         i1l1403 0202  
                                       i1l1309 0121                                         i1l1405 0209  
                                       i1l1441 0143                                         i1l1443 0151  
                                       i1l1445 0154                                         i1l1437 013A  
                                       i1l1295 0210                                         i1l1391 01D9  
                                       i1l1439 013C                                         i1l1297 0215  
                                       i1l1393 01DA                                         i1l1395 01DC  
                                       i1l1491 0014                                         i1l1397 01DE  
                                       i1l1389 01D4                                         i1l1485 0006  
                                       i1l1399 01E0                                         i1l1487 000A  
                                       i1l1489 000F                                         _FVRCON 0117  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                   _TxActivate 003E                                         _TempTx 002B  
         __end_of_TMR1_DefaultInterruptHandler 025D                   _TMR1_DefaultInterruptHandler 025C  
                                 _CCPTMRS0bits 029E                                         ___wmul 00FC  
                                       _dutyRx 0023                                      ??_enviaTx 0071  
                              ?_WDT_Initialize 0070                       ADC_GetConversion@channel 0075  
     TMR1_SetInterruptHandler@InterruptHandler 0072                        __end_of_TMR1_WriteTimer 01E5  
                        __end_of_TMR1_CallBack 020F                               ?_TMR1_Initialize 0070  
                            _SYSTEM_Initialize 0158                        __end_of__initialization 0029  
                           ?_SYSTEM_Initialize 0070                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 025B  
                          ??_SYSTEM_Initialize 0074                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                             ??_EPWM1_Initialize 0072  
                             ?_TMR2_Initialize 0070                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0074                      __end_of_SYSTEM_Initialize 0174  
                                   __pbssBANK0 0020                           __end_of_EUSART_Write 0219  
                                   _gainTempRx 0025                               ??_FVR_Initialize 0072  
                                   __pmaintext 002D                                        ?___wmul 0072  
                                   ??_TMR1_ISR 0072                                     __pintentry 0004  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                       ??_EUSART_SetErrorHandler 0074  
                             ?_TMR1_WriteTimer 0070                    __end_of_EPWM1_LoadDutyValue 01BE  
                            __end_of_analisaRx 00DA                           _ADC_InterruptHandler 002F  
                                      __ptext1 00A1                                        __ptext2 01A7  
                                      __ptext3 00FC                                        __ptext4 0158  
                                      __ptext5 0253                                        __ptext6 0219  
                                      __ptext7 01BE                                        __ptext8 0236  
                                      __ptext9 018F                 ??_TMR1_DefaultInterruptHandler 0070  
                                    _T1CONbits 0018                                        _countRx 0031  
                                      _enviaTx 011B                          _OSCILLATOR_Initialize 0229  
                                    _T2CONbits 001C                       ??_PIN_MANAGER_Initialize 0072  
                    ?_TMR1_SetInterruptHandler 0072                                        clrloop0 0231  
                         end_of_initialization 0029          __end_of_EUSART_SetOverrunErrorHandler 0242  
                _EUSART_SetOverrunErrorHandler 023C                              _EUSART_Initialize 00DA  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 024E                            ??_EUSART_Initialize 0074  
                             ??_WDT_Initialize 0072                            ?_EUSART_is_rx_ready 0070  
                    __end_of_EUSART_Initialize 00FC                           ??_EUSART_is_rx_ready 0072  
                                    _TXSTAbits 019E                                     main@rxChar 003B  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 011B  
                                 _EUSART_Write 020F                                 _ADC_Initialize 0221  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 001B  
                                ??_EUSART_Read 0072                   EPWM1_LoadDutyValue@dutyValue 0072  
               ?_EUSART_SetOverrunErrorHandler 0072                     _EUSART_FramingErrorHandler 0039  
                                     ??___wmul 0076                         _EUSART_SetErrorHandler 0248  
                       __end_of_ADC_Initialize 0229                                    __pdataBANK0 003E  
                        TMR1_ISR@CountCallBack 002D                                    __pbssCOMMON 0079  
                                    ___latbits 0001                                  __pcstackBANK0 003B  
                          __end_of_EUSART_Read 01F4                                      __pnvBANK0 0033  
                                    _analisaRx 00A1                                      _gainLumRx 0027  
                       _PIN_MANAGER_Initialize 018F               __end_of_TMR1_SetInterruptHandler 023C  
                              ?_ADC_Initialize 0070                   ??_INTERRUPT_InterruptManager 0072  
                                     ?_enviaTx 0070                                  _TMR1_CallBack 0202  
                               ___wmul@product 0076         EUSART_SetErrorHandler@interruptHandler 0072  
                                    clear_ram0 0230                                       _PIE1bits 0091  
                            _eusartRxLastError 0032                                     ?_analisaRx 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0074  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 013A  
                                     _PSTR1CON 0296                              ??_TMR1_Initialize 0074  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0072  
                             _EPWM1_Initialize 01F4                                    _EUSART_Read 01E5  
                               ?_TMR1_CallBack 0070                              ??_TMR2_Initialize 0072  
                            _ADC_GetConversion 0174                        ??_OSCILLATOR_Initialize 0072  
                          _EUSART_ErrorHandler 0035                             ?_ADC_GetConversion 0072  
                     _TMR1_SetInterruptHandler 0236                          _TMR1_InterruptHandler 0033  
                          ??_ADC_GetConversion 0074                                       __ptext10 0229  
                                     __ptext11 0257                                       __ptext20 0174  
                                     __ptext12 00DA                                       __ptext13 023C  
                                   _T1GCONbits 0019                                       __ptext22 013A  
                                     __ptext14 0242                                       __ptext23 01D4  
                                     __ptext15 0248                                       __ptext24 0202  
                                     __ptext16 01F4                                       __ptext25 025C  
                                     __ptext17 0221                                       __ptext26 011B  
                                     __ptext18 024E                                       __ptext27 020F  
                                     __ptext19 01E5                                       _bufferRx 0020  
                    __end_of_ADC_GetConversion 018F                        ?_EUSART_SetErrorHandler 0072  
                                  ??_analisaRx 0076  EUSART_SetOverrunErrorHandler@interruptHandler 0072  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0019  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0248  
                _EUSART_SetFramingErrorHandler 0242                              ??_TMR1_WriteTimer 0072  
                                   _INTCONbits 000B                                     _FVRCONbits 0117  
                              ??_TMR1_CallBack 0071                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 024E  
                             ??_ADC_Initialize 0072  EUSART_SetFramingErrorHandler@interruptHandler 0072  
                               _FVR_Initialize 0257                            _EPWM1_LoadDutyValue 01A7  
                           EUSART_Write@txData 0070                 __end_of_PIN_MANAGER_Initialize 01A7  
                              _TMR1_Initialize 01BE                       __end_of_EPWM1_Initialize 0202  
                         ?_EPWM1_LoadDutyValue 0072  
