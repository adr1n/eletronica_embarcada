

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 03 14:52:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2,noexec
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Generated 07/09/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1827 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78     0000                     	;# 
    79     0001                     	;# 
    80     0002                     	;# 
    81     0003                     	;# 
    82     0004                     	;# 
    83     0005                     	;# 
    84     0006                     	;# 
    85     0007                     	;# 
    86     0008                     	;# 
    87     0009                     	;# 
    88     000A                     	;# 
    89     000B                     	;# 
    90     000C                     	;# 
    91     000D                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009B                     	;# 
   121     009C                     	;# 
   122     009D                     	;# 
   123     009E                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     0111                     	;# 
   127     0112                     	;# 
   128     0113                     	;# 
   129     0114                     	;# 
   130     0115                     	;# 
   131     0116                     	;# 
   132     0117                     	;# 
   133     0118                     	;# 
   134     0119                     	;# 
   135     011A                     	;# 
   136     011B                     	;# 
   137     011D                     	;# 
   138     011E                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0191                     	;# 
   142     0191                     	;# 
   143     0192                     	;# 
   144     0193                     	;# 
   145     0193                     	;# 
   146     0193                     	;# 
   147     0194                     	;# 
   148     0195                     	;# 
   149     0196                     	;# 
   150     0199                     	;# 
   151     019A                     	;# 
   152     019B                     	;# 
   153     019B                     	;# 
   154     019B                     	;# 
   155     019B                     	;# 
   156     019C                     	;# 
   157     019C                     	;# 
   158     019D                     	;# 
   159     019E                     	;# 
   160     019F                     	;# 
   161     020C                     	;# 
   162     020D                     	;# 
   163     0211                     	;# 
   164     0211                     	;# 
   165     0212                     	;# 
   166     0212                     	;# 
   167     0213                     	;# 
   168     0213                     	;# 
   169     0214                     	;# 
   170     0214                     	;# 
   171     0215                     	;# 
   172     0215                     	;# 
   173     0215                     	;# 
   174     0216                     	;# 
   175     0216                     	;# 
   176     0217                     	;# 
   177     0217                     	;# 
   178     0219                     	;# 
   179     021A                     	;# 
   180     021B                     	;# 
   181     021C                     	;# 
   182     021D                     	;# 
   183     021E                     	;# 
   184     021F                     	;# 
   185     0291                     	;# 
   186     0291                     	;# 
   187     0292                     	;# 
   188     0293                     	;# 
   189     0294                     	;# 
   190     0295                     	;# 
   191     0295                     	;# 
   192     0296                     	;# 
   193     0298                     	;# 
   194     0298                     	;# 
   195     0299                     	;# 
   196     029A                     	;# 
   197     029B                     	;# 
   198     029C                     	;# 
   199     029C                     	;# 
   200     029D                     	;# 
   201     029E                     	;# 
   202     029E                     	;# 
   203     0311                     	;# 
   204     0311                     	;# 
   205     0312                     	;# 
   206     0313                     	;# 
   207     0318                     	;# 
   208     0318                     	;# 
   209     0319                     	;# 
   210     031A                     	;# 
   211     0394                     	;# 
   212     0395                     	;# 
   213     0396                     	;# 
   214     039A                     	;# 
   215     039C                     	;# 
   216     039D                     	;# 
   217     039E                     	;# 
   218     039F                     	;# 
   219     0415                     	;# 
   220     0416                     	;# 
   221     0417                     	;# 
   222     041C                     	;# 
   223     041D                     	;# 
   224     041E                     	;# 
   225     0FE4                     	;# 
   226     0FE5                     	;# 
   227     0FE6                     	;# 
   228     0FE7                     	;# 
   229     0FE8                     	;# 
   230     0FE9                     	;# 
   231     0FEA                     	;# 
   232     0FEB                     	;# 
   233     0FED                     	;# 
   234     0FEE                     	;# 
   235     0FEF                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     008C                     	;# 
   266     008D                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0094                     	;# 
   271     0095                     	;# 
   272     0096                     	;# 
   273     0097                     	;# 
   274     0098                     	;# 
   275     0099                     	;# 
   276     009A                     	;# 
   277     009B                     	;# 
   278     009B                     	;# 
   279     009C                     	;# 
   280     009D                     	;# 
   281     009E                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     0111                     	;# 
   285     0112                     	;# 
   286     0113                     	;# 
   287     0114                     	;# 
   288     0115                     	;# 
   289     0116                     	;# 
   290     0117                     	;# 
   291     0118                     	;# 
   292     0119                     	;# 
   293     011A                     	;# 
   294     011B                     	;# 
   295     011D                     	;# 
   296     011E                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0191                     	;# 
   300     0191                     	;# 
   301     0192                     	;# 
   302     0193                     	;# 
   303     0193                     	;# 
   304     0193                     	;# 
   305     0194                     	;# 
   306     0195                     	;# 
   307     0196                     	;# 
   308     0199                     	;# 
   309     019A                     	;# 
   310     019B                     	;# 
   311     019B                     	;# 
   312     019B                     	;# 
   313     019B                     	;# 
   314     019C                     	;# 
   315     019C                     	;# 
   316     019D                     	;# 
   317     019E                     	;# 
   318     019F                     	;# 
   319     020C                     	;# 
   320     020D                     	;# 
   321     0211                     	;# 
   322     0211                     	;# 
   323     0212                     	;# 
   324     0212                     	;# 
   325     0213                     	;# 
   326     0213                     	;# 
   327     0214                     	;# 
   328     0214                     	;# 
   329     0215                     	;# 
   330     0215                     	;# 
   331     0215                     	;# 
   332     0216                     	;# 
   333     0216                     	;# 
   334     0217                     	;# 
   335     0217                     	;# 
   336     0219                     	;# 
   337     021A                     	;# 
   338     021B                     	;# 
   339     021C                     	;# 
   340     021D                     	;# 
   341     021E                     	;# 
   342     021F                     	;# 
   343     0291                     	;# 
   344     0291                     	;# 
   345     0292                     	;# 
   346     0293                     	;# 
   347     0294                     	;# 
   348     0295                     	;# 
   349     0295                     	;# 
   350     0296                     	;# 
   351     0298                     	;# 
   352     0298                     	;# 
   353     0299                     	;# 
   354     029A                     	;# 
   355     029B                     	;# 
   356     029C                     	;# 
   357     029C                     	;# 
   358     029D                     	;# 
   359     029E                     	;# 
   360     029E                     	;# 
   361     0311                     	;# 
   362     0311                     	;# 
   363     0312                     	;# 
   364     0313                     	;# 
   365     0318                     	;# 
   366     0318                     	;# 
   367     0319                     	;# 
   368     031A                     	;# 
   369     0394                     	;# 
   370     0395                     	;# 
   371     0396                     	;# 
   372     039A                     	;# 
   373     039C                     	;# 
   374     039D                     	;# 
   375     039E                     	;# 
   376     039F                     	;# 
   377     0415                     	;# 
   378     0416                     	;# 
   379     0417                     	;# 
   380     041C                     	;# 
   381     041D                     	;# 
   382     041E                     	;# 
   383     0FE4                     	;# 
   384     0FE5                     	;# 
   385     0FE6                     	;# 
   386     0FE7                     	;# 
   387     0FE8                     	;# 
   388     0FE9                     	;# 
   389     0FEA                     	;# 
   390     0FEB                     	;# 
   391     0FED                     	;# 
   392     0FEE                     	;# 
   393     0FEF                     	;# 
   394     0000                     	;# 
   395     0001                     	;# 
   396     0002                     	;# 
   397     0003                     	;# 
   398     0004                     	;# 
   399     0005                     	;# 
   400     0006                     	;# 
   401     0007                     	;# 
   402     0008                     	;# 
   403     0009                     	;# 
   404     000A                     	;# 
   405     000B                     	;# 
   406     000C                     	;# 
   407     000D                     	;# 
   408     0011                     	;# 
   409     0012                     	;# 
   410     0013                     	;# 
   411     0014                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0016                     	;# 
   415     0017                     	;# 
   416     0018                     	;# 
   417     0019                     	;# 
   418     001A                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001E                     	;# 
   422     001F                     	;# 
   423     008C                     	;# 
   424     008D                     	;# 
   425     0091                     	;# 
   426     0092                     	;# 
   427     0093                     	;# 
   428     0094                     	;# 
   429     0095                     	;# 
   430     0096                     	;# 
   431     0097                     	;# 
   432     0098                     	;# 
   433     0099                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     010C                     	;# 
   441     010D                     	;# 
   442     0111                     	;# 
   443     0112                     	;# 
   444     0113                     	;# 
   445     0114                     	;# 
   446     0115                     	;# 
   447     0116                     	;# 
   448     0117                     	;# 
   449     0118                     	;# 
   450     0119                     	;# 
   451     011A                     	;# 
   452     011B                     	;# 
   453     011D                     	;# 
   454     011E                     	;# 
   455     018C                     	;# 
   456     018D                     	;# 
   457     0191                     	;# 
   458     0191                     	;# 
   459     0192                     	;# 
   460     0193                     	;# 
   461     0193                     	;# 
   462     0193                     	;# 
   463     0194                     	;# 
   464     0195                     	;# 
   465     0196                     	;# 
   466     0199                     	;# 
   467     019A                     	;# 
   468     019B                     	;# 
   469     019B                     	;# 
   470     019B                     	;# 
   471     019B                     	;# 
   472     019C                     	;# 
   473     019C                     	;# 
   474     019D                     	;# 
   475     019E                     	;# 
   476     019F                     	;# 
   477     020C                     	;# 
   478     020D                     	;# 
   479     0211                     	;# 
   480     0211                     	;# 
   481     0212                     	;# 
   482     0212                     	;# 
   483     0213                     	;# 
   484     0213                     	;# 
   485     0214                     	;# 
   486     0214                     	;# 
   487     0215                     	;# 
   488     0215                     	;# 
   489     0215                     	;# 
   490     0216                     	;# 
   491     0216                     	;# 
   492     0217                     	;# 
   493     0217                     	;# 
   494     0219                     	;# 
   495     021A                     	;# 
   496     021B                     	;# 
   497     021C                     	;# 
   498     021D                     	;# 
   499     021E                     	;# 
   500     021F                     	;# 
   501     0291                     	;# 
   502     0291                     	;# 
   503     0292                     	;# 
   504     0293                     	;# 
   505     0294                     	;# 
   506     0295                     	;# 
   507     0295                     	;# 
   508     0296                     	;# 
   509     0298                     	;# 
   510     0298                     	;# 
   511     0299                     	;# 
   512     029A                     	;# 
   513     029B                     	;# 
   514     029C                     	;# 
   515     029C                     	;# 
   516     029D                     	;# 
   517     029E                     	;# 
   518     029E                     	;# 
   519     0311                     	;# 
   520     0311                     	;# 
   521     0312                     	;# 
   522     0313                     	;# 
   523     0318                     	;# 
   524     0318                     	;# 
   525     0319                     	;# 
   526     031A                     	;# 
   527     0394                     	;# 
   528     0395                     	;# 
   529     0396                     	;# 
   530     039A                     	;# 
   531     039C                     	;# 
   532     039D                     	;# 
   533     039E                     	;# 
   534     039F                     	;# 
   535     0415                     	;# 
   536     0416                     	;# 
   537     0417                     	;# 
   538     041C                     	;# 
   539     041D                     	;# 
   540     041E                     	;# 
   541     0FE4                     	;# 
   542     0FE5                     	;# 
   543     0FE6                     	;# 
   544     0FE7                     	;# 
   545     0FE8                     	;# 
   546     0FE9                     	;# 
   547     0FEA                     	;# 
   548     0FEB                     	;# 
   549     0FED                     	;# 
   550     0FEE                     	;# 
   551     0FEF                     	;# 
   552     0000                     	;# 
   553     0001                     	;# 
   554     0002                     	;# 
   555     0003                     	;# 
   556     0004                     	;# 
   557     0005                     	;# 
   558     0006                     	;# 
   559     0007                     	;# 
   560     0008                     	;# 
   561     0009                     	;# 
   562     000A                     	;# 
   563     000B                     	;# 
   564     000C                     	;# 
   565     000D                     	;# 
   566     0011                     	;# 
   567     0012                     	;# 
   568     0013                     	;# 
   569     0014                     	;# 
   570     0015                     	;# 
   571     0016                     	;# 
   572     0016                     	;# 
   573     0017                     	;# 
   574     0018                     	;# 
   575     0019                     	;# 
   576     001A                     	;# 
   577     001B                     	;# 
   578     001C                     	;# 
   579     001E                     	;# 
   580     001F                     	;# 
   581     008C                     	;# 
   582     008D                     	;# 
   583     0091                     	;# 
   584     0092                     	;# 
   585     0093                     	;# 
   586     0094                     	;# 
   587     0095                     	;# 
   588     0096                     	;# 
   589     0097                     	;# 
   590     0098                     	;# 
   591     0099                     	;# 
   592     009A                     	;# 
   593     009B                     	;# 
   594     009B                     	;# 
   595     009C                     	;# 
   596     009D                     	;# 
   597     009E                     	;# 
   598     010C                     	;# 
   599     010D                     	;# 
   600     0111                     	;# 
   601     0112                     	;# 
   602     0113                     	;# 
   603     0114                     	;# 
   604     0115                     	;# 
   605     0116                     	;# 
   606     0117                     	;# 
   607     0118                     	;# 
   608     0119                     	;# 
   609     011A                     	;# 
   610     011B                     	;# 
   611     011D                     	;# 
   612     011E                     	;# 
   613     018C                     	;# 
   614     018D                     	;# 
   615     0191                     	;# 
   616     0191                     	;# 
   617     0192                     	;# 
   618     0193                     	;# 
   619     0193                     	;# 
   620     0193                     	;# 
   621     0194                     	;# 
   622     0195                     	;# 
   623     0196                     	;# 
   624     0199                     	;# 
   625     019A                     	;# 
   626     019B                     	;# 
   627     019B                     	;# 
   628     019B                     	;# 
   629     019B                     	;# 
   630     019C                     	;# 
   631     019C                     	;# 
   632     019D                     	;# 
   633     019E                     	;# 
   634     019F                     	;# 
   635     020C                     	;# 
   636     020D                     	;# 
   637     0211                     	;# 
   638     0211                     	;# 
   639     0212                     	;# 
   640     0212                     	;# 
   641     0213                     	;# 
   642     0213                     	;# 
   643     0214                     	;# 
   644     0214                     	;# 
   645     0215                     	;# 
   646     0215                     	;# 
   647     0215                     	;# 
   648     0216                     	;# 
   649     0216                     	;# 
   650     0217                     	;# 
   651     0217                     	;# 
   652     0219                     	;# 
   653     021A                     	;# 
   654     021B                     	;# 
   655     021C                     	;# 
   656     021D                     	;# 
   657     021E                     	;# 
   658     021F                     	;# 
   659     0291                     	;# 
   660     0291                     	;# 
   661     0292                     	;# 
   662     0293                     	;# 
   663     0294                     	;# 
   664     0295                     	;# 
   665     0295                     	;# 
   666     0296                     	;# 
   667     0298                     	;# 
   668     0298                     	;# 
   669     0299                     	;# 
   670     029A                     	;# 
   671     029B                     	;# 
   672     029C                     	;# 
   673     029C                     	;# 
   674     029D                     	;# 
   675     029E                     	;# 
   676     029E                     	;# 
   677     0311                     	;# 
   678     0311                     	;# 
   679     0312                     	;# 
   680     0313                     	;# 
   681     0318                     	;# 
   682     0318                     	;# 
   683     0319                     	;# 
   684     031A                     	;# 
   685     0394                     	;# 
   686     0395                     	;# 
   687     0396                     	;# 
   688     039A                     	;# 
   689     039C                     	;# 
   690     039D                     	;# 
   691     039E                     	;# 
   692     039F                     	;# 
   693     0415                     	;# 
   694     0416                     	;# 
   695     0417                     	;# 
   696     041C                     	;# 
   697     041D                     	;# 
   698     041E                     	;# 
   699     0FE4                     	;# 
   700     0FE5                     	;# 
   701     0FE6                     	;# 
   702     0FE7                     	;# 
   703     0FE8                     	;# 
   704     0FE9                     	;# 
   705     0FEA                     	;# 
   706     0FEB                     	;# 
   707     0FED                     	;# 
   708     0FEE                     	;# 
   709     0FEF                     	;# 
   710     0000                     	;# 
   711     0001                     	;# 
   712     0002                     	;# 
   713     0003                     	;# 
   714     0004                     	;# 
   715     0005                     	;# 
   716     0006                     	;# 
   717     0007                     	;# 
   718     0008                     	;# 
   719     0009                     	;# 
   720     000A                     	;# 
   721     000B                     	;# 
   722     000C                     	;# 
   723     000D                     	;# 
   724     0011                     	;# 
   725     0012                     	;# 
   726     0013                     	;# 
   727     0014                     	;# 
   728     0015                     	;# 
   729     0016                     	;# 
   730     0016                     	;# 
   731     0017                     	;# 
   732     0018                     	;# 
   733     0019                     	;# 
   734     001A                     	;# 
   735     001B                     	;# 
   736     001C                     	;# 
   737     001E                     	;# 
   738     001F                     	;# 
   739     008C                     	;# 
   740     008D                     	;# 
   741     0091                     	;# 
   742     0092                     	;# 
   743     0093                     	;# 
   744     0094                     	;# 
   745     0095                     	;# 
   746     0096                     	;# 
   747     0097                     	;# 
   748     0098                     	;# 
   749     0099                     	;# 
   750     009A                     	;# 
   751     009B                     	;# 
   752     009B                     	;# 
   753     009C                     	;# 
   754     009D                     	;# 
   755     009E                     	;# 
   756     010C                     	;# 
   757     010D                     	;# 
   758     0111                     	;# 
   759     0112                     	;# 
   760     0113                     	;# 
   761     0114                     	;# 
   762     0115                     	;# 
   763     0116                     	;# 
   764     0117                     	;# 
   765     0118                     	;# 
   766     0119                     	;# 
   767     011A                     	;# 
   768     011B                     	;# 
   769     011D                     	;# 
   770     011E                     	;# 
   771     018C                     	;# 
   772     018D                     	;# 
   773     0191                     	;# 
   774     0191                     	;# 
   775     0192                     	;# 
   776     0193                     	;# 
   777     0193                     	;# 
   778     0193                     	;# 
   779     0194                     	;# 
   780     0195                     	;# 
   781     0196                     	;# 
   782     0199                     	;# 
   783     019A                     	;# 
   784     019B                     	;# 
   785     019B                     	;# 
   786     019B                     	;# 
   787     019B                     	;# 
   788     019C                     	;# 
   789     019C                     	;# 
   790     019D                     	;# 
   791     019E                     	;# 
   792     019F                     	;# 
   793     020C                     	;# 
   794     020D                     	;# 
   795     0211                     	;# 
   796     0211                     	;# 
   797     0212                     	;# 
   798     0212                     	;# 
   799     0213                     	;# 
   800     0213                     	;# 
   801     0214                     	;# 
   802     0214                     	;# 
   803     0215                     	;# 
   804     0215                     	;# 
   805     0215                     	;# 
   806     0216                     	;# 
   807     0216                     	;# 
   808     0217                     	;# 
   809     0217                     	;# 
   810     0219                     	;# 
   811     021A                     	;# 
   812     021B                     	;# 
   813     021C                     	;# 
   814     021D                     	;# 
   815     021E                     	;# 
   816     021F                     	;# 
   817     0291                     	;# 
   818     0291                     	;# 
   819     0292                     	;# 
   820     0293                     	;# 
   821     0294                     	;# 
   822     0295                     	;# 
   823     0295                     	;# 
   824     0296                     	;# 
   825     0298                     	;# 
   826     0298                     	;# 
   827     0299                     	;# 
   828     029A                     	;# 
   829     029B                     	;# 
   830     029C                     	;# 
   831     029C                     	;# 
   832     029D                     	;# 
   833     029E                     	;# 
   834     029E                     	;# 
   835     0311                     	;# 
   836     0311                     	;# 
   837     0312                     	;# 
   838     0313                     	;# 
   839     0318                     	;# 
   840     0318                     	;# 
   841     0319                     	;# 
   842     031A                     	;# 
   843     0394                     	;# 
   844     0395                     	;# 
   845     0396                     	;# 
   846     039A                     	;# 
   847     039C                     	;# 
   848     039D                     	;# 
   849     039E                     	;# 
   850     039F                     	;# 
   851     0415                     	;# 
   852     0416                     	;# 
   853     0417                     	;# 
   854     041C                     	;# 
   855     041D                     	;# 
   856     041E                     	;# 
   857     0FE4                     	;# 
   858     0FE5                     	;# 
   859     0FE6                     	;# 
   860     0FE7                     	;# 
   861     0FE8                     	;# 
   862     0FE9                     	;# 
   863     0FEA                     	;# 
   864     0FEB                     	;# 
   865     0FED                     	;# 
   866     0FEE                     	;# 
   867     0FEF                     	;# 
   868     0000                     	;# 
   869     0001                     	;# 
   870     0002                     	;# 
   871     0003                     	;# 
   872     0004                     	;# 
   873     0005                     	;# 
   874     0006                     	;# 
   875     0007                     	;# 
   876     0008                     	;# 
   877     0009                     	;# 
   878     000A                     	;# 
   879     000B                     	;# 
   880     000C                     	;# 
   881     000D                     	;# 
   882     0011                     	;# 
   883     0012                     	;# 
   884     0013                     	;# 
   885     0014                     	;# 
   886     0015                     	;# 
   887     0016                     	;# 
   888     0016                     	;# 
   889     0017                     	;# 
   890     0018                     	;# 
   891     0019                     	;# 
   892     001A                     	;# 
   893     001B                     	;# 
   894     001C                     	;# 
   895     001E                     	;# 
   896     001F                     	;# 
   897     008C                     	;# 
   898     008D                     	;# 
   899     0091                     	;# 
   900     0092                     	;# 
   901     0093                     	;# 
   902     0094                     	;# 
   903     0095                     	;# 
   904     0096                     	;# 
   905     0097                     	;# 
   906     0098                     	;# 
   907     0099                     	;# 
   908     009A                     	;# 
   909     009B                     	;# 
   910     009B                     	;# 
   911     009C                     	;# 
   912     009D                     	;# 
   913     009E                     	;# 
   914     010C                     	;# 
   915     010D                     	;# 
   916     0111                     	;# 
   917     0112                     	;# 
   918     0113                     	;# 
   919     0114                     	;# 
   920     0115                     	;# 
   921     0116                     	;# 
   922     0117                     	;# 
   923     0118                     	;# 
   924     0119                     	;# 
   925     011A                     	;# 
   926     011B                     	;# 
   927     011D                     	;# 
   928     011E                     	;# 
   929     018C                     	;# 
   930     018D                     	;# 
   931     0191                     	;# 
   932     0191                     	;# 
   933     0192                     	;# 
   934     0193                     	;# 
   935     0193                     	;# 
   936     0193                     	;# 
   937     0194                     	;# 
   938     0195                     	;# 
   939     0196                     	;# 
   940     0199                     	;# 
   941     019A                     	;# 
   942     019B                     	;# 
   943     019B                     	;# 
   944     019B                     	;# 
   945     019B                     	;# 
   946     019C                     	;# 
   947     019C                     	;# 
   948     019D                     	;# 
   949     019E                     	;# 
   950     019F                     	;# 
   951     020C                     	;# 
   952     020D                     	;# 
   953     0211                     	;# 
   954     0211                     	;# 
   955     0212                     	;# 
   956     0212                     	;# 
   957     0213                     	;# 
   958     0213                     	;# 
   959     0214                     	;# 
   960     0214                     	;# 
   961     0215                     	;# 
   962     0215                     	;# 
   963     0215                     	;# 
   964     0216                     	;# 
   965     0216                     	;# 
   966     0217                     	;# 
   967     0217                     	;# 
   968     0219                     	;# 
   969     021A                     	;# 
   970     021B                     	;# 
   971     021C                     	;# 
   972     021D                     	;# 
   973     021E                     	;# 
   974     021F                     	;# 
   975     0291                     	;# 
   976     0291                     	;# 
   977     0292                     	;# 
   978     0293                     	;# 
   979     0294                     	;# 
   980     0295                     	;# 
   981     0295                     	;# 
   982     0296                     	;# 
   983     0298                     	;# 
   984     0298                     	;# 
   985     0299                     	;# 
   986     029A                     	;# 
   987     029B                     	;# 
   988     029C                     	;# 
   989     029C                     	;# 
   990     029D                     	;# 
   991     029E                     	;# 
   992     029E                     	;# 
   993     0311                     	;# 
   994     0311                     	;# 
   995     0312                     	;# 
   996     0313                     	;# 
   997     0318                     	;# 
   998     0318                     	;# 
   999     0319                     	;# 
  1000     031A                     	;# 
  1001     0394                     	;# 
  1002     0395                     	;# 
  1003     0396                     	;# 
  1004     039A                     	;# 
  1005     039C                     	;# 
  1006     039D                     	;# 
  1007     039E                     	;# 
  1008     039F                     	;# 
  1009     0415                     	;# 
  1010     0416                     	;# 
  1011     0417                     	;# 
  1012     041C                     	;# 
  1013     041D                     	;# 
  1014     041E                     	;# 
  1015     0FE4                     	;# 
  1016     0FE5                     	;# 
  1017     0FE6                     	;# 
  1018     0FE7                     	;# 
  1019     0FE8                     	;# 
  1020     0FE9                     	;# 
  1021     0FEA                     	;# 
  1022     0FEB                     	;# 
  1023     0FED                     	;# 
  1024     0FEE                     	;# 
  1025     0FEF                     	;# 
  1026                           
  1027 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1028     0000                     
  1029 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1030     0000                     
  1031 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1032     0000                     
  1033                           	psect	stringtext1
  1034     0800                     __pstringtext1:
  1035     0800                     _msg0:
  1036     0800  344C               	retlw	76
  1037     0801  342D               	retlw	45
  1038     0802  3445               	retlw	69
  1039     0803  3478               	retlw	120
  1040     0804  3469               	retlw	105
  1041     0805  3462               	retlw	98
  1042     0806  3465               	retlw	101
  1043     0807  3420               	retlw	32
  1044     0808  346C               	retlw	108
  1045     0809  3469               	retlw	105
  1046     080A  3473               	retlw	115
  1047     080B  3474               	retlw	116
  1048     080C  3461               	retlw	97
  1049     080D  342C               	retlw	44
  1050     080E  3420               	retlw	32
  1051     080F  3441               	retlw	65
  1052     0810  342D               	retlw	45
  1053     0811  3441               	retlw	65
  1054     0812  3467               	retlw	103
  1055     0813  3465               	retlw	101
  1056     0814  346E               	retlw	110
  1057     0815  3464               	retlw	100
  1058     0816  3461               	retlw	97
  1059     0817  342C               	retlw	44
  1060     0818  3420               	retlw	32
  1061     0819  3450               	retlw	80
  1062     081A  342D               	retlw	45
  1063     081B  3450               	retlw	80
  1064     081C  3472               	retlw	114
  1065     081D  346F               	retlw	111
  1066     081E  3478               	retlw	120
  1067     081F  3469               	retlw	105
  1068     0820  346D               	retlw	109
  1069     0821  346F               	retlw	111
  1070     0822  342C               	retlw	44
  1071     0823  3420               	retlw	32
  1072     0824  3452               	retlw	82
  1073     0825  342D               	retlw	45
  1074     0826  3441               	retlw	65
  1075     0827  3470               	retlw	112
  1076     0828  3461               	retlw	97
  1077     0829  3467               	retlw	103
  1078     082A  3461               	retlw	97
  1079     082B  3420               	retlw	32
  1080     082C  346C               	retlw	108
  1081     082D  3469               	retlw	105
  1082     082E  3473               	retlw	115
  1083     082F  3474               	retlw	116
  1084     0830  3461               	retlw	97
  1085     0831  3400               	retlw	0
  1086     0832                     __end_of_msg0:
  1087                           
  1088                           	psect	stringtext2
  1089     0832                     __pstringtext2:
  1090     0832                     _msg6:
  1091     0832  3454               	retlw	84
  1092     0833  346F               	retlw	111
  1093     0834  3464               	retlw	100
  1094     0835  346F               	retlw	111
  1095     0836  3473               	retlw	115
  1096     0837  3420               	retlw	32
  1097     0838  346F               	retlw	111
  1098     0839  3473               	retlw	115
  1099     083A  3420               	retlw	32
  1100     083B  3461               	retlw	97
  1101     083C  3467               	retlw	103
  1102     083D  3465               	retlw	101
  1103     083E  346E               	retlw	110
  1104     083F  3464               	retlw	100
  1105     0840  3461               	retlw	97
  1106     0841  346D               	retlw	109
  1107     0842  3465               	retlw	101
  1108     0843  346E               	retlw	110
  1109     0844  3474               	retlw	116
  1110     0845  346F               	retlw	111
  1111     0846  3473               	retlw	115
  1112     0847  3420               	retlw	32
  1113     0848  3466               	retlw	102
  1114     0849  346F               	retlw	111
  1115     084A  3472               	retlw	114
  1116     084B  3461               	retlw	97
  1117     084C  346D               	retlw	109
  1118     084D  3420               	retlw	32
  1119     084E  3461               	retlw	97
  1120     084F  3474               	retlw	116
  1121     0850  3465               	retlw	101
  1122     0851  346E               	retlw	110
  1123     0852  3464               	retlw	100
  1124     0853  3469               	retlw	105
  1125     0854  3464               	retlw	100
  1126     0855  346F               	retlw	111
  1127     0856  3473               	retlw	115
  1128     0857  3400               	retlw	0
  1129     0858                     __end_of_msg6:
  1130                           
  1131                           	psect	stringtext3
  1132     0858                     __pstringtext3:
  1133     0858                     _msg5:
  1134     0858  344E               	retlw	78
  1135     0859  3461               	retlw	97
  1136     085A  346F               	retlw	111
  1137     085B  3420               	retlw	32
  1138     085C  3466               	retlw	102
  1139     085D  346F               	retlw	111
  1140     085E  3469               	retlw	105
  1141     085F  3420               	retlw	32
  1142     0860  3470               	retlw	112
  1143     0861  346F               	retlw	111
  1144     0862  3473               	retlw	115
  1145     0863  3473               	retlw	115
  1146     0864  3469               	retlw	105
  1147     0865  3476               	retlw	118
  1148     0866  3465               	retlw	101
  1149     0867  346C               	retlw	108
  1150     0868  3420               	retlw	32
  1151     0869  3461               	retlw	97
  1152     086A  3467               	retlw	103
  1153     086B  3465               	retlw	101
  1154     086C  346E               	retlw	110
  1155     086D  3464               	retlw	100
  1156     086E  3461               	retlw	97
  1157     086F  3472               	retlw	114
  1158     0870  3420               	retlw	32
  1159     0871  3428               	retlw	40
  1160     0872  346E               	retlw	110
  1161     0873  346F               	retlw	111
  1162     0874  346D               	retlw	109
  1163     0875  3465               	retlw	101
  1164     0876  3420               	retlw	32
  1165     0877  3476               	retlw	118
  1166     0878  3461               	retlw	97
  1167     0879  347A               	retlw	122
  1168     087A  3469               	retlw	105
  1169     087B  346F               	retlw	111
  1170     087C  3429               	retlw	41
  1171     087D  3400               	retlw	0
  1172     087E                     __end_of_msg5:
  1173                           
  1174                           	psect	stringtext4
  1175     087E                     __pstringtext4:
  1176     087E                     _msg7:
  1177     087E  344E               	retlw	78
  1178     087F  3461               	retlw	97
  1179     0880  346F               	retlw	111
  1180     0881  3420               	retlw	32
  1181     0882  3464               	retlw	100
  1182     0883  3469               	retlw	105
  1183     0884  3473               	retlw	115
  1184     0885  3470               	retlw	112
  1185     0886  346F               	retlw	111
  1186     0887  346E               	retlw	110
  1187     0888  3465               	retlw	101
  1188     0889  346D               	retlw	109
  1189     088A  346F               	retlw	111
  1190     088B  3473               	retlw	115
  1191     088C  3420               	retlw	32
  1192     088D  3464               	retlw	100
  1193     088E  3465               	retlw	101
  1194     088F  3420               	retlw	32
  1195     0890  346D               	retlw	109
  1196     0891  3461               	retlw	97
  1197     0892  3469               	retlw	105
  1198     0893  3473               	retlw	115
  1199     0894  3420               	retlw	32
  1200     0895  3461               	retlw	97
  1201     0896  3467               	retlw	103
  1202     0897  3465               	retlw	101
  1203     0898  346E               	retlw	110
  1204     0899  3464               	retlw	100
  1205     089A  3461               	retlw	97
  1206     089B  346D               	retlw	109
  1207     089C  3465               	retlw	101
  1208     089D  346E               	retlw	110
  1209     089E  3474               	retlw	116
  1210     089F  346F               	retlw	111
  1211     08A0  3473               	retlw	115
  1212     08A1  3400               	retlw	0
  1213     08A2                     __end_of_msg7:
  1214                           
  1215                           	psect	stringtext5
  1216     08A2                     __pstringtext5:
  1217     08A2                     _msg2:
  1218     08A2  344C               	retlw	76
  1219     08A3  3469               	retlw	105
  1220     08A4  3473               	retlw	115
  1221     08A5  3474               	retlw	116
  1222     08A6  3461               	retlw	97
  1223     08A7  3420               	retlw	32
  1224     08A8  3464               	retlw	100
  1225     08A9  3465               	retlw	101
  1226     08AA  3420               	retlw	32
  1227     08AB  3461               	retlw	97
  1228     08AC  3467               	retlw	103
  1229     08AD  3465               	retlw	101
  1230     08AE  346E               	retlw	110
  1231     08AF  3464               	retlw	100
  1232     08B0  3461               	retlw	97
  1233     08B1  346D               	retlw	109
  1234     08B2  3465               	retlw	101
  1235     08B3  346E               	retlw	110
  1236     08B4  3474               	retlw	116
  1237     08B5  346F               	retlw	111
  1238     08B6  3473               	retlw	115
  1239     08B7  3420               	retlw	32
  1240     08B8  3476               	retlw	118
  1241     08B9  3461               	retlw	97
  1242     08BA  347A               	retlw	122
  1243     08BB  3469               	retlw	105
  1244     08BC  3461               	retlw	97
  1245     08BD  3400               	retlw	0
  1246     08BE                     __end_of_msg2:
  1247                           
  1248                           	psect	stringtext6
  1249     08BE                     __pstringtext6:
  1250     08BE                     _msg8:
  1251     08BE  3441               	retlw	65
  1252     08BF  3467               	retlw	103
  1253     08C0  3465               	retlw	101
  1254     08C1  346E               	retlw	110
  1255     08C2  3464               	retlw	100
  1256     08C3  3461               	retlw	97
  1257     08C4  346D               	retlw	109
  1258     08C5  3465               	retlw	101
  1259     08C6  346E               	retlw	110
  1260     08C7  3474               	retlw	116
  1261     08C8  346F               	retlw	111
  1262     08C9  3420               	retlw	32
  1263     08CA  3472               	retlw	114
  1264     08CB  3465               	retlw	101
  1265     08CC  3461               	retlw	97
  1266     08CD  346C               	retlw	108
  1267     08CE  3469               	retlw	105
  1268     08CF  347A               	retlw	122
  1269     08D0  3461               	retlw	97
  1270     08D1  3464               	retlw	100
  1271     08D2  346F               	retlw	111
  1272     08D3  3400               	retlw	0
  1273     08D4                     __end_of_msg8:
  1274                           
  1275                           	psect	stringtext7
  1276     08D4                     __pstringtext7:
  1277     08D4                     _msg1:
  1278     08D4  344C               	retlw	76
  1279     08D5  3469               	retlw	105
  1280     08D6  3473               	retlw	115
  1281     08D7  3474               	retlw	116
  1282     08D8  3461               	retlw	97
  1283     08D9  3420               	retlw	32
  1284     08DA  3464               	retlw	100
  1285     08DB  3465               	retlw	101
  1286     08DC  3420               	retlw	32
  1287     08DD  3461               	retlw	97
  1288     08DE  3467               	retlw	103
  1289     08DF  3465               	retlw	101
  1290     08E0  346E               	retlw	110
  1291     08E1  3464               	retlw	100
  1292     08E2  3461               	retlw	97
  1293     08E3  346D               	retlw	109
  1294     08E4  3465               	retlw	101
  1295     08E5  346E               	retlw	110
  1296     08E6  3474               	retlw	116
  1297     08E7  346F               	retlw	111
  1298     08E8  3473               	retlw	115
  1299     08E9  3400               	retlw	0
  1300     08EA                     __end_of_msg1:
  1301                           
  1302                           	psect	stringtext8
  1303     08EA                     __pstringtext8:
  1304     08EA                     _msg4:
  1305     08EA  3444               	retlw	68
  1306     08EB  3469               	retlw	105
  1307     08EC  3467               	retlw	103
  1308     08ED  3469               	retlw	105
  1309     08EE  3474               	retlw	116
  1310     08EF  3465               	retlw	101
  1311     08F0  3420               	retlw	32
  1312     08F1  346F               	retlw	111
  1313     08F2  3420               	retlw	32
  1314     08F3  346E               	retlw	110
  1315     08F4  346F               	retlw	111
  1316     08F5  346D               	retlw	109
  1317     08F6  3465               	retlw	101
  1318     08F7  343A               	retlw	58
  1319     08F8  3400               	retlw	0
  1320     08F9                     __end_of_msg4:
  1321                           
  1322                           	psect	stringtext9
  1323     08F9                     __pstringtext9:
  1324     08F9                     _msg3:
  1325     08F9  3450               	retlw	80
  1326     08FA  3472               	retlw	114
  1327     08FB  346F               	retlw	111
  1328     08FC  3478               	retlw	120
  1329     08FD  3469               	retlw	105
  1330     08FE  346D               	retlw	109
  1331     08FF  346F               	retlw	111
  1332     0900  343A               	retlw	58
  1333     0901  3400               	retlw	0
  1334     0902                     __end_of_msg3:
  1335     0003                     _STATUSbits	set	3
  1336     0011                     _PIR1bits	set	17
  1337     000B                     _INTCONbits	set	11
  1338     0095                     _OPTION_REGbits	set	149
  1339     008D                     _TRISB	set	141
  1340     008C                     _TRISA	set	140
  1341     0097                     _WDTCON	set	151
  1342     0098                     _OSCTUNE	set	152
  1343     0099                     _OSCCON	set	153
  1344     04D6                     _PLLR	set	1238
  1345     011E                     _APFCON1	set	286
  1346     011D                     _APFCON0	set	285
  1347     010D                     _LATB	set	269
  1348     010C                     _LATA	set	268
  1349     0116                     _BORCON	set	278
  1350     0191                     _EEADR	set	401
  1351     0193                     _EEDATA	set	403
  1352     0195                     _EECON1	set	405
  1353     018C                     _ANSELA	set	396
  1354     018D                     _ANSELB	set	397
  1355     019A                     _TXREG	set	410
  1356     0199                     _RCREG	set	409
  1357     019D                     _RCSTAbits	set	413
  1358     019E                     _TXSTAbits	set	414
  1359     019C                     _SPBRGH	set	412
  1360     019B                     _SPBRGL	set	411
  1361     019E                     _TXSTA	set	414
  1362     019D                     _RCSTA	set	413
  1363     019F                     _BAUDCON	set	415
  1364     0196                     _EECON2	set	406
  1365     0193                     _EEDATL	set	403
  1366     0194                     _EEDATH	set	404
  1367     0195                     _EECON1bits	set	405
  1368     0192                     _EEADRH	set	402
  1369     0191                     _EEADRL	set	401
  1370     020C                     _WPUA	set	524
  1371     020D                     _WPUB	set	525
  1372                           
  1373                           	psect	cinit
  1374     07F4                     start_initialization:	
  1375                           ; #config settings
  1376                           
  1377     07F4                     __initialization:
  1378                           
  1379                           ; Clear objects allocated to COMMON
  1380     07F4  01FD               	clrf	__pbssCOMMON& (0+127)
  1381                           
  1382                           ; Clear objects allocated to BANK0
  1383     07F5  3020               	movlw	low __pbssBANK0
  1384     07F6  0084               	movwf	4
  1385     07F7  3000               	movlw	high __pbssBANK0
  1386     07F8  0085               	movwf	5
  1387     07F9  301F               	movlw	31
  1388     07FA  3184  241F  3187   	fcall	clear_ram0
  1389     07FD                     end_of_initialization:	
  1390                           ;End of C runtime variable initialization code
  1391                           
  1392     07FD                     __end_of__initialization:
  1393     07FD  0020               	movlb	0
  1394     07FE  3185  2D13         	ljmp	_main	;jump to C main() function
  1395                           
  1396                           	psect	bssEEDATA
  1397     0000                     __pbssEEDATA:
  1398     0000                     _ee:
  1399     0000  0000               	db	0
  1400     0001  0000               	db	0
  1401     0002  0000               	db	0
  1402     0003  0000               	db	0
  1403     0004  0000               	db	0
  1404     0005  0000               	db	0
  1405     0006  0000               	db	0
  1406     0007  0000               	db	0
  1407     0008  0000               	db	0
  1408     0009  0000               	db	0
  1409     000A  0000               	db	0
  1410     000B  0000               	db	0
  1411     000C  0000               	db	0
  1412     000D  0000               	db	0
  1413     000E  0000               	db	0
  1414     000F  0000               	db	0
  1415     0010  0000               	db	0
  1416     0011  0000               	db	0
  1417     0012  0000               	db	0
  1418     0013  0000               	db	0
  1419     0014  0000               	db	0
  1420     0015  0000               	db	0
  1421     0016  0000               	db	0
  1422     0017  0000               	db	0
  1423     0018  0000               	db	0
  1424     0019  0000               	db	0
  1425     001A  0000               	db	0
  1426     001B  0000               	db	0
  1427     001C  0000               	db	0
  1428     001D  0000               	db	0
  1429     001E  0000               	db	0
  1430     001F  0000               	db	0
  1431     0020  0000               	db	0
  1432     0021  0000               	db	0
  1433     0022  0000               	db	0
  1434     0023  0000               	db	0
  1435     0024  0000               	db	0
  1436     0025  0000               	db	0
  1437     0026  0000               	db	0
  1438     0027  0000               	db	0
  1439     0028  0000               	db	0
  1440     0029  0000               	db	0
  1441     002A  0000               	db	0
  1442     002B  0000               	db	0
  1443     002C  0000               	db	0
  1444     002D  0000               	db	0
  1445     002E  0000               	db	0
  1446     002F  0000               	db	0
  1447     0030  0000               	db	0
  1448     0031  0000               	db	0
  1449     0032  0000               	db	0
  1450     0033  0000               	db	0
  1451     0034  0000               	db	0
  1452     0035  0000               	db	0
  1453     0036  0000               	db	0
  1454     0037  0000               	db	0
  1455     0038  0000               	db	0
  1456     0039  0000               	db	0
  1457     003A  0000               	db	0
  1458     003B  0000               	db	0
  1459     003C  0000               	db	0
  1460     003D  0000               	db	0
  1461     003E  0000               	db	0
  1462     003F  0000               	db	0
  1463     0040  0000               	db	0
  1464     0041  0000               	db	0
  1465     0042  0000               	db	0
  1466     0043  0000               	db	0
  1467     0044  0000               	db	0
  1468     0045  0000               	db	0
  1469     0046  0000               	db	0
  1470     0047  0000               	db	0
  1471     0048  0000               	db	0
  1472     0049  0000               	db	0
  1473     004A  0000               	db	0
  1474     004B  0000               	db	0
  1475     004C  0000               	db	0
  1476     004D  0000               	db	0
  1477     004E  0000               	db	0
  1478     004F  0000               	db	0
  1479     0050  0000               	db	0
  1480     0051  0000               	db	0
  1481     0052  0000               	db	0
  1482     0053  0000               	db	0
  1483     0054  0000               	db	0
  1484     0055  0000               	db	0
  1485     0056  0000               	db	0
  1486     0057  0000               	db	0
  1487     0058  0000               	db	0
  1488     0059  0000               	db	0
  1489     005A  0000               	db	0
  1490     005B  0000               	db	0
  1491     005C  0000               	db	0
  1492     005D  0000               	db	0
  1493     005E  0000               	db	0
  1494     005F  0000               	db	0
  1495     0060  0000               	db	0
  1496     0061  0000               	db	0
  1497     0062  0000               	db	0
  1498     0063  0000               	db	0
  1499     0064  0000               	db	0
  1500     0065  0000               	db	0
  1501     0066  0000               	db	0
  1502     0067  0000               	db	0
  1503     0068  0000               	db	0
  1504     0069  0000               	db	0
  1505     006A  0000               	db	0
  1506     006B  0000               	db	0
  1507     006C  0000               	db	0
  1508     006D  0000               	db	0
  1509     006E  0000               	db	0
  1510     006F  0000               	db	0
  1511     0070  0000               	db	0
  1512     0071  0000               	db	0
  1513     0072  0000               	db	0
  1514     0073  0000               	db	0
  1515     0074  0000               	db	0
  1516     0075  0000               	db	0
  1517     0076  0000               	db	0
  1518     0077  0000               	db	0
  1519     0078  0000               	db	0
  1520     0079  0000               	db	0
  1521     007A  0000               	db	0
  1522     007B  0000               	db	0
  1523     007C  0000               	db	0
  1524     007D  0000               	db	0
  1525     007E  0000               	db	0
  1526     007F  0000               	db	0
  1527     0080  0000               	db	0
  1528     0081  0000               	db	0
  1529     0082  0000               	db	0
  1530     0083  0000               	db	0
  1531     0084  0000               	db	0
  1532     0085  0000               	db	0
  1533     0086  0000               	db	0
  1534     0087  0000               	db	0
  1535     0088  0000               	db	0
  1536     0089  0000               	db	0
  1537     008A  0000               	db	0
  1538     008B  0000               	db	0
  1539     008C  0000               	db	0
  1540     008D  0000               	db	0
  1541     008E  0000               	db	0
  1542     008F  0000               	db	0
  1543     0090  0000               	db	0
  1544     0091  0000               	db	0
  1545     0092  0000               	db	0
  1546     0093  0000               	db	0
  1547     0094  0000               	db	0
  1548     0095  0000               	db	0
  1549     0096  0000               	db	0
  1550     0097  0000               	db	0
  1551     0098  0000               	db	0
  1552     0099  0000               	db	0
  1553     009A  0000               	db	0
  1554     009B  0000               	db	0
  1555     009C  0000               	db	0
  1556     009D  0000               	db	0
  1557     009E  0000               	db	0
  1558     009F  0000               	db	0
  1559     00A0  0000               	db	0
  1560     00A1  0000               	db	0
  1561     00A2  0000               	db	0
  1562     00A3  0000               	db	0
  1563     00A4  0000               	db	0
  1564     00A5  0000               	db	0
  1565     00A6  0000               	db	0
  1566     00A7  0000               	db	0
  1567     00A8  0000               	db	0
  1568     00A9  0000               	db	0
  1569     00AA  0000               	db	0
  1570     00AB  0000               	db	0
  1571     00AC  0000               	db	0
  1572     00AD  0000               	db	0
  1573     00AE  0000               	db	0
  1574     00AF  0000               	db	0
  1575     00B0  0000               	db	0
  1576     00B1  0000               	db	0
  1577     00B2  0000               	db	0
  1578     00B3  0000               	db	0
  1579     00B4  0000               	db	0
  1580     00B5  0000               	db	0
  1581     00B6  0000               	db	0
  1582     00B7  0000               	db	0
  1583     00B8  0000               	db	0
  1584     00B9  0000               	db	0
  1585     00BA  0000               	db	0
  1586     00BB  0000               	db	0
  1587     00BC  0000               	db	0
  1588     00BD  0000               	db	0
  1589     00BE  0000               	db	0
  1590     00BF  0000               	db	0
  1591     00C0  0000               	db	0
  1592     00C1  0000               	db	0
  1593     00C2  0000               	db	0
  1594     00C3  0000               	db	0
  1595     00C4  0000               	db	0
  1596     00C5  0000               	db	0
  1597     00C6  0000               	db	0
  1598     00C7  0000               	db	0
  1599     00C8  0000               	db	0
  1600     00C9  0000               	db	0
  1601     00CA  0000               	db	0
  1602     00CB  0000               	db	0
  1603     00CC  0000               	db	0
  1604     00CD  0000               	db	0
  1605     00CE  0000               	db	0
  1606     00CF  0000               	db	0
  1607     00D0  0000               	db	0
  1608     00D1  0000               	db	0
  1609     00D2  0000               	db	0
  1610     00D3  0000               	db	0
  1611     00D4  0000               	db	0
  1612     00D5  0000               	db	0
  1613     00D6  0000               	db	0
  1614     00D7  0000               	db	0
  1615     00D8  0000               	db	0
  1616     00D9  0000               	db	0
  1617     00DA  0000               	db	0
  1618     00DB  0000               	db	0
  1619                           
  1620                           	psect	bssCOMMON
  1621     007D                     __pbssCOMMON:
  1622     007D                     _countName:
  1623     007D                     	ds	1
  1624                           
  1625                           	psect	bssBANK0
  1626     0020                     __pbssBANK0:
  1627     0020                     recebeGuardaNome@nameRx:
  1628     0020                     	ds	21
  1629     0035                     _EUSART_ErrorHandler:
  1630     0035                     	ds	2
  1631     0037                     _EUSART_OverrunErrorHandler:
  1632     0037                     	ds	2
  1633     0039                     _EUSART_FramingErrorHandler:
  1634     0039                     	ds	2
  1635     003B                     _nome_vazio:
  1636     003B                     	ds	1
  1637     003C                     _bufferRx:
  1638     003C                     	ds	1
  1639     003D                     _countRx:
  1640     003D                     	ds	1
  1641     003E                     _eusartRxLastError:
  1642     003E                     	ds	1
  1643                           
  1644                           	psect	clrtext
  1645     041F                     clear_ram0:	
  1646                           ;	Called with FSR0 containing the base address, and
  1647                           ;	WREG with the size to clear
  1648                           
  1649     041F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1650     0420                     clrloop0:
  1651     0420  0180               	clrf	0	;clear RAM location pointed to by FSR
  1652     0421  3101               	addfsr 0,1
  1653     0422  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1654     0423  2C20               	goto	clrloop0	;have we reached the end yet?
  1655     0424  3400               	retlw	0	;all done for this memory range, return
  1656                           
  1657                           	psect	cstackCOMMON
  1658     0070                     __pcstackCOMMON:
  1659     0070                     ?_EUSART_SetFramingErrorHandler:
  1660     0070                     ?_EUSART_SetOverrunErrorHandler:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0070                     ?_EUSART_SetErrorHandler:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     0070                     ?_PIN_MANAGER_Initialize:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     0070                     ??_PIN_MANAGER_Initialize:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672     0070                     ?_OSCILLATOR_Initialize:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675     0070                     ??_OSCILLATOR_Initialize:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678     0070                     ?_WDT_Initialize:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681     0070                     ??_WDT_Initialize:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0070                     ?_EUSART_Initialize:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0070                     ?_EUSART_is_rx_ready:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0070                     ??_EUSART_is_rx_ready:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0070                     ?_EUSART_Read:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696     0070                     ??_EUSART_Read:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699     0070                     ?_EUSART_Write:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702     0070                     ??_EUSART_Write:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705     0070                     ?_SYSTEM_Initialize:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708     0070                     ?_enviaNomes:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711     0070                     ?_recebeGuardaNome:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714     0070                     ?_analisaRx:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717     0070                     ?_main:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720     0070                     ?___eecpymem:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723     0070                     ?___memcpyee:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726     0070                     ?___eetoc:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729     0070                     ?___bmul:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732     0070                     EUSART_Write@txData:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735     0070                     ___eecpymem@from:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738     0070                     ___memcpyee@from:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741     0070                     ___bmul@multiplicand:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744     0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747     0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1748                           ; 2 bytes @ 0x0
  1749                           
  1750     0070                     EUSART_SetErrorHandler@interruptHandler:	
  1751                           ; 2 bytes @ 0x0
  1752                           
  1753                           
  1754                           ; 2 bytes @ 0x0
  1755     0070                     	ds	1
  1756     0071                     ?_enviaMsg:
  1757     0071                     ??___bmul:	
  1758                           ; 1 bytes @ 0x1
  1759                           
  1760     0071                     ___eecpymem@size:	
  1761                           ; 1 bytes @ 0x1
  1762                           
  1763     0071                     ___memcpyee@size:	
  1764                           ; 1 bytes @ 0x1
  1765                           
  1766     0071                     enviaMsg@msg:	
  1767                           ; 1 bytes @ 0x1
  1768                           
  1769                           
  1770                           ; 2 bytes @ 0x1
  1771     0071                     	ds	1
  1772     0072                     ??_EUSART_SetFramingErrorHandler:
  1773     0072                     ??_EUSART_SetOverrunErrorHandler:	
  1774                           ; 1 bytes @ 0x2
  1775                           
  1776     0072                     ??_EUSART_SetErrorHandler:	
  1777                           ; 1 bytes @ 0x2
  1778                           
  1779     0072                     ??_EUSART_Initialize:	
  1780                           ; 1 bytes @ 0x2
  1781                           
  1782     0072                     ??_SYSTEM_Initialize:	
  1783                           ; 1 bytes @ 0x2
  1784                           
  1785     0072                     ??___eecpymem:	
  1786                           ; 1 bytes @ 0x2
  1787                           
  1788     0072                     ??___memcpyee:	
  1789                           ; 1 bytes @ 0x2
  1790                           
  1791     0072                     ___bmul@product:	
  1792                           ; 1 bytes @ 0x2
  1793                           
  1794                           
  1795                           ; 1 bytes @ 0x2
  1796     0072                     	ds	1
  1797     0073                     ??_enviaMsg:
  1798     0073                     ___bmul@multiplier:	
  1799                           ; 1 bytes @ 0x3
  1800                           
  1801                           
  1802                           ; 1 bytes @ 0x3
  1803     0073                     	ds	1
  1804     0074                     ___eecpymem@cp:
  1805     0074                     ___memcpyee@ptr:	
  1806                           ; 1 bytes @ 0x4
  1807                           
  1808                           
  1809                           ; 1 bytes @ 0x4
  1810     0074                     	ds	1
  1811     0075                     ___eecpymem@to:
  1812     0075                     ___memcpyee@to:	
  1813                           ; 1 bytes @ 0x5
  1814                           
  1815                           
  1816                           ; 1 bytes @ 0x5
  1817     0075                     	ds	1
  1818     0076                     ??___eetoc:
  1819     0076                     ?___ctoee:	
  1820                           ; 1 bytes @ 0x6
  1821                           
  1822     0076                     enviaMsg@i:	
  1823                           ; 1 bytes @ 0x6
  1824                           
  1825     0076                     ___eetoc@addr:	
  1826                           ; 1 bytes @ 0x6
  1827                           
  1828     0076                     ___ctoee@data:	
  1829                           ; 1 bytes @ 0x6
  1830                           
  1831                           
  1832                           ; 1 bytes @ 0x6
  1833     0076                     	ds	1
  1834     0077                     ??___ctoee:
  1835     0077                     ___eetoc@data:	
  1836                           ; 1 bytes @ 0x7
  1837                           
  1838     0077                     ___ctoee@addr:	
  1839                           ; 1 bytes @ 0x7
  1840                           
  1841                           
  1842                           ; 1 bytes @ 0x7
  1843     0077                     	ds	1
  1844     0078                     ??_enviaNomes:
  1845     0078                     ??_recebeGuardaNome:	
  1846                           ; 1 bytes @ 0x8
  1847                           
  1848                           
  1849                           ; 1 bytes @ 0x8
  1850     0078                     	ds	1
  1851     0079                     recebeGuardaNome@rxChar:
  1852                           
  1853                           ; 1 bytes @ 0x9
  1854     0079                     	ds	1
  1855     007A                     recebeGuardaNome@countByte:
  1856                           
  1857                           ; 1 bytes @ 0xA
  1858     007A                     	ds	1
  1859     007B                     ??_analisaRx:
  1860                           
  1861                           ; 1 bytes @ 0xB
  1862     007B                     	ds	1
  1863     007C                     ??_main:
  1864     007C                     main@rxChar:	
  1865                           ; 1 bytes @ 0xC
  1866                           
  1867                           
  1868                           ; 1 bytes @ 0xC
  1869     007C                     	ds	1
  1870                           
  1871                           	psect	cstackBANK0
  1872     003F                     __pcstackBANK0:
  1873     003F                     enviaNomes@j:
  1874                           
  1875                           ; 2 bytes @ 0x0
  1876     003F                     	ds	2
  1877     0041                     enviaNomes@j_413:
  1878                           
  1879                           ; 2 bytes @ 0x2
  1880     0041                     	ds	2
  1881     0043                     enviaNomes@i:
  1882                           
  1883                           ; 2 bytes @ 0x4
  1884     0043                     	ds	2
  1885     0045                     analisaRx@j:
  1886                           
  1887                           ; 2 bytes @ 0x6
  1888     0045                     	ds	2
  1889     0047                     analisaRx@i_426:
  1890                           
  1891                           ; 2 bytes @ 0x8
  1892     0047                     	ds	2
  1893     0049                     analisaRx@i:
  1894                           
  1895                           ; 2 bytes @ 0xA
  1896     0049                     	ds	2
  1897                           
  1898                           	psect	maintext
  1899     0513                     __pmaintext:	
  1900 ;;
  1901 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1902 ;;
  1903 ;; *************** function _main *****************
  1904 ;; Defined at:
  1905 ;;		line 205 in file "main.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  rxChar          1   12[COMMON] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : B1F/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1919 ;;      Params:         0       0       0       0       0       0
  1920 ;;      Locals:         1       0       0       0       0       0
  1921 ;;      Temps:          0       0       0       0       0       0
  1922 ;;      Totals:         1       0       0       0       0       0
  1923 ;;Total ram usage:        1 bytes
  1924 ;; Hardware stack levels required when called: 4
  1925 ;; This function calls:
  1926 ;;		_EUSART_Read
  1927 ;;		_EUSART_is_rx_ready
  1928 ;;		_SYSTEM_Initialize
  1929 ;;		_analisaRx
  1930 ;; This function is called by:
  1931 ;;		Startup code after reset
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935     0513                     _main:	
  1936                           ;psect for function _main
  1937                           
  1938     0513                     l1741:	
  1939                           ;incstack = 0
  1940                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1941                           
  1942                           
  1943                           ;main.c: 208:     SYSTEM_Initialize();
  1944     0513  3184  2450  3185   	fcall	_SYSTEM_Initialize
  1945     0516                     l308:	
  1946                           ;main.c: 225:     while (1)
  1947                           
  1948                           
  1949                           ;main.c: 226:     {;main.c: 227:         if (EUSART_is_rx_ready()) {
  1950     0516  3184  2408  3185   	fcall	_EUSART_is_rx_ready
  1951     0519  3A00               	xorlw	0
  1952     051A  1903               	skipnz
  1953     051B  2D1D               	goto	u971
  1954     051C  2D1E               	goto	u970
  1955     051D                     u971:
  1956     051D  2D16               	goto	l308
  1957     051E                     u970:
  1958     051E                     l1743:
  1959                           
  1960                           ;main.c: 228:             uint8_t rxChar = EUSART_Read();
  1961     051E  3184  245D  3185   	fcall	_EUSART_Read
  1962     0521  00FC               	movwf	main@rxChar
  1963     0522                     l1745:
  1964                           
  1965                           ;main.c: 229:             if (rxChar == 0x4C || rxChar == 0x41 || rxChar == 0x50 || rxCh
      +                          ar == 0x52) {
  1966     0522  304C               	movlw	76
  1967     0523  067C               	xorwf	main@rxChar,w
  1968     0524  1903               	btfsc	3,2
  1969     0525  2D27               	goto	u981
  1970     0526  2D28               	goto	u980
  1971     0527                     u981:
  1972     0527  2D3A               	goto	l1753
  1973     0528                     u980:
  1974     0528                     l1747:
  1975     0528  3041               	movlw	65
  1976     0529  067C               	xorwf	main@rxChar,w
  1977     052A  1903               	btfsc	3,2
  1978     052B  2D2D               	goto	u991
  1979     052C  2D2E               	goto	u990
  1980     052D                     u991:
  1981     052D  2D3A               	goto	l1753
  1982     052E                     u990:
  1983     052E                     l1749:
  1984     052E  3050               	movlw	80
  1985     052F  067C               	xorwf	main@rxChar,w
  1986     0530  1903               	btfsc	3,2
  1987     0531  2D33               	goto	u1001
  1988     0532  2D34               	goto	u1000
  1989     0533                     u1001:
  1990     0533  2D3A               	goto	l1753
  1991     0534                     u1000:
  1992     0534                     l1751:
  1993     0534  3052               	movlw	82
  1994     0535  067C               	xorwf	main@rxChar,w
  1995     0536  1D03               	btfss	3,2
  1996     0537  2D39               	goto	u1011
  1997     0538  2D3A               	goto	u1010
  1998     0539                     u1011:
  1999     0539  2D3E               	goto	l1755
  2000     053A                     u1010:
  2001     053A                     l1753:
  2002                           
  2003                           ;main.c: 230:                 bufferRx = rxChar;
  2004     053A  087C               	movf	main@rxChar,w
  2005     053B  0020               	movlb	0	; select bank0
  2006     053C  00BC               	movwf	_bufferRx
  2007                           
  2008                           ;main.c: 231:             }
  2009     053D  2D16               	goto	l308
  2010     053E                     l1755:
  2011     053E  300D               	movlw	13
  2012     053F  067C               	xorwf	main@rxChar,w
  2013     0540  1D03               	btfss	3,2
  2014     0541  2D43               	goto	u1021
  2015     0542  2D44               	goto	u1020
  2016     0543                     u1021:
  2017     0543  2D48               	goto	l309
  2018     0544                     u1020:
  2019     0544                     l1757:
  2020                           
  2021                           ;main.c: 233:                 analisaRx();
  2022     0544  3186  26D3  3185   	fcall	_analisaRx
  2023     0547  2D16               	goto	l308
  2024     0548                     l309:	
  2025                           ;main.c: 235:         }
  2026                           
  2027     0548  2D16               	goto	l308
  2028     0549  3180  2802         	ljmp	start
  2029     054B                     __end_of_main:
  2030                           
  2031                           	psect	text1
  2032     06D3                     __ptext1:	
  2033 ;; *************** function _analisaRx *****************
  2034 ;; Defined at:
  2035 ;;		line 145 in file "main.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  j               2    6[BANK0 ] int 
  2040 ;;  i               2    8[BANK0 ] int 
  2041 ;;  i               2   10[BANK0 ] int 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2051 ;;      Params:         0       0       0       0       0       0
  2052 ;;      Locals:         0       6       0       0       0       0
  2053 ;;      Temps:          1       0       0       0       0       0
  2054 ;;      Totals:         1       6       0       0       0       0
  2055 ;;Total ram usage:        7 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 3
  2058 ;; This function calls:
  2059 ;;		_EUSART_Write
  2060 ;;		___bmul
  2061 ;;		___ctoee
  2062 ;;		___eetoc
  2063 ;;		_enviaMsg
  2064 ;;		_enviaNomes
  2065 ;;		_recebeGuardaNome
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     06D3                     _analisaRx:	
  2072                           ;psect for function _analisaRx
  2073                           
  2074     06D3                     l1657:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _analisaRx: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2077                           
  2078                           
  2079                           ;main.c: 146:     if(bufferRx == 0x4C){
  2080     06D3  304C               	movlw	76
  2081     06D4  0020               	movlb	0	; select bank0
  2082     06D5  063C               	xorwf	_bufferRx,w
  2083     06D6  1D03               	btfss	3,2
  2084     06D7  2ED9               	goto	u831
  2085     06D8  2EDA               	goto	u830
  2086     06D9                     u831:
  2087     06D9  2EF6               	goto	l1667
  2088     06DA                     u830:
  2089     06DA                     l1659:
  2090                           
  2091                           ;main.c: 147:         if(ee[0].estado == 0){
  2092     06DA  3000               	movlw	(low _ee)& (0+255)
  2093     06DB  3184  2439  3186   	fcall	___eetoc
  2094     06DE  3A00               	xorlw	0
  2095     06DF  1D03               	skipz
  2096     06E0  2EE2               	goto	u841
  2097     06E1  2EE3               	goto	u840
  2098     06E2                     u841:
  2099     06E2  2EEB               	goto	l1663
  2100     06E3                     u840:
  2101     06E3                     l1661:
  2102                           
  2103                           ;main.c: 148:             enviaMsg(msg2);
  2104     06E3  30A2               	movlw	low (_msg2| (0+32768))
  2105     06E4  00F1               	movwf	enviaMsg@msg
  2106     06E5  3088               	movlw	high (_msg2| (0+32768))
  2107     06E6  00F2               	movwf	enviaMsg@msg+1
  2108     06E7  3184  24BB  3186   	fcall	_enviaMsg
  2109                           
  2110                           ;main.c: 149:         }
  2111     06EA  2F17               	goto	l1679
  2112     06EB                     l1663:
  2113                           
  2114                           ;main.c: 151:         enviaMsg(msg1);
  2115     06EB  30D4               	movlw	low (_msg1| (0+32768))
  2116     06EC  00F1               	movwf	enviaMsg@msg
  2117     06ED  3088               	movlw	high (_msg1| (0+32768))
  2118     06EE  00F2               	movwf	enviaMsg@msg+1
  2119     06EF  3184  24BB  3186   	fcall	_enviaMsg
  2120     06F2                     l1665:
  2121                           
  2122                           ;main.c: 152:         enviaNomes();
  2123     06F2  3186  2614  3186   	fcall	_enviaNomes
  2124     06F5  2F17               	goto	l1679
  2125     06F6                     l1667:
  2126     06F6  3041               	movlw	65
  2127     06F7  063C               	xorwf	_bufferRx,w
  2128     06F8  1D03               	btfss	3,2
  2129     06F9  2EFB               	goto	u851
  2130     06FA  2EFC               	goto	u850
  2131     06FB                     u851:
  2132     06FB  2F17               	goto	l1679
  2133     06FC                     u850:
  2134     06FC                     l1669:
  2135                           
  2136                           ;main.c: 156:         if (countName < 10){
  2137     06FC  300A               	movlw	10
  2138     06FD  027D               	subwf	_countName,w
  2139     06FE  1803               	skipnc
  2140     06FF  2F01               	goto	u861
  2141     0700  2F02               	goto	u860
  2142     0701                     u861:
  2143     0701  2F10               	goto	l1677
  2144     0702                     u860:
  2145     0702                     l1671:
  2146                           
  2147                           ;main.c: 157:             recebeGuardaNome();
  2148     0702  3185  2593  3186   	fcall	_recebeGuardaNome
  2149     0705                     l1673:
  2150                           
  2151                           ;main.c: 158:             if(!nome_vazio){
  2152     0705  0020               	movlb	0	; select bank0
  2153     0706  083B               	movf	_nome_vazio,w
  2154     0707  1D03               	btfss	3,2
  2155     0708  2F0A               	goto	u871
  2156     0709  2F0B               	goto	u870
  2157     070A                     u871:
  2158     070A  2F17               	goto	l1679
  2159     070B                     u870:
  2160     070B                     l1675:
  2161                           
  2162                           ;main.c: 159:                 countName++;
  2163     070B  3001               	movlw	1
  2164     070C  00FB               	movwf	??_analisaRx
  2165     070D  087B               	movf	??_analisaRx,w
  2166     070E  07FD               	addwf	_countName,f
  2167     070F  2F17               	goto	l1679
  2168     0710                     l1677:
  2169                           
  2170                           ;main.c: 163:             enviaMsg(msg7);
  2171     0710  307E               	movlw	low (_msg7| (0+32768))
  2172     0711  00F1               	movwf	enviaMsg@msg
  2173     0712  3088               	movlw	high (_msg7| (0+32768))
  2174     0713  00F2               	movwf	enviaMsg@msg+1
  2175     0714  3184  24BB  3186   	fcall	_enviaMsg
  2176     0717                     l1679:
  2177                           
  2178                           ;main.c: 166:     if(bufferRx == 0x50){
  2179     0717  3050               	movlw	80
  2180     0718  0020               	movlb	0	; select bank0
  2181     0719  063C               	xorwf	_bufferRx,w
  2182     071A  1D03               	btfss	3,2
  2183     071B  2F1D               	goto	u881
  2184     071C  2F1E               	goto	u880
  2185     071D                     u881:
  2186     071D  2FC4               	goto	l1721
  2187     071E                     u880:
  2188     071E                     l1681:
  2189                           
  2190                           ;main.c: 167:         int i = 0;
  2191     071E  01C9               	clrf	analisaRx@i
  2192     071F  01CA               	clrf	analisaRx@i+1
  2193                           
  2194                           ;main.c: 168:         while(i<=10){
  2195     0720  2FB6               	goto	l284
  2196     0721                     l1683:
  2197                           
  2198                           ;main.c: 169:             if(ee[i].estado == 1){
  2199     0721  3016               	movlw	22
  2200     0722  00F0               	movwf	___bmul@multiplicand
  2201     0723  0020               	movlb	0	; select bank0
  2202     0724  0849               	movf	analisaRx@i,w
  2203     0725  3184  246C  3186   	fcall	___bmul
  2204     0728  3E00               	addlw	low _ee
  2205     0729  3184  2439  3186   	fcall	___eetoc
  2206     072C  3A01               	xorlw	1
  2207     072D  1D03               	skipz
  2208     072E  2F30               	goto	u891
  2209     072F  2F31               	goto	u890
  2210     0730                     u891:
  2211     0730  2F8A               	goto	l1707
  2212     0731                     u890:
  2213     0731                     l1685:
  2214                           
  2215                           ;main.c: 170:                 enviaMsg(msg3);
  2216     0731  30F9               	movlw	low (_msg3| (0+32768))
  2217     0732  00F1               	movwf	enviaMsg@msg
  2218     0733  3088               	movlw	high (_msg3| (0+32768))
  2219     0734  00F2               	movwf	enviaMsg@msg+1
  2220     0735  3184  24BB  3186   	fcall	_enviaMsg
  2221     0738                     l1687:
  2222                           
  2223                           ;main.c: 171:                 EUSART_Write(0x20);
  2224     0738  3020               	movlw	32
  2225     0739  3184  2425  3186   	fcall	_EUSART_Write
  2226     073C                     l1689:
  2227                           
  2228                           ;main.c: 172:                 EUSART_Write(0x20);
  2229     073C  3020               	movlw	32
  2230     073D  3184  2425  3186   	fcall	_EUSART_Write
  2231     0740                     l1691:
  2232                           
  2233                           ;main.c: 173:                 for(int j = 0; j<20 && ee[i].name[j] != 0;j++){
  2234     0740  0020               	movlb	0	; select bank0
  2235     0741  01C5               	clrf	analisaRx@j
  2236     0742  01C6               	clrf	analisaRx@j+1
  2237     0743  2F59               	goto	l1697
  2238     0744                     l1693:
  2239                           
  2240                           ;main.c: 174:                     EUSART_Write(ee[i].name[j]);
  2241     0744  3016               	movlw	22
  2242     0745  00F0               	movwf	___bmul@multiplicand
  2243     0746  0020               	movlb	0	; select bank0
  2244     0747  0849               	movf	analisaRx@i,w
  2245     0748  3184  246C  3186   	fcall	___bmul
  2246     074B  3E01               	addlw	low (_ee+1)
  2247     074C  0020               	movlb	0	; select bank0
  2248     074D  0745               	addwf	analisaRx@j,w
  2249     074E  3184  2439  3186   	fcall	___eetoc
  2250     0751  3184  2425  3186   	fcall	_EUSART_Write
  2251     0754                     l1695:
  2252                           
  2253                           ;main.c: 175:                 }
  2254     0754  3001               	movlw	1
  2255     0755  0020               	movlb	0	; select bank0
  2256     0756  07C5               	addwf	analisaRx@j,f
  2257     0757  3000               	movlw	0
  2258     0758  3DC6               	addwfc	analisaRx@j+1,f
  2259     0759                     l1697:
  2260     0759  0846               	movf	analisaRx@j+1,w
  2261     075A  3A80               	xorlw	128
  2262     075B  00FB               	movwf	??_analisaRx
  2263     075C  3080               	movlw	128
  2264     075D  027B               	subwf	??_analisaRx,w
  2265     075E  1D03               	skipz
  2266     075F  2F62               	goto	u905
  2267     0760  3014               	movlw	20
  2268     0761  0245               	subwf	analisaRx@j,w
  2269     0762                     u905:
  2270     0762  1803               	skipnc
  2271     0763  2F65               	goto	u901
  2272     0764  2F66               	goto	u900
  2273     0765                     u901:
  2274     0765  2F78               	goto	l1701
  2275     0766                     u900:
  2276     0766                     l1699:
  2277     0766  3016               	movlw	22
  2278     0767  00F0               	movwf	___bmul@multiplicand
  2279     0768  0020               	movlb	0	; select bank0
  2280     0769  0849               	movf	analisaRx@i,w
  2281     076A  3184  246C  3186   	fcall	___bmul
  2282     076D  3E01               	addlw	low (_ee+1)
  2283     076E  0020               	movlb	0	; select bank0
  2284     076F  0745               	addwf	analisaRx@j,w
  2285     0770  3184  2439  3186   	fcall	___eetoc
  2286     0773  3A00               	xorlw	0
  2287     0774  1D03               	skipz
  2288     0775  2F77               	goto	u911
  2289     0776  2F78               	goto	u910
  2290     0777                     u911:
  2291     0777  2F44               	goto	l1693
  2292     0778                     u910:
  2293     0778                     l1701:
  2294                           
  2295                           ;main.c: 176:                 EUSART_Write(0x0D);
  2296     0778  300D               	movlw	13
  2297     0779  3184  2425  3186   	fcall	_EUSART_Write
  2298     077C                     l1703:
  2299                           
  2300                           ;main.c: 177:                 ee[i].estado = 2;
  2301     077C  3002               	movlw	2
  2302     077D  00F6               	movwf	___ctoee@data
  2303     077E  3016               	movlw	22
  2304     077F  00F0               	movwf	___bmul@multiplicand
  2305     0780  0020               	movlb	0	; select bank0
  2306     0781  0849               	movf	analisaRx@i,w
  2307     0782  3184  246C  3186   	fcall	___bmul
  2308     0785  3E00               	addlw	low _ee
  2309     0786  3184  242F  3186   	fcall	___ctoee
  2310                           
  2311                           ;main.c: 178:                 break;
  2312     0789  2FF3               	goto	l303
  2313     078A                     l1707:
  2314     078A  3016               	movlw	22
  2315     078B  00F0               	movwf	___bmul@multiplicand
  2316     078C  0020               	movlb	0	; select bank0
  2317     078D  0849               	movf	analisaRx@i,w
  2318     078E  3184  246C  3186   	fcall	___bmul
  2319     0791  3E00               	addlw	low _ee
  2320     0792  3184  2439  3186   	fcall	___eetoc
  2321     0795  3A00               	xorlw	0
  2322     0796  1D03               	skipz
  2323     0797  2F99               	goto	u921
  2324     0798  2F9A               	goto	u920
  2325     0799                     u921:
  2326     0799  2FA2               	goto	l1713
  2327     079A                     u920:
  2328     079A                     l1709:
  2329                           
  2330                           ;main.c: 181:                 enviaMsg(msg2);
  2331     079A  30A2               	movlw	low (_msg2| (0+32768))
  2332     079B  00F1               	movwf	enviaMsg@msg
  2333     079C  3088               	movlw	high (_msg2| (0+32768))
  2334     079D  00F2               	movwf	enviaMsg@msg+1
  2335     079E  3184  24BB  3186   	fcall	_enviaMsg
  2336                           
  2337                           ;main.c: 182:                 break;
  2338     07A1  2FF3               	goto	l303
  2339     07A2                     l1713:
  2340     07A2  300A               	movlw	10
  2341     07A3  0020               	movlb	0	; select bank0
  2342     07A4  0649               	xorwf	analisaRx@i,w
  2343     07A5  044A               	iorwf	analisaRx@i+1,w
  2344     07A6  1D03               	btfss	3,2
  2345     07A7  2FA9               	goto	u931
  2346     07A8  2FAA               	goto	u930
  2347     07A9                     u931:
  2348     07A9  2FB1               	goto	l1717
  2349     07AA                     u930:
  2350     07AA                     l1715:
  2351                           
  2352                           ;main.c: 185:                 enviaMsg(msg6);
  2353     07AA  3032               	movlw	low (_msg6| (0+32768))
  2354     07AB  00F1               	movwf	enviaMsg@msg
  2355     07AC  3088               	movlw	high (_msg6| (0+32768))
  2356     07AD  00F2               	movwf	enviaMsg@msg+1
  2357     07AE  3184  24BB  3186   	fcall	_enviaMsg
  2358     07B1                     l1717:
  2359                           
  2360                           ;main.c: 186:                 i++;
  2361     07B1  3001               	movlw	1
  2362     07B2  0020               	movlb	0	; select bank0
  2363     07B3  07C9               	addwf	analisaRx@i,f
  2364     07B4  3000               	movlw	0
  2365     07B5  3DCA               	addwfc	analisaRx@i+1,f
  2366     07B6                     l284:	
  2367                           ;main.c: 191:         }
  2368                           
  2369                           
  2370                           ;main.c: 168:         while(i<=10){
  2371     07B6  084A               	movf	analisaRx@i+1,w
  2372     07B7  3A80               	xorlw	128
  2373     07B8  00FB               	movwf	??_analisaRx
  2374     07B9  3080               	movlw	128
  2375     07BA  027B               	subwf	??_analisaRx,w
  2376     07BB  1D03               	skipz
  2377     07BC  2FBF               	goto	u945
  2378     07BD  300B               	movlw	11
  2379     07BE  0249               	subwf	analisaRx@i,w
  2380     07BF                     u945:
  2381     07BF  1C03               	skipc
  2382     07C0  2FC2               	goto	u941
  2383     07C1  2FC3               	goto	u940
  2384     07C2                     u941:
  2385     07C2  2F21               	goto	l1683
  2386     07C3                     u940:
  2387     07C3  2FF3               	goto	l303
  2388     07C4                     l1721:
  2389     07C4  3052               	movlw	82
  2390     07C5  063C               	xorwf	_bufferRx,w
  2391     07C6  1D03               	btfss	3,2
  2392     07C7  2FC9               	goto	u951
  2393     07C8  2FCA               	goto	u950
  2394     07C9                     u951:
  2395     07C9  2FEC               	goto	l1739
  2396     07CA                     u950:
  2397     07CA                     l1723:
  2398                           
  2399                           ;main.c: 194:         for(int i = 0; i<=10; i++){
  2400     07CA  01C7               	clrf	analisaRx@i_426
  2401     07CB  01C8               	clrf	analisaRx@i_426+1
  2402     07CC                     l1729:
  2403                           
  2404                           ;main.c: 195:             ee[i].estado = 0;
  2405     07CC  01F6               	clrf	___ctoee@data
  2406     07CD  3016               	movlw	22
  2407     07CE  00F0               	movwf	___bmul@multiplicand
  2408     07CF  0020               	movlb	0	; select bank0
  2409     07D0  0847               	movf	analisaRx@i_426,w
  2410     07D1  3184  246C  3186   	fcall	___bmul
  2411     07D4  3E00               	addlw	low _ee
  2412     07D5  3184  242F  3186   	fcall	___ctoee
  2413     07D8                     l1731:
  2414                           
  2415                           ;main.c: 196:         }
  2416     07D8  3001               	movlw	1
  2417     07D9  0020               	movlb	0	; select bank0
  2418     07DA  07C7               	addwf	analisaRx@i_426,f
  2419     07DB  3000               	movlw	0
  2420     07DC  3DC8               	addwfc	analisaRx@i_426+1,f
  2421     07DD                     l1733:
  2422     07DD  0848               	movf	analisaRx@i_426+1,w
  2423     07DE  3A80               	xorlw	128
  2424     07DF  00FB               	movwf	??_analisaRx
  2425     07E0  3080               	movlw	128
  2426     07E1  027B               	subwf	??_analisaRx,w
  2427     07E2  1D03               	skipz
  2428     07E3  2FE6               	goto	u965
  2429     07E4  300B               	movlw	11
  2430     07E5  0247               	subwf	analisaRx@i_426,w
  2431     07E6                     u965:
  2432     07E6  1C03               	skipc
  2433     07E7  2FE9               	goto	u961
  2434     07E8  2FEA               	goto	u960
  2435     07E9                     u961:
  2436     07E9  2FCC               	goto	l1729
  2437     07EA                     u960:
  2438     07EA                     l1735:
  2439                           
  2440                           ;main.c: 197:         countName = 0;
  2441     07EA  01FD               	clrf	_countName
  2442     07EB  2F9A               	goto	l1709
  2443     07EC                     l1739:
  2444                           
  2445                           ;main.c: 201:         enviaMsg(msg0);
  2446     07EC  3000               	movlw	low (_msg0| (0+32768))
  2447     07ED  00F1               	movwf	enviaMsg@msg
  2448     07EE  3088               	movlw	high (_msg0| (0+32768))
  2449     07EF  00F2               	movwf	enviaMsg@msg+1
  2450     07F0  3184  24BB  3186   	fcall	_enviaMsg
  2451     07F3                     l303:
  2452     07F3  0008               	return
  2453     07F4                     __end_of_analisaRx:
  2454                           
  2455                           	psect	text2
  2456     0593                     __ptext2:	
  2457 ;; *************** function _recebeGuardaNome *****************
  2458 ;; Defined at:
  2459 ;;		line 111 in file "main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  rxChar          1    9[COMMON] unsigned char 
  2464 ;;  countByte       1   10[COMMON] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2474 ;;      Params:         0       0       0       0       0       0
  2475 ;;      Locals:         2       0       0       0       0       0
  2476 ;;      Temps:          1       0       0       0       0       0
  2477 ;;      Totals:         3       0       0       0       0       0
  2478 ;;Total ram usage:        3 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 2
  2481 ;; This function calls:
  2482 ;;		_EUSART_Read
  2483 ;;		_EUSART_is_rx_ready
  2484 ;;		___bmul
  2485 ;;		___ctoee
  2486 ;;		_enviaMsg
  2487 ;; This function is called by:
  2488 ;;		_analisaRx
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492     0593                     _recebeGuardaNome:	
  2493                           ;psect for function _recebeGuardaNome
  2494                           
  2495     0593                     l1613:	
  2496                           ;incstack = 0
  2497                           ; Regs used in _recebeGuardaNome: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2498                           
  2499                           
  2500                           ;main.c: 112:     static char nameRx[21];;main.c: 113:     uint8_t countByte = 0;
  2501     0593  01FA               	clrf	recebeGuardaNome@countByte
  2502                           
  2503                           ;main.c: 114:     countRx = 0;
  2504     0594  0020               	movlb	0	; select bank0
  2505     0595  01BD               	clrf	_countRx
  2506     0596                     l1615:
  2507                           
  2508                           ;main.c: 115:     enviaMsg(msg4);
  2509     0596  30EA               	movlw	low (_msg4| (0+32768))
  2510     0597  00F1               	movwf	enviaMsg@msg
  2511     0598  3088               	movlw	high (_msg4| (0+32768))
  2512     0599  00F2               	movwf	enviaMsg@msg+1
  2513     059A  3184  24BB  3185   	fcall	_enviaMsg
  2514                           
  2515                           ;main.c: 116:     while (countRx < (21 - 1)){
  2516     059D  2DBC               	goto	l1631
  2517     059E                     l1617:
  2518                           
  2519                           ;main.c: 117:         if (EUSART_is_rx_ready()) {
  2520     059E  3184  2408  3185   	fcall	_EUSART_is_rx_ready
  2521     05A1  3A00               	xorlw	0
  2522     05A2  1903               	skipnz
  2523     05A3  2DA5               	goto	u781
  2524     05A4  2DA6               	goto	u780
  2525     05A5                     u781:
  2526     05A5  2DBC               	goto	l1631
  2527     05A6                     u780:
  2528     05A6                     l1619:
  2529                           
  2530                           ;main.c: 118:             uint8_t rxChar = EUSART_Read();
  2531     05A6  3184  245D  3185   	fcall	_EUSART_Read
  2532     05A9  00F9               	movwf	recebeGuardaNome@rxChar
  2533     05AA                     l1621:
  2534                           
  2535                           ;main.c: 119:             if (rxChar == 0x0D){
  2536     05AA  300D               	movlw	13
  2537     05AB  0679               	xorwf	recebeGuardaNome@rxChar,w
  2538     05AC  1D03               	btfss	3,2
  2539     05AD  2DAF               	goto	u791
  2540     05AE  2DB0               	goto	u790
  2541     05AF                     u791:
  2542     05AF  2DB1               	goto	l1627
  2543     05B0                     u790:
  2544     05B0  2DC3               	goto	l1633
  2545     05B1                     l1627:
  2546                           
  2547                           ;main.c: 123:                 nameRx[countRx] = rxChar;
  2548     05B1  0020               	movlb	0	; select bank0
  2549     05B2  083D               	movf	_countRx,w
  2550     05B3  3E20               	addlw	(low (recebeGuardaNome@nameRx| 0))& (0+255)
  2551     05B4  0086               	movwf	6
  2552     05B5  0187               	clrf	7
  2553     05B6  0879               	movf	recebeGuardaNome@rxChar,w
  2554     05B7  0081               	movwf	1
  2555     05B8                     l1629:
  2556                           
  2557                           ;main.c: 124:                 countRx++;
  2558     05B8  3001               	movlw	1
  2559     05B9  00F8               	movwf	??_recebeGuardaNome
  2560     05BA  0878               	movf	??_recebeGuardaNome,w
  2561     05BB  07BD               	addwf	_countRx,f
  2562     05BC                     l1631:
  2563                           
  2564                           ;main.c: 116:     while (countRx < (21 - 1)){
  2565     05BC  3014               	movlw	20
  2566     05BD  0020               	movlb	0	; select bank0
  2567     05BE  023D               	subwf	_countRx,w
  2568     05BF  1C03               	skipc
  2569     05C0  2DC2               	goto	u801
  2570     05C1  2DC3               	goto	u800
  2571     05C2                     u801:
  2572     05C2  2D9E               	goto	l1617
  2573     05C3                     u800:
  2574     05C3                     l1633:
  2575                           
  2576                           ;main.c: 128:     nameRx[countRx] = 0;
  2577     05C3  0020               	movlb	0	; select bank0
  2578     05C4  083D               	movf	_countRx,w
  2579     05C5  3E20               	addlw	(low (recebeGuardaNome@nameRx| 0))& (0+255)
  2580     05C6  0086               	movwf	6
  2581     05C7  0187               	clrf	7
  2582     05C8  0181               	clrf	1
  2583     05C9                     l1635:
  2584                           
  2585                           ;main.c: 129:     if(nameRx[0] == 0){
  2586     05C9  0820               	movf	recebeGuardaNome@nameRx,w
  2587     05CA  1D03               	btfss	3,2
  2588     05CB  2DCD               	goto	u811
  2589     05CC  2DCE               	goto	u810
  2590     05CD                     u811:
  2591     05CD  2DE3               	goto	l1643
  2592     05CE                     u810:
  2593     05CE                     l1637:
  2594                           
  2595                           ;main.c: 130:         nome_vazio = 1;
  2596     05CE  01BB               	clrf	_nome_vazio
  2597     05CF  0ABB               	incf	_nome_vazio,f
  2598     05D0                     l1639:
  2599                           
  2600                           ;main.c: 131:         enviaMsg(msg5);
  2601     05D0  3058               	movlw	low (_msg5| (0+32768))
  2602     05D1  00F1               	movwf	enviaMsg@msg
  2603     05D2  3088               	movlw	high (_msg5| (0+32768))
  2604     05D3  00F2               	movwf	enviaMsg@msg+1
  2605     05D4  3184  24BB  3185   	fcall	_enviaMsg
  2606     05D7                     l1641:
  2607                           
  2608                           ;main.c: 132:         ee[countName].estado = 0;
  2609     05D7  01F6               	clrf	___ctoee@data
  2610     05D8  3016               	movlw	22
  2611     05D9  00F0               	movwf	___bmul@multiplicand
  2612     05DA  087D               	movf	_countName,w
  2613     05DB  3184  246C  3185   	fcall	___bmul
  2614     05DE  3E00               	addlw	low _ee
  2615     05DF  3184  242F  3185   	fcall	___ctoee
  2616                           
  2617                           ;main.c: 133:     }
  2618     05E2  2E13               	goto	l272
  2619     05E3                     l1643:
  2620                           
  2621                           ;main.c: 135:         nome_vazio = 0;
  2622     05E3  01BB               	clrf	_nome_vazio
  2623     05E4                     l1645:
  2624                           
  2625                           ;main.c: 136:         enviaMsg(msg8);
  2626     05E4  30BE               	movlw	low (_msg8| (0+32768))
  2627     05E5  00F1               	movwf	enviaMsg@msg
  2628     05E6  3088               	movlw	high (_msg8| (0+32768))
  2629     05E7  00F2               	movwf	enviaMsg@msg+1
  2630     05E8  3184  24BB  3185   	fcall	_enviaMsg
  2631                           
  2632                           ;main.c: 137:         while(countByte < 21){
  2633     05EB  2E01               	goto	l1651
  2634     05EC                     l1647:
  2635                           
  2636                           ;main.c: 138:             ee[countName].name[countByte] = nameRx[countByte];
  2637     05EC  087A               	movf	recebeGuardaNome@countByte,w
  2638     05ED  3E20               	addlw	(low (recebeGuardaNome@nameRx| 0))& (0+255)
  2639     05EE  0086               	movwf	6
  2640     05EF  0187               	clrf	7
  2641     05F0  0801               	movf	1,w
  2642     05F1  00F6               	movwf	___ctoee@data
  2643     05F2  3016               	movlw	22
  2644     05F3  00F0               	movwf	___bmul@multiplicand
  2645     05F4  087D               	movf	_countName,w
  2646     05F5  3184  246C  3185   	fcall	___bmul
  2647     05F8  3E01               	addlw	low (_ee+1)
  2648     05F9  077A               	addwf	recebeGuardaNome@countByte,w
  2649     05FA  3184  242F  3185   	fcall	___ctoee
  2650     05FD                     l1649:
  2651                           
  2652                           ;main.c: 139:             countByte++;
  2653     05FD  3001               	movlw	1
  2654     05FE  00F8               	movwf	??_recebeGuardaNome
  2655     05FF  0878               	movf	??_recebeGuardaNome,w
  2656     0600  07FA               	addwf	recebeGuardaNome@countByte,f
  2657     0601                     l1651:
  2658                           
  2659                           ;main.c: 137:         while(countByte < 21){
  2660     0601  3015               	movlw	21
  2661     0602  027A               	subwf	recebeGuardaNome@countByte,w
  2662     0603  1C03               	skipc
  2663     0604  2E06               	goto	u821
  2664     0605  2E07               	goto	u820
  2665     0606                     u821:
  2666     0606  2DEC               	goto	l1647
  2667     0607                     u820:
  2668     0607                     l1653:
  2669                           
  2670                           ;main.c: 141:         ee[countName].estado = 1;
  2671     0607  01F6               	clrf	___ctoee@data
  2672     0608  0AF6               	incf	___ctoee@data,f
  2673     0609  3016               	movlw	22
  2674     060A  00F0               	movwf	___bmul@multiplicand
  2675     060B  087D               	movf	_countName,w
  2676     060C  3184  246C  3185   	fcall	___bmul
  2677     060F  3E00               	addlw	low _ee
  2678     0610  3184  242F  3185   	fcall	___ctoee
  2679     0613                     l272:
  2680     0613  0008               	return
  2681     0614                     __end_of_recebeGuardaNome:
  2682                           
  2683                           	psect	text3
  2684     04BB                     __ptext3:	
  2685 ;; *************** function _enviaMsg *****************
  2686 ;; Defined at:
  2687 ;;		line 82 in file "main.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  msg             2    1[COMMON] PTR const unsigned char 
  2690 ;;		 -> msg0(50), msg6(38), msg3(9), msg7(36), 
  2691 ;;		 -> msg1(22), msg2(28), msg8(22), msg5(38), 
  2692 ;;		 -> msg4(15), 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  i               1    6[COMMON] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2704 ;;      Params:         2       0       0       0       0       0
  2705 ;;      Locals:         1       0       0       0       0       0
  2706 ;;      Temps:          3       0       0       0       0       0
  2707 ;;      Totals:         6       0       0       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 1
  2711 ;; This function calls:
  2712 ;;		_EUSART_Write
  2713 ;; This function is called by:
  2714 ;;		_recebeGuardaNome
  2715 ;;		_analisaRx
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719     04BB                     _enviaMsg:	
  2720                           ;psect for function _enviaMsg
  2721                           
  2722     04BB                     l1501:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _enviaMsg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2725                           
  2726                           
  2727                           ;main.c: 83:     uint8_t i = 0;
  2728     04BB  01F6               	clrf	enviaMsg@i
  2729                           
  2730                           ;main.c: 84:     while (msg[i] > 0) {
  2731     04BC  2CD0               	goto	l1507
  2732     04BD                     l1503:
  2733                           
  2734                           ;main.c: 85:         EUSART_Write(msg[i]);
  2735     04BD  0872               	movf	enviaMsg@msg+1,w
  2736     04BE  00F4               	movwf	??_enviaMsg+1
  2737     04BF  0871               	movf	enviaMsg@msg,w
  2738     04C0  00F3               	movwf	??_enviaMsg
  2739     04C1  0876               	movf	enviaMsg@i,w
  2740     04C2  0773               	addwf	??_enviaMsg,w
  2741     04C3  0084               	movwf	4
  2742     04C4  0874               	movf	??_enviaMsg+1,w
  2743     04C5  1803               	skipnc
  2744     04C6  0A74               	incf	??_enviaMsg+1,w
  2745     04C7  0085               	movwf	5
  2746     04C8  0800               	movf	0,w	;code access
  2747     04C9  3184  2425  3184   	fcall	_EUSART_Write
  2748     04CC                     l1505:
  2749                           
  2750                           ;main.c: 86:         i++;
  2751     04CC  3001               	movlw	1
  2752     04CD  00F3               	movwf	??_enviaMsg
  2753     04CE  0873               	movf	??_enviaMsg,w
  2754     04CF  07F6               	addwf	enviaMsg@i,f
  2755     04D0                     l1507:
  2756                           
  2757                           ;main.c: 84:     while (msg[i] > 0) {
  2758     04D0  0872               	movf	enviaMsg@msg+1,w
  2759     04D1  00F4               	movwf	??_enviaMsg+1
  2760     04D2  0871               	movf	enviaMsg@msg,w
  2761     04D3  00F3               	movwf	??_enviaMsg
  2762     04D4  0876               	movf	enviaMsg@i,w
  2763     04D5  0773               	addwf	??_enviaMsg,w
  2764     04D6  0084               	movwf	4
  2765     04D7  0874               	movf	??_enviaMsg+1,w
  2766     04D8  1803               	skipnc
  2767     04D9  0A74               	incf	??_enviaMsg+1,w
  2768     04DA  0085               	movwf	5
  2769     04DB  0012               	moviw fsr0++
  2770     04DC  1D03               	btfss	3,2
  2771     04DD  2CDF               	goto	u671
  2772     04DE  2CE0               	goto	u670
  2773     04DF                     u671:
  2774     04DF  2CBD               	goto	l1503
  2775     04E0                     u670:
  2776     04E0                     l1509:
  2777                           
  2778                           ;main.c: 88:     EUSART_Write(0x0D);
  2779     04E0  300D               	movlw	13
  2780     04E1  3184  2425  3184   	fcall	_EUSART_Write
  2781     04E4                     l238:
  2782     04E4  0008               	return
  2783     04E5                     __end_of_enviaMsg:
  2784                           
  2785                           	psect	text4
  2786     042F                     __ptext4:	
  2787 ;; *************** function ___ctoee *****************
  2788 ;; Defined at:
  2789 ;;		line 150 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  addr            1    wreg     PTR eeprom void 
  2792 ;;		 -> ee(220), 
  2793 ;;  data            1    6[COMMON] unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  addr            1    7[COMMON] PTR eeprom void 
  2796 ;;		 -> ee(220), 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      unsigned char 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2806 ;;      Params:         1       0       0       0       0       0
  2807 ;;      Locals:         1       0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0
  2809 ;;      Totals:         2       0       0       0       0       0
  2810 ;;Total ram usage:        2 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 1
  2813 ;; This function calls:
  2814 ;;		___memcpyee
  2815 ;; This function is called by:
  2816 ;;		_recebeGuardaNome
  2817 ;;		_analisaRx
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821     042F                     ___ctoee:	
  2822                           ;psect for function ___ctoee
  2823                           
  2824                           
  2825                           ;incstack = 0
  2826                           ; Regs used in ___ctoee: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2827                           ;___ctoee@addr stored from wreg
  2828     042F  00F7               	movwf	___ctoee@addr
  2829     0430                     l1517:
  2830     0430  3076               	movlw	(low (___ctoee@data| 0))& (0+255)
  2831     0431  00F0               	movwf	___memcpyee@from
  2832     0432  01F1               	clrf	___memcpyee@size
  2833     0433  0AF1               	incf	___memcpyee@size,f
  2834     0434  0877               	movf	___ctoee@addr,w
  2835     0435  3185  254B  3184   	fcall	___memcpyee
  2836     0438                     l375:
  2837     0438  0008               	return
  2838     0439                     __end_of___ctoee:
  2839                           
  2840                           	psect	text5
  2841     054B                     __ptext5:	
  2842 ;; *************** function ___memcpyee *****************
  2843 ;; Defined at:
  2844 ;;		line 39 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  to              1    wreg     PTR eeprom unsigned char
  2847 ;;		 -> ee(220), 
  2848 ;;  from            1    0[COMMON] PTR const unsigned char 
  2849 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  2850 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  2851 ;;  size            1    1[COMMON] unsigned char 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  to              1    5[COMMON] PTR eeprom unsigned char
  2854 ;;		 -> ee(220), 
  2855 ;;  ptr             1    4[COMMON] PTR const unsigned char 
  2856 ;;		 -> __fltoee@data(4), __fttoee@data(4), __otoee@data(8), __ltoee@data(4), 
  2857 ;;		 -> __mtoee@data(3), __itoee@data(2), __ctoee@data(1), 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2867 ;;      Params:         2       0       0       0       0       0
  2868 ;;      Locals:         2       0       0       0       0       0
  2869 ;;      Temps:          2       0       0       0       0       0
  2870 ;;      Totals:         6       0       0       0       0       0
  2871 ;;Total ram usage:        6 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		___ctoee
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880     054B                     ___memcpyee:	
  2881                           ;psect for function ___memcpyee
  2882                           
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in ___memcpyee: [wreg+fsr1l+fsr1h+status,2+status,0]
  2886                           ;___memcpyee@to stored from wreg
  2887     054B  00F5               	movwf	___memcpyee@to
  2888     054C                     l1449:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 39: __memcpyee(__e
      +                          eprom unsigned char * to, const unsigned char *from, unsigned char size);C:\Program File
      +                          s\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 40: {;C:\Program Files\Microchip\x
      +                          c8\v2.46\pic\sources\c99\pic\__eeprom.c: 41:  const unsigned char *ptr =from;
  2891     054C  0870               	movf	___memcpyee@from,w
  2892     054D  00F4               	movwf	___memcpyee@ptr
  2893     054E                     l346:	
  2894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 43:  while (EECON1
      +                          bits.WR) continue;
  2895                           
  2896     054E  0023               	movlb	3	; select bank3
  2897     054F  1895               	btfsc	21,1	;volsfr
  2898     0550  2D52               	goto	u601
  2899     0551  2D53               	goto	u600
  2900     0552                     u601:
  2901     0552  2D4E               	goto	l346
  2902     0553                     u600:
  2903     0553                     l1451:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 44:  EEADR = (unsi
      +                          gned char)to - 1U;
  2906     0553  0875               	movf	___memcpyee@to,w
  2907     0554  3EFF               	addlw	255
  2908     0555  00F2               	movwf	??___memcpyee
  2909     0556  30FF               	movlw	255
  2910     0557  1803               	skipnc
  2911     0558  3000               	movlw	0
  2912     0559  00F3               	movwf	??___memcpyee+1
  2913     055A  0872               	movf	??___memcpyee,w
  2914     055B  0091               	movwf	17	;volatile
  2915     055C  0873               	movf	??___memcpyee+1,w
  2916     055D  0092               	movwf	18	;volatile
  2917     055E                     l1453:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 46:  EECON1 &= 0x7
      +                          F;
  2920     055E  307F               	movlw	127
  2921     055F  00F2               	movwf	??___memcpyee
  2922     0560  0872               	movf	??___memcpyee,w
  2923     0561  0595               	andwf	21,f	;volsfr
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 48:  while(size--)
      +                           {
  2926     0562  2D8B               	goto	l1477
  2927     0563                     l351:	
  2928                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 51:   }
  2929                           
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 49:   while (EECON
      +                          1bits.WR) {
  2932     0563  0023               	movlb	3	; select bank3
  2933     0564  1895               	btfsc	21,1	;volsfr
  2934     0565  2D67               	goto	u611
  2935     0566  2D68               	goto	u610
  2936     0567                     u611:
  2937     0567  2D63               	goto	l351
  2938     0568                     u610:
  2939     0568                     l1455:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 52:   EEDATA = *pt
      +                          r++;
  2942     0568  0874               	movf	___memcpyee@ptr,w
  2943     0569  0086               	movwf	6
  2944     056A  0187               	clrf	7
  2945     056B  0801               	movf	1,w
  2946     056C  0093               	movwf	19	;volatile
  2947     056D                     l1457:
  2948     056D  3001               	movlw	1
  2949     056E  00F2               	movwf	??___memcpyee
  2950     056F  0872               	movf	??___memcpyee,w
  2951     0570  07F4               	addwf	___memcpyee@ptr,f
  2952     0571                     l1459:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 53:   ++EEADR;
  2955     0571  3001               	movlw	1
  2956     0572  0791               	addwf	17,f	;volatile
  2957     0573  3000               	movlw	0
  2958     0574  3D92               	addwfc	18,f	;volatile
  2959     0575                     l1461:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 54:   STATUSbits.C
      +                          ARRY = 0;
  2962     0575  0020               	movlb	0	; select bank0
  2963     0576  1003               	bcf	3,0	;volatile
  2964     0577                     l1463:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 55:   if (INTCONbi
      +                          ts.GIE) {
  2967     0577  1F8B               	btfss	11,7	;volatile
  2968     0578  2D7A               	goto	u621
  2969     0579  2D7B               	goto	u620
  2970     057A                     u621:
  2971     057A  2D7C               	goto	l354
  2972     057B                     u620:
  2973     057B                     l1465:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 56:    STATUSbits.
      +                          CARRY = 1;
  2976     057B  1403               	bsf	3,0	;volatile
  2977     057C                     l354:	
  2978                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 57:   }
  2979                           
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 58:   INTCONbits.G
      +                          IE = 0;
  2982     057C  138B               	bcf	11,7	;volatile
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 59:   EECON1bits.W
      +                          REN = 1;
  2985     057D  0023               	movlb	3	; select bank3
  2986     057E  1515               	bsf	21,2	;volsfr
  2987     057F                     l1467:
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 60:   EECON2 = 0x5
      +                          5;
  2990     057F  3055               	movlw	85
  2991     0580  0096               	movwf	22	;volsfr
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 61:   EECON2 = 0xA
      +                          A;
  2994     0581  30AA               	movlw	170
  2995     0582  0096               	movwf	22	;volsfr
  2996     0583                     l1469:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 62:   EECON1bits.W
      +                          R = 1;
  2999     0583  1495               	bsf	21,1	;volsfr
  3000     0584                     l1471:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 63:   EECON1bits.W
      +                          REN = 0;
  3003     0584  1115               	bcf	21,2	;volsfr
  3004     0585                     l1473:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 64:   if (STATUSbi
      +                          ts.CARRY) {
  3007     0585  0020               	movlb	0	; select bank0
  3008     0586  1C03               	btfss	3,0	;volatile
  3009     0587  2D89               	goto	u631
  3010     0588  2D8A               	goto	u630
  3011     0589                     u631:
  3012     0589  2D8B               	goto	l1477
  3013     058A                     u630:
  3014     058A                     l1475:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 65:    INTCONbits.
      +                          GIE = 1;
  3017     058A  178B               	bsf	11,7	;volatile
  3018     058B                     l1477:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 48:  while(size--)
      +                           {
  3021     058B  3001               	movlw	1
  3022     058C  02F1               	subwf	___memcpyee@size,f
  3023     058D  0A71               	incf	___memcpyee@size,w
  3024     058E  1D03               	btfss	3,2
  3025     058F  2D91               	goto	u641
  3026     0590  2D92               	goto	u640
  3027     0591                     u641:
  3028     0591  2D63               	goto	l351
  3029     0592                     u640:
  3030     0592                     l357:
  3031     0592  0008               	return
  3032     0593                     __end_of___memcpyee:
  3033                           
  3034                           	psect	text6
  3035     0408                     __ptext6:	
  3036 ;; *************** function _EUSART_is_rx_ready *****************
  3037 ;; Defined at:
  3038 ;;		line 99 in file "mcc_generated_files/eusart.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      _Bool 
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3052 ;;      Params:         0       0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0       0
  3055 ;;      Totals:         0       0       0       0       0       0
  3056 ;;Total ram usage:        0 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_recebeGuardaNome
  3062 ;;		_main
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066     0408                     _EUSART_is_rx_ready:	
  3067                           ;psect for function _EUSART_is_rx_ready
  3068                           
  3069     0408                     l1485:	
  3070                           ;incstack = 0
  3071                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  3072                           
  3073                           
  3074                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  3075     0408  0020               	movlb	0	; select bank0
  3076     0409  0E11               	swapf	17,w	;volatile
  3077     040A  0C89               	rrf	9,f
  3078     040B  3901               	andlw	1
  3079     040C                     l101:
  3080     040C  0008               	return
  3081     040D                     __end_of_EUSART_is_rx_ready:
  3082                           
  3083                           	psect	text7
  3084     045D                     __ptext7:	
  3085 ;; *************** function _EUSART_Read *****************
  3086 ;; Defined at:
  3087 ;;		line 113 in file "mcc_generated_files/eusart.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      unsigned char 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3101 ;;      Params:         0       0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0
  3104 ;;      Totals:         0       0       0       0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_recebeGuardaNome
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115     045D                     _EUSART_Read:	
  3116                           ;psect for function _EUSART_Read
  3117                           
  3118     045D                     l1489:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _EUSART_Read: [wreg+status,2]
  3121                           
  3122     045D                     l110:	
  3123                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  3124                           
  3125                           
  3126                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  3127     045D  0020               	movlb	0	; select bank0
  3128     045E  1E91               	btfss	17,5	;volatile
  3129     045F  2C61               	goto	u651
  3130     0460  2C62               	goto	u650
  3131     0461                     u651:
  3132     0461  2C5D               	goto	l110
  3133     0462                     u650:
  3134     0462                     l1491:
  3135                           
  3136                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  3137     0462  01BE               	clrf	_eusartRxLastError	;volatile
  3138     0463                     l1493:
  3139                           
  3140                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  3141     0463  0023               	movlb	3	; select bank3
  3142     0464  1C9D               	btfss	29,1	;volatile
  3143     0465  2C67               	goto	u661
  3144     0466  2C68               	goto	u660
  3145     0467                     u661:
  3146     0467  2C6A               	goto	l1497
  3147     0468                     u660:
  3148     0468                     l1495:
  3149                           
  3150                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  3151     0468  121D               	bcf	29,4	;volatile
  3152                           
  3153                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  3154     0469  161D               	bsf	29,4	;volatile
  3155     046A                     l1497:
  3156                           
  3157                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  3158     046A  0819               	movf	25,w	;volatile
  3159     046B                     l114:
  3160     046B  0008               	return
  3161     046C                     __end_of_EUSART_Read:
  3162                           
  3163                           	psect	text8
  3164     0614                     __ptext8:	
  3165 ;; *************** function _enviaNomes *****************
  3166 ;; Defined at:
  3167 ;;		line 90 in file "main.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  j               2    2[BANK0 ] int 
  3172 ;;  j               2    0[BANK0 ] int 
  3173 ;;  i               2    4[BANK0 ] int 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3183 ;;      Params:         0       0       0       0       0       0
  3184 ;;      Locals:         0       6       0       0       0       0
  3185 ;;      Temps:          1       0       0       0       0       0
  3186 ;;      Totals:         1       6       0       0       0       0
  3187 ;;Total ram usage:        7 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 2
  3190 ;; This function calls:
  3191 ;;		_EUSART_Write
  3192 ;;		___bmul
  3193 ;;		___eetoc
  3194 ;; This function is called by:
  3195 ;;		_analisaRx
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199     0614                     _enviaNomes:	
  3200                           ;psect for function _enviaNomes
  3201                           
  3202     0614                     l1571:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _enviaNomes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3205                           
  3206                           
  3207                           ;main.c: 91:     for(int i = 0; i<=10; i++){
  3208     0614  0020               	movlb	0	; select bank0
  3209     0615  01C3               	clrf	enviaNomes@i
  3210     0616  01C4               	clrf	enviaNomes@i+1
  3211     0617                     l1577:
  3212                           
  3213                           ;main.c: 92:         if(ee[i].estado == 2){
  3214     0617  3016               	movlw	22
  3215     0618  00F0               	movwf	___bmul@multiplicand
  3216     0619  0020               	movlb	0	; select bank0
  3217     061A  0843               	movf	enviaNomes@i,w
  3218     061B  3184  246C  3186   	fcall	___bmul
  3219     061E  3E00               	addlw	low _ee
  3220     061F  3184  2439  3186   	fcall	___eetoc
  3221     0622  3A02               	xorlw	2
  3222     0623  1D03               	skipz
  3223     0624  2E26               	goto	u711
  3224     0625  2E27               	goto	u710
  3225     0626                     u711:
  3226     0626  2E6C               	goto	l1593
  3227     0627                     u710:
  3228     0627                     l1579:
  3229                           
  3230                           ;main.c: 93:             EUSART_Write(0x58);
  3231     0627  3058               	movlw	88
  3232     0628  3184  2425  3186   	fcall	_EUSART_Write
  3233                           
  3234                           ;main.c: 94:             EUSART_Write(0x20);
  3235     062B  3020               	movlw	32
  3236     062C  3184  2425  3186   	fcall	_EUSART_Write
  3237     062F                     l1581:
  3238                           
  3239                           ;main.c: 95:             for(int j = 0; j<20 && ee[i].name[j] != 0;j++){
  3240     062F  0020               	movlb	0	; select bank0
  3241     0630  01BF               	clrf	enviaNomes@j
  3242     0631  01C0               	clrf	enviaNomes@j+1
  3243     0632  2E48               	goto	l1587
  3244     0633                     l1583:
  3245                           
  3246                           ;main.c: 96:                 EUSART_Write(ee[i].name[j]);
  3247     0633  3016               	movlw	22
  3248     0634  00F0               	movwf	___bmul@multiplicand
  3249     0635  0020               	movlb	0	; select bank0
  3250     0636  0843               	movf	enviaNomes@i,w
  3251     0637  3184  246C  3186   	fcall	___bmul
  3252     063A  3E01               	addlw	low (_ee+1)
  3253     063B  0020               	movlb	0	; select bank0
  3254     063C  073F               	addwf	enviaNomes@j,w
  3255     063D  3184  2439  3186   	fcall	___eetoc
  3256     0640  3184  2425  3186   	fcall	_EUSART_Write
  3257     0643                     l1585:
  3258                           
  3259                           ;main.c: 97:             }
  3260     0643  3001               	movlw	1
  3261     0644  0020               	movlb	0	; select bank0
  3262     0645  07BF               	addwf	enviaNomes@j,f
  3263     0646  3000               	movlw	0
  3264     0647  3DC0               	addwfc	enviaNomes@j+1,f
  3265     0648                     l1587:
  3266     0648  0840               	movf	enviaNomes@j+1,w
  3267     0649  3A80               	xorlw	128
  3268     064A  00F8               	movwf	??_enviaNomes
  3269     064B  3080               	movlw	128
  3270     064C  0278               	subwf	??_enviaNomes,w
  3271     064D  1D03               	skipz
  3272     064E  2E51               	goto	u725
  3273     064F  3014               	movlw	20
  3274     0650  023F               	subwf	enviaNomes@j,w
  3275     0651                     u725:
  3276     0651  1803               	skipnc
  3277     0652  2E54               	goto	u721
  3278     0653  2E55               	goto	u720
  3279     0654                     u721:
  3280     0654  2E67               	goto	l1591
  3281     0655                     u720:
  3282     0655                     l1589:
  3283     0655  3016               	movlw	22
  3284     0656  00F0               	movwf	___bmul@multiplicand
  3285     0657  0020               	movlb	0	; select bank0
  3286     0658  0843               	movf	enviaNomes@i,w
  3287     0659  3184  246C  3186   	fcall	___bmul
  3288     065C  3E01               	addlw	low (_ee+1)
  3289     065D  0020               	movlb	0	; select bank0
  3290     065E  073F               	addwf	enviaNomes@j,w
  3291     065F  3184  2439  3186   	fcall	___eetoc
  3292     0662  3A00               	xorlw	0
  3293     0663  1D03               	skipz
  3294     0664  2E66               	goto	u731
  3295     0665  2E67               	goto	u730
  3296     0666                     u731:
  3297     0666  2E33               	goto	l1583
  3298     0667                     u730:
  3299     0667                     l1591:
  3300                           
  3301                           ;main.c: 98:             EUSART_Write(0x0D);
  3302     0667  300D               	movlw	13
  3303     0668  3184  2425  3186   	fcall	_EUSART_Write
  3304                           
  3305                           ;main.c: 99:         }
  3306     066B  2EC0               	goto	l1609
  3307     066C                     l1593:
  3308     066C  3016               	movlw	22
  3309     066D  00F0               	movwf	___bmul@multiplicand
  3310     066E  0020               	movlb	0	; select bank0
  3311     066F  0843               	movf	enviaNomes@i,w
  3312     0670  3184  246C  3186   	fcall	___bmul
  3313     0673  3E00               	addlw	low _ee
  3314     0674  3184  2439  3186   	fcall	___eetoc
  3315     0677  3A01               	xorlw	1
  3316     0678  1D03               	skipz
  3317     0679  2E7B               	goto	u741
  3318     067A  2E7C               	goto	u740
  3319     067B                     u741:
  3320     067B  2EC0               	goto	l1609
  3321     067C                     u740:
  3322     067C                     l1595:
  3323                           
  3324                           ;main.c: 101:             EUSART_Write(0x20);
  3325     067C  3020               	movlw	32
  3326     067D  3184  2425  3186   	fcall	_EUSART_Write
  3327                           
  3328                           ;main.c: 102:             EUSART_Write(0x20);
  3329     0680  3020               	movlw	32
  3330     0681  3184  2425  3186   	fcall	_EUSART_Write
  3331     0684                     l1597:
  3332                           
  3333                           ;main.c: 103:             for(int j = 0; j<20 && ee[i].name[j] != 0;j++){
  3334     0684  0020               	movlb	0	; select bank0
  3335     0685  01C1               	clrf	enviaNomes@j_413
  3336     0686  01C2               	clrf	enviaNomes@j_413+1
  3337     0687  2E9D               	goto	l1603
  3338     0688                     l1599:
  3339                           
  3340                           ;main.c: 104:                 EUSART_Write(ee[i].name[j]);
  3341     0688  3016               	movlw	22
  3342     0689  00F0               	movwf	___bmul@multiplicand
  3343     068A  0020               	movlb	0	; select bank0
  3344     068B  0843               	movf	enviaNomes@i,w
  3345     068C  3184  246C  3186   	fcall	___bmul
  3346     068F  3E01               	addlw	low (_ee+1)
  3347     0690  0020               	movlb	0	; select bank0
  3348     0691  0741               	addwf	enviaNomes@j_413,w
  3349     0692  3184  2439  3186   	fcall	___eetoc
  3350     0695  3184  2425  3186   	fcall	_EUSART_Write
  3351     0698                     l1601:
  3352                           
  3353                           ;main.c: 105:             }
  3354     0698  3001               	movlw	1
  3355     0699  0020               	movlb	0	; select bank0
  3356     069A  07C1               	addwf	enviaNomes@j_413,f
  3357     069B  3000               	movlw	0
  3358     069C  3DC2               	addwfc	enviaNomes@j_413+1,f
  3359     069D                     l1603:
  3360     069D  0842               	movf	enviaNomes@j_413+1,w
  3361     069E  3A80               	xorlw	128
  3362     069F  00F8               	movwf	??_enviaNomes
  3363     06A0  3080               	movlw	128
  3364     06A1  0278               	subwf	??_enviaNomes,w
  3365     06A2  1D03               	skipz
  3366     06A3  2EA6               	goto	u755
  3367     06A4  3014               	movlw	20
  3368     06A5  0241               	subwf	enviaNomes@j_413,w
  3369     06A6                     u755:
  3370     06A6  1803               	skipnc
  3371     06A7  2EA9               	goto	u751
  3372     06A8  2EAA               	goto	u750
  3373     06A9                     u751:
  3374     06A9  2EBC               	goto	l1607
  3375     06AA                     u750:
  3376     06AA                     l1605:
  3377     06AA  3016               	movlw	22
  3378     06AB  00F0               	movwf	___bmul@multiplicand
  3379     06AC  0020               	movlb	0	; select bank0
  3380     06AD  0843               	movf	enviaNomes@i,w
  3381     06AE  3184  246C  3186   	fcall	___bmul
  3382     06B1  3E01               	addlw	low (_ee+1)
  3383     06B2  0020               	movlb	0	; select bank0
  3384     06B3  0741               	addwf	enviaNomes@j_413,w
  3385     06B4  3184  2439  3186   	fcall	___eetoc
  3386     06B7  3A00               	xorlw	0
  3387     06B8  1D03               	skipz
  3388     06B9  2EBB               	goto	u761
  3389     06BA  2EBC               	goto	u760
  3390     06BB                     u761:
  3391     06BB  2E88               	goto	l1599
  3392     06BC                     u760:
  3393     06BC                     l1607:
  3394                           
  3395                           ;main.c: 106:             EUSART_Write(0x0D);
  3396     06BC  300D               	movlw	13
  3397     06BD  3184  2425  3186   	fcall	_EUSART_Write
  3398     06C0                     l1609:
  3399                           
  3400                           ;main.c: 108:     }
  3401     06C0  3001               	movlw	1
  3402     06C1  0020               	movlb	0	; select bank0
  3403     06C2  07C3               	addwf	enviaNomes@i,f
  3404     06C3  3000               	movlw	0
  3405     06C4  3DC4               	addwfc	enviaNomes@i+1,f
  3406     06C5                     l1611:
  3407     06C5  0844               	movf	enviaNomes@i+1,w
  3408     06C6  3A80               	xorlw	128
  3409     06C7  00F8               	movwf	??_enviaNomes
  3410     06C8  3080               	movlw	128
  3411     06C9  0278               	subwf	??_enviaNomes,w
  3412     06CA  1D03               	skipz
  3413     06CB  2ECE               	goto	u775
  3414     06CC  300B               	movlw	11
  3415     06CD  0243               	subwf	enviaNomes@i,w
  3416     06CE                     u775:
  3417     06CE  1C03               	skipc
  3418     06CF  2ED1               	goto	u771
  3419     06D0  2ED2               	goto	u770
  3420     06D1                     u771:
  3421     06D1  2E17               	goto	l1577
  3422     06D2                     u770:
  3423     06D2                     l256:
  3424     06D2  0008               	return
  3425     06D3                     __end_of_enviaNomes:
  3426                           
  3427                           	psect	text9
  3428     0439                     __ptext9:	
  3429 ;; *************** function ___eetoc *****************
  3430 ;; Defined at:
  3431 ;;		line 104 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  addr            1    wreg     PTR eeprom void 
  3434 ;;		 -> ee(220), 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  addr            1    6[COMMON] PTR eeprom void 
  3437 ;;		 -> ee(220), 
  3438 ;;  data            1    7[COMMON] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      unsigned char 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3448 ;;      Params:         0       0       0       0       0       0
  3449 ;;      Locals:         2       0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0
  3451 ;;      Totals:         2       0       0       0       0       0
  3452 ;;Total ram usage:        2 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 1
  3455 ;; This function calls:
  3456 ;;		___eecpymem
  3457 ;; This function is called by:
  3458 ;;		_enviaNomes
  3459 ;;		_analisaRx
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463     0439                     ___eetoc:	
  3464                           ;psect for function ___eetoc
  3465                           
  3466                           
  3467                           ;incstack = 0
  3468                           ; Regs used in ___eetoc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3469                           ;___eetoc@addr stored from wreg
  3470     0439  00F6               	movwf	___eetoc@addr
  3471     043A                     l1511:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 104: __eetoc(__eep
      +                          rom void *addr);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 105
      +                          : {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 106:  unsigned 
      +                          char data;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 107:  __
      +                          eecpymem((unsigned char *) &data,addr,1);
  3474     043A  0876               	movf	___eetoc@addr,w
  3475     043B  00F0               	movwf	___eecpymem@from
  3476     043C  01F1               	clrf	___eecpymem@size
  3477     043D  0AF1               	incf	___eecpymem@size,f
  3478     043E  3077               	movlw	(low (___eetoc@data| 0))& (0+255)
  3479     043F  3184  24E5  3184   	fcall	___eecpymem
  3480     0442                     l1513:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 108:  return data;
  3483     0442  0877               	movf	___eetoc@data,w
  3484     0443                     l360:
  3485     0443  0008               	return
  3486     0444                     __end_of___eetoc:
  3487                           
  3488                           	psect	text10
  3489     04E5                     __ptext10:	
  3490 ;; *************** function ___eecpymem *****************
  3491 ;; Defined at:
  3492 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  to              1    wreg     PTR volatile unsigned ch
  3495 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  3496 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  3497 ;;  from            1    0[COMMON] PTR eeprom unsigned char
  3498 ;;		 -> ee(220), 
  3499 ;;  size            1    1[COMMON] unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  to              1    5[COMMON] PTR volatile unsigned ch
  3502 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  3503 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  3504 ;;  cp              1    4[COMMON] PTR volatile unsigned ch
  3505 ;;		 -> __eetofl@data(4), __eetoft@data(4), __eetoo@data(8), __eetol@data(4), 
  3506 ;;		 -> __eetom@data(3), __eetoi@data(2), __eetoc@data(1), 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3516 ;;      Params:         2       0       0       0       0       0
  3517 ;;      Locals:         2       0       0       0       0       0
  3518 ;;      Temps:          2       0       0       0       0       0
  3519 ;;      Totals:         6       0       0       0       0       0
  3520 ;;Total ram usage:        6 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		___eetoc
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529     04E5                     ___eecpymem:	
  3530                           ;psect for function ___eecpymem
  3531                           
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in ___eecpymem: [wreg+fsr1l+fsr1h+status,2+status,0]
  3535                           ;___eecpymem@to stored from wreg
  3536     04E5  00F5               	movwf	___eecpymem@to
  3537     04E6                     l1433:
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: __eecpymem(vola
      +                          tile unsigned char *to, __eeprom unsigned char * from, unsigned char size);C:\Program Fi
      +                          les\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: };C:\Program Files\Microchip\
      +                          xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.46\pic\s
      +                          ources\c99\pic\__eeprom.c: 6: ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\
      +                          __eeprom.c: 6: };C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 7:
      +                           {
  3540     04E6  0875               	movf	___eecpymem@to,w
  3541     04E7  00F4               	movwf	___eecpymem@cp
  3542     04E8                     l334:	
  3543                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 10:  while (EECON1
      +                          bits.WR) continue;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 
      +                          10:  __memcpyee(addr,(unsigned char *) &data,2);;C:\Program Files\Microchip\xc8\v2.46\pi
      +                          c\sources\c99\pic\__eeprom.c: 10: {
  3544                           
  3545     04E8  0023               	movlb	3	; select bank3
  3546     04E9  1895               	btfsc	21,1	;volsfr
  3547     04EA  2CEC               	goto	u571
  3548     04EB  2CED               	goto	u570
  3549     04EC                     u571:
  3550     04EC  2CE8               	goto	l334
  3551     04ED                     u570:
  3552     04ED                     l1435:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11:  EEADR = (unsi
      +                          gned char)from;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11:
      +                            return data;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 11: 
      +                           double data;
  3555     04ED  0870               	movf	___eecpymem@from,w
  3556     04EE  00F2               	movwf	??___eecpymem
  3557     04EF  01F3               	clrf	??___eecpymem+1
  3558     04F0  0872               	movf	??___eecpymem,w
  3559     04F1  0091               	movwf	17	;volatile
  3560     04F2  0873               	movf	??___eecpymem+1,w
  3561     04F3  0092               	movwf	18	;volatile
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  3564     04F4  2D0B               	goto	l1447
  3565     04F5                     l339:
  3566     04F5  1895               	btfsc	21,1	;volsfr
  3567     04F6  2CF8               	goto	u581
  3568     04F7  2CF9               	goto	u580
  3569     04F8                     u581:
  3570     04F8  2CF5               	goto	l339
  3571     04F9                     u580:
  3572     04F9                     l1437:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 15:   EECON1 &= 0x
      +                          7F;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 15: 
  3575     04F9  307F               	movlw	127
  3576     04FA  00F2               	movwf	??___eecpymem
  3577     04FB  0872               	movf	??___eecpymem,w
  3578     04FC  0595               	andwf	21,f	;volsfr
  3579     04FD                     l1439:
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 17:   EECON1bits.R
      +                          D = 1;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 17: __fttoee
      +                          (__eeprom void *addr, float data)
  3582     04FD  1415               	bsf	21,0	;volsfr
  3583     04FE                     l1441:
  3584                           
  3585                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 18:   *cp++ = EEDA
      +                          TA;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 18: {
  3586     04FE  0874               	movf	___eecpymem@cp,w
  3587     04FF  0086               	movwf	6
  3588     0500  0187               	clrf	7
  3589     0501  0813               	movf	19,w	;volatile
  3590     0502  0081               	movwf	1
  3591     0503                     l1443:
  3592     0503  3001               	movlw	1
  3593     0504  00F2               	movwf	??___eecpymem
  3594     0505  0872               	movf	??___eecpymem,w
  3595     0506  07F4               	addwf	___eecpymem@cp,f
  3596     0507                     l1445:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 19:   ++EEADR;;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 19:  __memcpyee(addr,(
      +                          unsigned char *) &data,3);
  3599     0507  3001               	movlw	1
  3600     0508  0791               	addwf	17,f	;volatile
  3601     0509  3000               	movlw	0
  3602     050A  3D92               	addwfc	18,f	;volatile
  3603     050B                     l1447:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  while(size--)
      +                           {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12: };C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\pic\__eeprom.c: 12:  __eecpymem((unsigned cha
      +                          r *) &data,addr,4);
  3606     050B  3001               	movlw	1
  3607     050C  02F1               	subwf	___eecpymem@size,f
  3608     050D  0A71               	incf	___eecpymem@size,w
  3609     050E  1D03               	btfss	3,2
  3610     050F  2D11               	goto	u591
  3611     0510  2D12               	goto	u590
  3612     0511                     u591:
  3613     0511  2CF5               	goto	l339
  3614     0512                     u590:
  3615     0512                     l343:
  3616     0512  0008               	return
  3617     0513                     __end_of___eecpymem:
  3618                           
  3619                           	psect	text11
  3620     046C                     __ptext11:	
  3621 ;; *************** function ___bmul *****************
  3622 ;; Defined at:
  3623 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  multiplier      1    wreg     unsigned char 
  3626 ;;  multiplicand    1    0[COMMON] unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  multiplier      1    3[COMMON] unsigned char 
  3629 ;;  product         1    2[COMMON] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      unsigned char 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3639 ;;      Params:         1       0       0       0       0       0
  3640 ;;      Locals:         2       0       0       0       0       0
  3641 ;;      Temps:          1       0       0       0       0       0
  3642 ;;      Totals:         4       0       0       0       0       0
  3643 ;;Total ram usage:        4 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_enviaNomes
  3649 ;;		_recebeGuardaNome
  3650 ;;		_analisaRx
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654     046C                     ___bmul:	
  3655                           ;psect for function ___bmul
  3656                           
  3657                           
  3658                           ;incstack = 0
  3659                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3660                           ;___bmul@multiplier stored from wreg
  3661     046C  00F3               	movwf	___bmul@multiplier
  3662     046D                     l1521:
  3663     046D  01F2               	clrf	___bmul@product
  3664     046E                     l1523:
  3665     046E  1C73               	btfss	___bmul@multiplier,0
  3666     046F  2C71               	goto	u681
  3667     0470  2C72               	goto	u680
  3668     0471                     u681:
  3669     0471  2C76               	goto	l1527
  3670     0472                     u680:
  3671     0472                     l1525:
  3672     0472  0870               	movf	___bmul@multiplicand,w
  3673     0473  00F1               	movwf	??___bmul
  3674     0474  0871               	movf	??___bmul,w
  3675     0475  07F2               	addwf	___bmul@product,f
  3676     0476                     l1527:
  3677     0476  1003               	clrc
  3678     0477  0DF0               	rlf	___bmul@multiplicand,f
  3679     0478                     l1529:
  3680     0478  1003               	clrc
  3681     0479  0CF3               	rrf	___bmul@multiplier,f
  3682     047A  0873               	movf	___bmul@multiplier,w
  3683     047B  1D03               	btfss	3,2
  3684     047C  2C7E               	goto	u691
  3685     047D  2C7F               	goto	u690
  3686     047E                     u691:
  3687     047E  2C6E               	goto	l1523
  3688     047F                     u690:
  3689     047F                     l1531:
  3690     047F  0872               	movf	___bmul@product,w
  3691     0480                     l493:
  3692     0480  0008               	return
  3693     0481                     __end_of___bmul:
  3694                           
  3695                           	psect	text12
  3696     0425                     __ptext12:	
  3697 ;; *************** function _EUSART_Write *****************
  3698 ;; Defined at:
  3699 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  txData          1    wreg     unsigned char 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  txData          1    0[COMMON] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3713 ;;      Params:         0       0       0       0       0       0
  3714 ;;      Locals:         1       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0
  3716 ;;      Totals:         1       0       0       0       0       0
  3717 ;;Total ram usage:        1 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_enviaMsg
  3723 ;;		_enviaNomes
  3724 ;;		_analisaRx
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728     0425                     _EUSART_Write:	
  3729                           ;psect for function _EUSART_Write
  3730                           
  3731                           
  3732                           ;incstack = 0
  3733                           ; Regs used in _EUSART_Write: [wreg]
  3734                           ;EUSART_Write@txData stored from wreg
  3735     0425  00F0               	movwf	EUSART_Write@txData
  3736     0426                     l1429:
  3737     0426                     l117:	
  3738                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3739                           
  3740                           
  3741                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3742     0426  0020               	movlb	0	; select bank0
  3743     0427  1E11               	btfss	17,4	;volatile
  3744     0428  2C2A               	goto	u561
  3745     0429  2C2B               	goto	u560
  3746     042A                     u561:
  3747     042A  2C26               	goto	l117
  3748     042B                     u560:
  3749     042B                     l1431:
  3750                           
  3751                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3752     042B  0870               	movf	EUSART_Write@txData,w
  3753     042C  0023               	movlb	3	; select bank3
  3754     042D  009A               	movwf	26	;volatile
  3755     042E                     l120:
  3756     042E  0008               	return
  3757     042F                     __end_of_EUSART_Write:
  3758                           
  3759                           	psect	text13
  3760     0450                     __ptext13:	
  3761 ;; *************** function _SYSTEM_Initialize *****************
  3762 ;; Defined at:
  3763 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, pclath, cstack
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3777 ;;      Params:         0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 2
  3784 ;; This function calls:
  3785 ;;		_EUSART_Initialize
  3786 ;;		_OSCILLATOR_Initialize
  3787 ;;		_PIN_MANAGER_Initialize
  3788 ;;		_WDT_Initialize
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794     0450                     _SYSTEM_Initialize:	
  3795                           ;psect for function _SYSTEM_Initialize
  3796                           
  3797     0450                     l1655:	
  3798                           ;incstack = 0
  3799                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3800                           
  3801                           
  3802                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3803     0450  3184  2481  3184   	fcall	_PIN_MANAGER_Initialize
  3804                           
  3805                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3806     0453  3184  2444  3184   	fcall	_OSCILLATOR_Initialize
  3807                           
  3808                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3809     0456  3184  2404  3184   	fcall	_WDT_Initialize
  3810                           
  3811                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  3812     0459  3184  2499  3184   	fcall	_EUSART_Initialize
  3813     045C                     l159:
  3814     045C  0008               	return
  3815     045D                     __end_of_SYSTEM_Initialize:
  3816                           
  3817                           	psect	text14
  3818     0404                     __ptext14:	
  3819 ;; *************** function _WDT_Initialize *****************
  3820 ;; Defined at:
  3821 ;;		line 73 in file "mcc_generated_files/mcc.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  1    wreg      void 
  3828 ;; Registers used:
  3829 ;;		wreg
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3835 ;;      Params:         0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_SYSTEM_Initialize
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848     0404                     _WDT_Initialize:	
  3849                           ;psect for function _WDT_Initialize
  3850                           
  3851     0404                     l1569:	
  3852                           ;incstack = 0
  3853                           ; Regs used in _WDT_Initialize: [wreg]
  3854                           
  3855                           
  3856                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  3857     0404  3016               	movlw	22
  3858     0405  0021               	movlb	1	; select bank1
  3859     0406  0097               	movwf	23	;volatile
  3860     0407                     l168:
  3861     0407  0008               	return
  3862     0408                     __end_of_WDT_Initialize:
  3863                           
  3864                           	psect	text15
  3865     0481                     __ptext15:	
  3866 ;; *************** function _PIN_MANAGER_Initialize *****************
  3867 ;; Defined at:
  3868 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3882 ;;      Params:         0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0
  3885 ;;      Totals:         0       0       0       0       0       0
  3886 ;;Total ram usage:        0 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_SYSTEM_Initialize
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895     0481                     _PIN_MANAGER_Initialize:	
  3896                           ;psect for function _PIN_MANAGER_Initialize
  3897                           
  3898     0481                     l1547:	
  3899                           ;incstack = 0
  3900                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3901                           
  3902                           
  3903                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3904     0481  0022               	movlb	2	; select bank2
  3905     0482  018C               	clrf	12	;volatile
  3906                           
  3907                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3908     0483  018D               	clrf	13	;volatile
  3909     0484                     l1549:
  3910                           
  3911                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xFF;
  3912     0484  30FF               	movlw	255
  3913     0485  0021               	movlb	1	; select bank1
  3914     0486  008C               	movwf	12	;volatile
  3915     0487                     l1551:
  3916                           
  3917                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  3918     0487  30FF               	movlw	255
  3919     0488  008D               	movwf	13	;volatile
  3920     0489                     l1553:
  3921                           
  3922                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDA;
  3923     0489  30DA               	movlw	218
  3924     048A  0023               	movlb	3	; select bank3
  3925     048B  008D               	movwf	13	;volatile
  3926     048C                     l1555:
  3927                           
  3928                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  3929     048C  301F               	movlw	31
  3930     048D  008C               	movwf	12	;volatile
  3931                           
  3932                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  3933     048E  0024               	movlb	4	; select bank4
  3934     048F  018D               	clrf	13	;volatile
  3935                           
  3936                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  3937     0490  018C               	clrf	12	;volatile
  3938     0491                     l1557:
  3939                           
  3940                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3941     0491  0021               	movlb	1	; select bank1
  3942     0492  1795               	bsf	21,7	;volatile
  3943     0493                     l1559:
  3944                           
  3945                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x80;
  3946     0493  3080               	movlw	128
  3947     0494  0022               	movlb	2	; select bank2
  3948     0495  009D               	movwf	29	;volatile
  3949     0496                     l1561:
  3950                           
  3951                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  3952     0496  3001               	movlw	1
  3953     0497  009E               	movwf	30	;volatile
  3954     0498                     l193:
  3955     0498  0008               	return
  3956     0499                     __end_of_PIN_MANAGER_Initialize:
  3957                           
  3958                           	psect	text16
  3959     0444                     __ptext16:	
  3960 ;; *************** function _OSCILLATOR_Initialize *****************
  3961 ;; Defined at:
  3962 ;;		line 59 in file "mcc_generated_files/mcc.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 0/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3976 ;;      Params:         0       0       0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0       0
  3978 ;;      Temps:          0       0       0       0       0       0
  3979 ;;      Totals:         0       0       0       0       0       0
  3980 ;;Total ram usage:        0 bytes
  3981 ;; Hardware stack levels used: 1
  3982 ;; This function calls:
  3983 ;;		Nothing
  3984 ;; This function is called by:
  3985 ;;		_SYSTEM_Initialize
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989     0444                     _OSCILLATOR_Initialize:	
  3990                           ;psect for function _OSCILLATOR_Initialize
  3991                           
  3992     0444                     l1563:	
  3993                           ;incstack = 0
  3994                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3995                           
  3996                           
  3997                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x70;
  3998     0444  3070               	movlw	112
  3999     0445  0021               	movlb	1	; select bank1
  4000     0446  0099               	movwf	25	;volatile
  4001     0447                     l1565:
  4002                           
  4003                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  4004     0447  0198               	clrf	24	;volatile
  4005     0448                     l1567:
  4006                           
  4007                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  4008     0448  0022               	movlb	2	; select bank2
  4009     0449  0196               	clrf	22	;volatile
  4010     044A                     l162:	
  4011                           ;mcc_generated_files/mcc.c: 69:     {;mcc_generated_files/mcc.c: 70:     }
  4012                           
  4013                           
  4014                           ;mcc_generated_files/mcc.c: 68:     while(PLLR == 0)
  4015     044A  0021               	movlb	1	; select bank1
  4016     044B  1F1A               	btfss	26,6	;volatile
  4017     044C  2C4E               	goto	u701
  4018     044D  2C4F               	goto	u700
  4019     044E                     u701:
  4020     044E  2C4A               	goto	l162
  4021     044F                     u700:
  4022     044F                     l165:
  4023     044F  0008               	return
  4024     0450                     __end_of_OSCILLATOR_Initialize:
  4025                           
  4026                           	psect	text17
  4027     0499                     __ptext17:	
  4028 ;; *************** function _EUSART_Initialize *****************
  4029 ;; Defined at:
  4030 ;;		line 66 in file "mcc_generated_files/eusart.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;		None
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg, status,2, status,0, pclath, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4044 ;;      Params:         0       0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0       0
  4047 ;;      Totals:         0       0       0       0       0       0
  4048 ;;Total ram usage:        0 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 1
  4051 ;; This function calls:
  4052 ;;		_EUSART_SetErrorHandler
  4053 ;;		_EUSART_SetFramingErrorHandler
  4054 ;;		_EUSART_SetOverrunErrorHandler
  4055 ;; This function is called by:
  4056 ;;		_SYSTEM_Initialize
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060     0499                     _EUSART_Initialize:	
  4061                           ;psect for function _EUSART_Initialize
  4062                           
  4063     0499                     l1535:	
  4064                           ;incstack = 0
  4065                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4066                           
  4067                           
  4068                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  4069     0499  3008               	movlw	8
  4070     049A  0023               	movlb	3	; select bank3
  4071     049B  009F               	movwf	31	;volatile
  4072                           
  4073                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  4074     049C  3090               	movlw	144
  4075     049D  009D               	movwf	29	;volatile
  4076                           
  4077                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  4078     049E  3024               	movlw	36
  4079     049F  009E               	movwf	30	;volatile
  4080                           
  4081                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x8A;
  4082     04A0  308A               	movlw	138
  4083     04A1  009B               	movwf	27	;volatile
  4084     04A2                     l1537:
  4085                           
  4086                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  4087     04A2  019C               	clrf	28	;volatile
  4088     04A3                     l1539:
  4089                           
  4090                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  4091     04A3  3000               	movlw	0
  4092     04A4  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4093     04A5  3000               	movlw	0
  4094     04A6  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4095     04A7  3184  2413  3184   	fcall	_EUSART_SetFramingErrorHandler
  4096     04AA                     l1541:
  4097                           
  4098                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  4099     04AA  3000               	movlw	0
  4100     04AB  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4101     04AC  3000               	movlw	0
  4102     04AD  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4103     04AE  3184  2419  3184   	fcall	_EUSART_SetOverrunErrorHandler
  4104     04B1                     l1543:
  4105                           
  4106                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  4107     04B1  3000               	movlw	0
  4108     04B2  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  4109     04B3  3000               	movlw	0
  4110     04B4  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4111     04B5  3184  240D  3184   	fcall	_EUSART_SetErrorHandler
  4112     04B8                     l1545:
  4113                           
  4114                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  4115     04B8  0020               	movlb	0	; select bank0
  4116     04B9  01BE               	clrf	_eusartRxLastError	;volatile
  4117     04BA                     l93:
  4118     04BA  0008               	return
  4119     04BB                     __end_of_EUSART_Initialize:
  4120                           
  4121                           	psect	text18
  4122     0419                     __ptext18:	
  4123 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4124 ;; Defined at:
  4125 ;;		line 161 in file "mcc_generated_files/eusart.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4128 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4140 ;;      Params:         2       0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0
  4143 ;;      Totals:         2       0       0       0       0       0
  4144 ;;Total ram usage:        2 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; This function calls:
  4147 ;;		Nothing
  4148 ;; This function is called by:
  4149 ;;		_EUSART_Initialize
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153     0419                     _EUSART_SetOverrunErrorHandler:	
  4154                           ;psect for function _EUSART_SetOverrunErrorHandler
  4155                           
  4156     0419                     l1481:	
  4157                           ;incstack = 0
  4158                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4159                           
  4160                           
  4161                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  4162     0419  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4163     041A  0020               	movlb	0	; select bank0
  4164     041B  00B8               	movwf	_EUSART_OverrunErrorHandler+1
  4165     041C  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4166     041D  00B7               	movwf	_EUSART_OverrunErrorHandler
  4167     041E                     l135:
  4168     041E  0008               	return
  4169     041F                     __end_of_EUSART_SetOverrunErrorHandler:
  4170                           
  4171                           	psect	text19
  4172     0413                     __ptext19:	
  4173 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4174 ;; Defined at:
  4175 ;;		line 157 in file "mcc_generated_files/eusart.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4178 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4190 ;;      Params:         2       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0
  4193 ;;      Totals:         2       0       0       0       0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_EUSART_Initialize
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203     0413                     _EUSART_SetFramingErrorHandler:	
  4204                           ;psect for function _EUSART_SetFramingErrorHandler
  4205                           
  4206     0413                     l1479:	
  4207                           ;incstack = 0
  4208                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4209                           
  4210                           
  4211                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  4212     0413  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4213     0414  0020               	movlb	0	; select bank0
  4214     0415  00BA               	movwf	_EUSART_FramingErrorHandler+1
  4215     0416  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4216     0417  00B9               	movwf	_EUSART_FramingErrorHandler
  4217     0418                     l132:
  4218     0418  0008               	return
  4219     0419                     __end_of_EUSART_SetFramingErrorHandler:
  4220                           
  4221                           	psect	text20
  4222     040D                     __ptext20:	
  4223 ;; *************** function _EUSART_SetErrorHandler *****************
  4224 ;; Defined at:
  4225 ;;		line 165 in file "mcc_generated_files/eusart.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  4228 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4240 ;;      Params:         2       0       0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0
  4243 ;;      Totals:         2       0       0       0       0       0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_EUSART_Initialize
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253     040D                     _EUSART_SetErrorHandler:	
  4254                           ;psect for function _EUSART_SetErrorHandler
  4255                           
  4256     040D                     l1483:	
  4257                           ;incstack = 0
  4258                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4259                           
  4260                           
  4261                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  4262     040D  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4263     040E  0020               	movlb	0	; select bank0
  4264     040F  00B6               	movwf	_EUSART_ErrorHandler+1
  4265     0410  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4266     0411  00B5               	movwf	_EUSART_ErrorHandler
  4267     0412                     l138:
  4268     0412  0008               	return
  4269     0413                     __end_of_EUSART_SetErrorHandler:
  4270     007E                     btemp	set	126	;btemp
  4271     007E                     wtemp0	set	126
  4272                           
  4273                           	psect	config
  4274                           
  4275                           ;Config register CONFIG1 @ 0x8007
  4276                           ;	Oscillator Selection
  4277                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4278                           ;	Watchdog Timer Enable
  4279                           ;	WDTE = OFF, WDT disabled
  4280                           ;	Power-up Timer Enable
  4281                           ;	PWRTE = OFF, PWRT disabled
  4282                           ;	MCLR Pin Function Select
  4283                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4284                           ;	Flash Program Memory Code Protection
  4285                           ;	CP = OFF, Program memory code protection is disabled
  4286                           ;	Data Memory Code Protection
  4287                           ;	CPD = OFF, Data memory code protection is disabled
  4288                           ;	Brown-out Reset Enable
  4289                           ;	BOREN = ON, Brown-out Reset enabled
  4290                           ;	Clock Out Enable
  4291                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4292                           ;	Internal/External Switchover
  4293                           ;	IESO = ON, Internal/External Switchover mode is enabled
  4294                           ;	Fail-Safe Clock Monitor Enable
  4295                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4296     8007                     	org	32775
  4297     8007  3FE4               	dw	16356
  4298                           
  4299                           ;Config register CONFIG2 @ 0x8008
  4300                           ;	Flash Memory Self-Write Protection
  4301                           ;	WRT = OFF, Write protection off
  4302                           ;	PLL Enable
  4303                           ;	PLLEN = ON, 4x PLL enabled
  4304                           ;	Stack Overflow/Underflow Reset Enable
  4305                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4306                           ;	Brown-out Reset Voltage Selection
  4307                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  4308                           ;	In-Circuit Debugger Mode
  4309                           ;	DEBUG = 0x1, unprogrammed default
  4310                           ;	Low-Voltage Programming Enable
  4311                           ;	LVP = ON, Low-voltage programming enabled
  4312     8008                     	org	32776
  4313     8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    258
    Data        0
    BSS         252
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     12      43
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    __eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    __eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 220
		 -> ee(EEDATA[220]), 

    __eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 8
		 -> __eetoc@data(COMMON[1]), __eetofl@data(COMMON[4]), __eetoft@data(COMMON[4]), __eetoi@data(COMMON[2]), 
		 -> __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), __eetoo@data(COMMON[8]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 220
		 -> ee(EEDATA[220]), 

    enviaMsg@msg	PTR const unsigned char  size(2) Largest target is 50
		 -> msg0(CODE[50]), msg1(CODE[22]), msg2(CODE[28]), msg3(CODE[9]), 
		 -> msg4(CODE[15]), msg5(CODE[38]), msg6(CODE[38]), msg7(CODE[36]), 
		 -> msg8(CODE[22]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    __memcpyee@from	PTR const unsigned char  size(1) Largest target is 8
		 -> __ctoee@data(COMMON[1]), __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __itoee@data(COMMON[2]), 
		 -> __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), __otoee@data(COMMON[8]), 

    __memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> __ctoee@data(COMMON[1]), __fltoee@data(COMMON[4]), __fttoee@data(COMMON[4]), __itoee@data(COMMON[2]), 
		 -> __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), __otoee@data(COMMON[8]), 

    __memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 220
		 -> ee(EEDATA[220]), 


Critical Paths under _main in COMMON

    _main->_analisaRx
    _analisaRx->_recebeGuardaNome
    _recebeGuardaNome->___ctoee
    _enviaMsg->_EUSART_Write
    ___ctoee->___memcpyee
    _enviaNomes->___eetoc
    ___eetoc->___eecpymem
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_analisaRx
    _analisaRx->_enviaNomes

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10419
                                             12 COMMON     1     1      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                          _analisaRx
 ---------------------------------------------------------------------------------
 (1) _analisaRx                                            7     7      0    9992
                                             11 COMMON     1     1      0
                                              6 BANK0      6     6      0
                       _EUSART_Write
                             ___bmul
                            ___ctoee
                            ___eetoc
                           _enviaMsg
                         _enviaNomes
                   _recebeGuardaNome
 ---------------------------------------------------------------------------------
 (2) _recebeGuardaNome                                     3     3      0    3156
                                              8 COMMON     3     3      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                             ___bmul
                            ___ctoee
                           _enviaMsg
 ---------------------------------------------------------------------------------
 (3) _enviaMsg                                             6     4      2     948
                                              1 COMMON     6     4      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) ___ctoee                                              2     1      1    1613
                                              6 COMMON     2     1      1
                             ___bmul (ARG)
                         ___memcpyee
 ---------------------------------------------------------------------------------
 (4) ___memcpyee                                           6     4      2    1397
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enviaNomes                                           7     7      0    2148
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                       _EUSART_Write
                             ___bmul
                            ___eetoc
 ---------------------------------------------------------------------------------
 (3) ___eetoc                                              2     2      0    1330
                                              6 COMMON     2     2      0
                         ___eecpymem
 ---------------------------------------------------------------------------------
 (4) ___eecpymem                                           6     4      2    1229
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     482
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _analisaRx
     _EUSART_Write
     ___bmul
     ___ctoee
       ___bmul (ARG)
       ___memcpyee (ARG)
     ___eetoc
       ___eecpymem
     _enviaMsg
       _EUSART_Write
     _enviaNomes
       _EUSART_Write
       ___bmul
       ___eetoc
     _recebeGuardaNome
       _EUSART_Read
       _EUSART_is_rx_ready
       ___bmul
       ___ctoee
       _enviaMsg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0      DC       0       85.9%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      39       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      C      2B       6       53.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      39      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 03 14:52:05 2024

                               ___bmul@product 0072                                             l93 04BA  
                                           _ee 0000                                enviaNomes@j_413 0041  
                                          l101 040C                                            l110 045D  
                                          l120 042E                                            l114 046B  
                                          l132 0418                                            l117 0426  
                                          l135 041E                                            l303 07F3  
                                          l138 0412                                            l162 044A  
                                          l308 0516                                            l165 044F  
                                          l309 0548                                            l334 04E8  
                                          l238 04E4                                            l159 045C  
                                          l343 0512                                            l351 0563  
                                          l168 0407                                            l360 0443  
                                          l256 06D2                                            l272 0613  
                                          l193 0498                                            l354 057C  
                                          l346 054E                                            l339 04F5  
                                          l284 07B6                                            l357 0592  
                                          l375 0438                                            l493 0480  
                                          u600 0553                                            u601 0552  
                                          u610 0568                                            u611 0567  
                                          u700 044F                                            u620 057B  
                                          u701 044E                                            u621 057A  
                                          u710 0627                                            u630 058A  
                                          u711 0626                                            u631 0589  
                                          u560 042B                                            u720 0655  
                                          u640 0592                                            u800 05C3  
                                          u561 042A                                            u721 0654  
                                          u641 0591                                            u801 05C2  
                                          u570 04ED                                            u730 0667  
                                          u650 0462                                            u810 05CE  
                                          u571 04EC                                            u731 0666  
                                          u651 0461                                            u811 05CD  
                                          u580 04F9                                            u740 067C  
                                          u660 0468                                            u820 0607  
                                          u900 0766                                            u581 04F8  
                                          u741 067B                                            u725 0651  
                                          u661 0467                                            u821 0606  
                                          u901 0765                                            u590 0512  
                                          u750 06AA                                            u670 04E0  
                                          u910 0778                                            u830 06DA  
                                          u591 0511                                            u751 06A9  
                                          u671 04DF                                            u911 0777  
                                          u831 06D9                                            u680 0472  
                                          u760 06BC                                            u920 079A  
                                          u840 06E3                                            u681 0471  
                                          u761 06BB                                            u921 0799  
                                          u905 0762                                            u841 06E2  
                                          u690 047F                                            u770 06D2  
                                          u930 07AA                                            u850 06FC  
                                          u691 047E                                            u771 06D1  
                                          u755 06A6                                            u931 07A9  
                                          u851 06FB                                            u780 05A6  
                                          u940 07C3                                            u860 0702  
                                          u781 05A5                                            u941 07C2  
                                          u861 0701                                            u790 05B0  
                                          u950 07CA                                            u870 070B  
                                          u775 06CE                                            u791 05AF  
                                          u951 07C9                                            u871 070A  
                                          u960 07EA                                            u880 071E  
                                          u961 07E9                                            u945 07BF  
                                          u881 071D                                            u890 0731  
                                          u970 051E                                            u891 0730  
                                          u971 051D                                            u980 0528  
                                          u965 07E6                                            u981 0527  
                                          u990 052E                                            u991 052D  
                                 ___ctoee@addr 0077                                   ___ctoee@data 0076  
               ?_EUSART_SetFramingErrorHandler 0070                                            wreg 0009  
                                 ?_EUSART_Read 0070                                           l1501 04BB  
                                         l1431 042B                                           l1511 043A  
                                         l1503 04BD                                           l1521 046D  
                                         l1441 04FE                                           l1433 04E6  
                                         l1513 0442                                           l1601 0698  
                                         l1505 04CC                                           l1531 047F  
                                         l1523 046E                                           l1443 0503  
                                         l1435 04ED                                           l1611 06C5  
                                         l1603 069D                                           l1451 0553  
                                         l1507 04D0                                           l1541 04AA  
                                         l1429 0426                                           l1525 0472  
                                         l1445 0507                                           l1437 04F9  
                                         l1605 06AA                                           l1461 0575  
                                         l1453 055E                                           l1517 0430  
                                         l1509 04E0                                           l1621 05AA  
                                         l1613 0593                                           l1701 0778  
                                         l1543 04B1                                           l1535 0499  
                                         l1551 0487                                           l1527 0476  
                                         l1439 04FD                                           l1447 050B  
                                         l1607 06BC                                           l1471 0584  
                                         l1463 0577                                           l1455 0568  
                                         l1631 05BC                                           l1615 0596  
                                         l1703 077C                                           l1481 0419  
                                         l1545 04B8                                           l1537 04A2  
                                         l1561 0496                                           l1553 0489  
                                         l1529 0478                                           l1609 06C0  
                                         l1473 0585                                           l1465 057B  
                                         l1457 056D                                           l1449 054C  
                                         l1641 05D7                                           l1633 05C3  
                                         l1617 059E                                           l1713 07A2  
                                         l1721 07C4                                           l1483 040D  
                                         l1539 04A3                                           l1563 0444  
                                         l1555 048C                                           l1547 0481  
                                         l1571 0614                                           l1491 0462  
                                         l1475 058A                                           l1467 057F  
                                         l1459 0571                                           l1651 0601  
                                         l1643 05E3                                           l1635 05C9  
                                         l1627 05B1                                           l1619 05A6  
                                         l1731 07D8                                           l1723 07CA  
                                         l1715 07AA                                           l1707 078A  
                                         l1565 0447                                           l1557 0491  
                                         l1549 0484                                           l1581 062F  
                                         l1493 0463                                           l1485 0408  
                                         l1469 0583                                           l1477 058B  
                                         l1653 0607                                           l1645 05E4  
                                         l1637 05CE                                           l1629 05B8  
                                         l1733 07DD                                           l1717 07B1  
                                         l1709 079A                                           l1661 06E3  
                                         l1741 0513                                           l1479 0413  
                                         l1567 0448                                           l1559 0493  
                                         l1655 0450                                           l1591 0667  
                                         l1583 0633                                           l1495 0468  
                                         l1647 05EC                                           l1639 05D0  
                                         l1735 07EA                                           l1671 0702  
                                         l1663 06EB                                           l1751 0534  
                                         l1743 051E                                           l1569 0404  
                                         l1585 0643                                           l1593 066C  
                                         l1577 0617                                           l1497 046A  
                                         l1489 045D                                           l1649 05FD  
                                         l1729 07CC                                           l1681 071E  
                                         l1673 0705                                           l1665 06F2  
                                         l1657 06D3                                           l1753 053A  
                                         l1745 0522                                           l1595 067C  
                                         l1587 0648                                           l1579 0627  
                                         l1739 07EC                                           l1691 0740  
                                         l1683 0721                                           l1675 070B  
                                         l1659 06DA                                           l1667 06F6  
                                         l1755 053E                                           l1747 0528  
                                         l1597 0684                                           l1589 0655  
                                         l1693 0744                                           l1685 0731  
                                         l1677 0710                                           l1669 06FC  
                                         l1757 0544                                           l1749 052E  
                                         l1599 0688                                           l1695 0754  
                                         l1687 0738                                           l1679 0717  
                                         l1697 0759                                           l1689 073C  
                                         l1699 0766                                           u1000 0534  
                                         u1001 0533                                           u1010 053A  
                                         u1011 0539                                           u1020 0544  
                                         u1021 0543                                           _LATA 010C  
                                         _LATB 010D                                           _PLLR 04D6  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 0513                                           _msg0 0800  
                                         _msg1 08D4                                           _msg2 08A2  
                                         _msg3 08F9                                           _msg4 08EA  
                                         _msg5 0858                                           _msg6 0832  
                                         _msg7 087E                                           _msg8 08BE  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                       __end_of_recebeGuardaNome 0614  
                                         start 0002                              ___bmul@multiplier 0073  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0450  
                                        ?_main 0070                                __end_of___eetoc 0444  
                                        _EEADR 0191                                __end_of___ctoee 0439  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                               _WDT_Initialize 0404                                  ___memcpyee@to 0075  
                                        status 0003                                          wtemp0 007E  
                                  enviaMsg@msg 0071                                    enviaNomes@i 0043  
                                  enviaNomes@j 003F                                __initialization 07F4  
                                 __end_of_main 054B                                   __end_of_msg0 0832  
                                 __end_of_msg1 08EA                                   __end_of_msg2 08BE  
                                 __end_of_msg3 0902                                   __end_of_msg4 08F9  
                                 __end_of_msg5 087E                                   __end_of_msg6 0858  
                                 __end_of_msg7 08A2                                   __end_of_msg8 08D4  
                               ??_EUSART_Write 0070                                         ??_main 007C  
                       __end_of_WDT_Initialize 0408              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0037                                         _EEADRH 0192  
                                       _EEADRL 0191                                         _EEDATA 0193  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON1 0195                                         _EECON2 0196  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 040D                                         _BORCON 0116  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                                       ___bmul 046C                                      ??___eetoc 0076  
                                    ??___ctoee 0077                               __end_of_enviaMsg 04E5  
                              ?_WDT_Initialize 0070                                 ___memcpyee@ptr 0074  
                                   ___eecpymem 04E5                              _SYSTEM_Initialize 0450  
                      __end_of__initialization 07FD                             ?_SYSTEM_Initialize 0070  
                          ___bmul@multiplicand 0070                                     ___memcpyee 054B  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_SYSTEM_Initialize 045D                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 042F                              ?_recebeGuardaNome 0070  
                                   __pmaintext 0513                             ??_recebeGuardaNome 0078  
                                      ?___bmul 0070                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0072  
                                  ?___eecpymem 0070                                      ?_enviaMsg 0071  
                            __end_of_analisaRx 07F4                                     _enviaNomes 0614  
                                  ?___memcpyee 0070                                        ___eetoc 0439  
                                      ___ctoee 042F                                        __ptext1 06D3  
                                      __ptext2 0593                                        __ptext3 04BB  
                                      __ptext4 042F                                        __ptext5 054B  
                                      __ptext6 0408                                        __ptext7 045D  
                                      __ptext8 0614                                        __ptext9 0439  
                                      _countRx 003D                          _OSCILLATOR_Initialize 0444  
                     ??_PIN_MANAGER_Initialize 0070                                     analisaRx@i 0049  
                                   analisaRx@j 0045                                        clrloop0 0420  
                         end_of_initialization 07FD                                     ??_enviaMsg 0073  
        __end_of_EUSART_SetOverrunErrorHandler 041F                  _EUSART_SetOverrunErrorHandler 0419  
                                   _nome_vazio 003B                              _EUSART_Initialize 0499  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0408                                ___memcpyee@from 0070  
                              ___memcpyee@size 0071                            ??_EUSART_Initialize 0072  
                             ??_WDT_Initialize 0070                            ?_EUSART_is_rx_ready 0070  
                    __end_of_EUSART_Initialize 04BB                           ??_EUSART_is_rx_ready 0070  
                                    _TXSTAbits 019E                                    ?_enviaNomes 0070  
                                   main@rxChar 007C                                 __end_of___bmul 0481  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 0425  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 07F4  
                                ??_EUSART_Read 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 0039                                       ??___bmul 0071  
                       _EUSART_SetErrorHandler 040D                                    __pbssEEDATA 0000  
                                  __pbssCOMMON 007D                                      ___latbits 0001  
                                __pcstackBANK0 003F                                   ??___eecpymem 0072  
                          __end_of_EUSART_Read 046C                                      _analisaRx 06D3  
                                 ??___memcpyee 0072                         _PIN_MANAGER_Initialize 0481  
                                     ?___eetoc 0070                                       ?___ctoee 0076  
                           __end_of___eecpymem 0513                                      _countName 007D  
                           __end_of___memcpyee 0593         EUSART_SetErrorHandler@interruptHandler 0070  
                                    clear_ram0 041F                              _eusartRxLastError 003E  
                                   ?_analisaRx 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072              _EUSART_DefaultOverrunErrorHandler 0000  
                    recebeGuardaNome@countByte 007A                         recebeGuardaNome@nameRx 0020  
                       recebeGuardaNome@rxChar 0079                                    _EUSART_Read 045D  
                                    enviaMsg@i 0076                                   ??_enviaNomes 0078  
                                   _EECON1bits 0195                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0035                               _recebeGuardaNome 0593  
                           __end_of_enviaNomes 06D3                                       __ptext10 04E5  
                                     __ptext11 046C                                       __ptext20 040D  
                                     __ptext12 0425                                       __ptext13 0450  
                                     __ptext14 0404                                       __ptext15 0481  
                                     __ptext16 0444                                       __ptext17 0499  
                                     __ptext18 0419                                       __ptext19 0413  
                                     _bufferRx 003C                                       _enviaMsg 04BB  
                      ?_EUSART_SetErrorHandler 0070                                    ??_analisaRx 007B  
EUSART_SetOverrunErrorHandler@interruptHandler 0070          __end_of_EUSART_SetFramingErrorHandler 0419  
                _EUSART_SetFramingErrorHandler 0413                                ___eecpymem@from 0070  
                              ___eecpymem@size 0071                                     _INTCONbits 000B  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0413  
                               analisaRx@i_426 0047  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                __pstringtext1 0800                                  __pstringtext2 0832  
                                __pstringtext3 0858                                  __pstringtext4 087E  
                                __pstringtext5 08A2                                  __pstringtext6 08BE  
                                __pstringtext7 08D4                                  __pstringtext8 08EA  
                                __pstringtext9 08F9                                  ___eecpymem@cp 0074  
                                ___eecpymem@to 0075                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 0499                                     _STATUSbits 0003  
                                 ___eetoc@addr 0076                                   ___eetoc@data 0077  
